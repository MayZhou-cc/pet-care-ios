{"ast":null,"code":"import _classCallCheck from\"@babel/runtime/helpers/classCallCheck\";import _createClass from\"@babel/runtime/helpers/createClass\";import _inherits from\"@babel/runtime/helpers/inherits\";import _possibleConstructorReturn from\"@babel/runtime/helpers/possibleConstructorReturn\";import _getPrototypeOf from\"@babel/runtime/helpers/getPrototypeOf\";import _toConsumableArray from\"@babel/runtime/helpers/toConsumableArray\";import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";function _createSuper(Derived){var hasNativeReflectConstruct=_isNativeReflectConstruct();return function _createSuperInternal(){var Super=_getPrototypeOf(Derived),result;if(hasNativeReflectConstruct){var NewTarget=_getPrototypeOf(this).constructor;result=Reflect.construct(Super,arguments,NewTarget);}else{result=Super.apply(this,arguments);}return _possibleConstructorReturn(this,result);};}function _isNativeReflectConstruct(){if(typeof Reflect===\"undefined\"||!Reflect.construct)return false;if(Reflect.construct.sham)return false;if(typeof Proxy===\"function\")return true;try{Date.prototype.toString.call(Reflect.construct(Date,[],function(){}));return true;}catch(e){return false;}}import React,{Component,useState,useEffect}from\"react\";import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import View from\"react-native-web/dist/exports/View\";import Text from\"react-native-web/dist/exports/Text\";import TouchableOpacity from\"react-native-web/dist/exports/TouchableOpacity\";import Image from\"react-native-web/dist/exports/Image\";import Alert from\"react-native-web/dist/exports/Alert\";import ImageBackground from\"react-native-web/dist/exports/ImageBackground\";import Icon from\"@expo/vector-icons/Ionicons\";import{createAppContainer}from\"react-navigation\";import{createMaterialTopTabNavigator}from'react-navigation-tabs';import{fb,Fire}from\"../src/firebase/APIKeys.js\";import*as firebase from\"firebase\";import Header from\"../components/Header\";var baseHealth=0;var baseStatus=0;var baseCurrency=0;var userid=Fire.shared.user._id;(function(){return readData();});function readData(){userid=Fire.shared.user._id;firebase.database().ref(\"response/\"+userid+\"/avatarHealth\").once(\"value\",function(dataSnapShot){baseHealth=dataSnapShot.val();});firebase.database().ref(\"response/\"+userid+\"/avatarStatus\").once(\"value\",function(dataSnapShot){baseStatus=dataSnapShot.val();});firebase.database().ref(\"response/\"+userid+\"/currency\").once(\"value\",function(dataSnapShot){baseCurrency=dataSnapShot.val();});}function completeQuest(rewardHealth){baseHealth+=rewardHealth[\"avatarHealth\"];baseStatus+=rewardHealth[\"avatarStatus\"];baseCurrency+=rewardHealth[\"shopCurrency\"];if(baseHealth>=100){fb.database().ref(\"response/\"+userid+\"/\").update({avatarHealth:100,avatarStatus:baseStatus,currency:baseCurrency}).then(function(){console.log(\"Completed a quest\");}).catch(function(error){console.log(error);});}else{fb.database().ref(\"response/\"+userid+\"/\").update({avatarHealth:baseHealth,avatarStatus:baseStatus,currency:baseCurrency}).then(function(){console.log(\"Completed a quest\");}).catch(function(error){console.log(error);});}}var updating=function updating(id,progress){return new Promise(function(resolve,reject){var key;if(id!=null){key=id;}else{key=fb.database().ref().push().key;}var complete={questCompletion:progress[\"questMaxValue\"],questMaxValue:progress[\"questMaxValue\"]};var dataToSave={questID:key,questProgress:complete};fb.database().ref(\"/response/\"+userid+\"/quests/\"+key).update(dataToSave).then(function(snapshot){resolve(snapshot);}).catch(function(err){reject(err);});});};function ReadAllTab(){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),quests=_useState2[0],allQuests=_useState2[1];useEffect(function(){var questRef=firebase.database().ref(\"/response/\"+userid+\"/quests/\");var OnLoadingListener=questRef.on(\"value\",function(snapshot){allQuests([]);snapshot.forEach(function(childSnapshot){allQuests(function(quests){return[].concat(_toConsumableArray(quests),[childSnapshot.val()]);});});});return function(){questRef.off(\"value\",OnLoadingListener);};},[]);return React.createElement(View,null,quests.map(function(item){return React.createElement(TouchableOpacity,{key:item[\"questID\"],style:styles.textContainer,onPress:function onPress(){return Alert.alert(\"Task Complete?\",\"Confirm and get rewards:  \\nHealth: \"+item[\"questReward\"][\"avatarHealth\"]+\"\\nHappiness: \"+item[\"questReward\"][\"avatarStatus\"],[{text:\"Cancel\",onPress:function onPress(){return console.log(\"click cancel\");},style:\"cancel\"},{text:\"OK\",onPress:function onPress(){return completeQuest(item[\"questReward\"]);}}],{cancelable:false});}},React.createElement(View,{style:styles.taskDiv},React.createElement(Text,{style:styles.taskTitle},\" \",item[\"questName\"]),React.createElement(Text,{style:styles.rewardPoint},\"+ \",item[\"questReward\"][\"avatarHealth\"],React.createElement(Icon,{name:\"md-heart\",color:\"red\",size:20}))),React.createElement(Text,null,\" \",item[\"questDescription\"]));}));}ReadAllTab.navigationOptions={tabBarIcon:function tabBarIcon(_ref){var tintColor=_ref.tintColor,focused=_ref.focused;return React.createElement(Icon,{name:focused?\"ios-cube\":\"md-cube\",color:tintColor,size:25});}};function InProgreeTab(){var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),inProgress=_useState4[0],allInProgressQuests=_useState4[1];useEffect(function(){var questRef=firebase.database().ref(\"/response/\"+userid+\"/quests/\");var OnLoadingListener=questRef.on(\"value\",function(snapshot){allInProgressQuests([]);snapshot.forEach(function(childSnapshot){allInProgressQuests(function(inProgress){return[].concat(_toConsumableArray(inProgress),[childSnapshot.val()]);});});});return function(){questRef.off(\"value\",OnLoadingListener);};},[]);return React.createElement(View,null,inProgress.map(function(item){if(item[\"questProgress\"][\"questCompletion\"]>=0&&item[\"questProgress\"][\"questCompletion\"]!=item[\"questProgress\"][\"questMaxValue\"]){return React.createElement(TouchableOpacity,{key:item[\"questID\"],style:styles.textContainer,onPress:function onPress(){return Alert.alert(\"Your Progress\",\"You have finished \"+item[\"questReward\"][\"avatarHealth\"]+\"/\"+item[\"questReward\"][\"avatarStatus\"]+\" of the task, good job and go on\",[{text:\"Cancel\",onPress:function onPress(){return console.log(\"click cancel\");},style:\"cancel\"},{text:\"OK\",onPress:function onPress(){completeQuest(item[\"questReward\"]);updating(item[\"questID\"],item[\"questProgress\"]);}}],{cancelable:false});}},React.createElement(View,{style:styles.taskDiv},React.createElement(Text,{style:styles.taskTitle},\" \",item[\"questName\"]),React.createElement(Text,{style:styles.rewardPoint},\"+ \",item[\"questReward\"][\"avatarHealth\"],React.createElement(Icon,{name:\"md-heart\",color:\"red\",size:20}))),React.createElement(Text,null,\" \",item[\"questDescription\"]));}}));}InProgreeTab.navigationOptions={tabBarIcon:function tabBarIcon(_ref2){var tintColor=_ref2.tintColor,focused=_ref2.focused;return React.createElement(Icon,{name:focused?\"ios-stats\":\"ios-stats\",color:tintColor,size:25});}};function CompletionTab(){var _useState5=useState([]),_useState6=_slicedToArray(_useState5,2),completedQuest=_useState6[0],allCompletedQuests=_useState6[1];useEffect(function(){var questRef=firebase.database().ref(\"/response/\"+userid+\"/quests/\");var OnLoadingListener=questRef.on(\"value\",function(snapshot){allCompletedQuests([]);snapshot.forEach(function(childSnapshot){allCompletedQuests(function(completedQuest){return[].concat(_toConsumableArray(completedQuest),[childSnapshot.val()]);});});});return function(){questRef.off(\"value\",OnLoadingListener);};},[]);return React.createElement(View,null,completedQuest.map(function(item){if(item[\"questProgress\"][\"questCompletion\"]==item[\"questProgress\"][\"questMaxValue\"]){{return React.createElement(TouchableOpacity,{key:item[\"questID\"],style:styles.textContainer},React.createElement(View,{style:styles.taskDiv},React.createElement(Text,{style:styles.taskTitle},\" \",item[\"questName\"]),React.createElement(Text,{style:styles.rewardPoint},\"+ \",item[\"questReward\"][\"avatarHealth\"],React.createElement(Icon,{name:\"md-checkmark\",color:\"green\",size:20}))),React.createElement(Text,null,\" \",item[\"questDescription\"]));}}}));}CompletionTab.navigationOptions={tabBarIcon:function tabBarIcon(_ref3){var tintColor=_ref3.tintColor,focused=_ref3.focused;return React.createElement(Icon,{name:focused?\"ios-flag\":\"ios-flag\",color:tintColor,size:25});}};var Tab=createMaterialTopTabNavigator({All:ReadAllTab,Inprogress:InProgreeTab,Completed:CompletionTab},{tabBarOptions:{activeTintColor:\"black\",showIcon:true,showLabel:true,style:{borderColor:\"black\",backgroundColor:\"#FF6600\"}}});var AppIndex=createAppContainer(Tab);var QuestScreen=function(_Component){_inherits(QuestScreen,_Component);var _super=_createSuper(QuestScreen);function QuestScreen(props){var _this;_classCallCheck(this,QuestScreen);_this=_super.call(this,props);_this.state={questCompletion:0,avatarStatus:0,avatarHealth:0,avatarCurrency:0};if(!firebase.apps.length){firebase.initializeApp(ApiKeys.FirebaseConfig);}readData();return _this;}_createClass(QuestScreen,[{key:\"componentDidMount\",value:function componentDidMount(){var _this2=this;userid=Fire.shared.user._id;this.setState({avatarHealth:baseHealth,avatarStatus:baseStatus,avatarCurrency:baseCurrency});fb.database().ref(\"response/\"+userid+\"/currency\").on(\"value\",function(querySnapShot){var data=querySnapShot.val()?querySnapShot.val():{};_this2.setState({avatarCurrency:data});});}},{key:\"render\",value:function render(){return React.createElement(View,{style:styles.MainContainer},React.createElement(ImageBackground,{source:require(\"../assets/BackgroundOrange.png\"),style:styles.backgroundImage},React.createElement(Header,{props:this.props,pageName:\"Quest\",baseCurrency:this.state.avatarCurrency}),React.createElement(AppIndex,null)));}}]);return QuestScreen;}(Component);export{QuestScreen as default};var styles=StyleSheet.create({backgroundImage:{flex:1,resizeMode:\"cover\",justifyContent:\"center\"},MainContainer:{flex:1,flexDirection:\"column\"},navBar:{flexDirection:\"row\",justifyContent:\"space-evenly\"},taskCard:{flex:5,backgroundColor:\"#fff\",borderColor:\"black\",borderWidth:1,margin:10,justifyContent:\"center\"},taskDiv:{flexDirection:\"row\",justifyContent:\"space-between\"},taskTitle:{fontSize:20},rewardPoint:{fontSize:20,color:\"darkblue\"},taskbody:{flex:1,fontSize:14},taskDone:{borderColor:\"#737373\",backgroundColor:\"darkgrey\"},Content:{flex:10,backgroundColor:\"#fff\",marginTop:\"15%\"},textContainer:{padding:10,marginTop:3,backgroundColor:\"white\",borderColor:\"darkgrey\",borderWidth:1}});","map":{"version":3,"sources":["/Users/mayzhou/development/React_Native/SelfMiniProject/pet-care/screens/QuestScreen.js"],"names":["React","Component","useState","useEffect","Icon","createAppContainer","createMaterialTopTabNavigator","fb","Fire","firebase","Header","baseHealth","baseStatus","baseCurrency","userid","shared","user","_id","readData","database","ref","once","dataSnapShot","val","completeQuest","rewardHealth","update","avatarHealth","avatarStatus","currency","then","console","log","catch","error","updating","id","progress","Promise","resolve","reject","key","push","complete","questCompletion","questMaxValue","dataToSave","questID","questProgress","snapshot","err","ReadAllTab","quests","allQuests","questRef","OnLoadingListener","on","forEach","childSnapshot","off","map","item","styles","textContainer","Alert","alert","text","onPress","style","cancelable","taskDiv","taskTitle","rewardPoint","navigationOptions","tabBarIcon","tintColor","focused","InProgreeTab","inProgress","allInProgressQuests","CompletionTab","completedQuest","allCompletedQuests","Tab","All","Inprogress","Completed","tabBarOptions","activeTintColor","showIcon","showLabel","borderColor","backgroundColor","AppIndex","QuestScreen","props","state","avatarCurrency","apps","length","initializeApp","ApiKeys","FirebaseConfig","setState","querySnapShot","data","MainContainer","require","backgroundImage","StyleSheet","create","flex","resizeMode","justifyContent","flexDirection","navBar","taskCard","borderWidth","margin","fontSize","color","taskbody","taskDone","Content","marginTop","padding"],"mappings":"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","sourcesContent":["import React, { Component, useState, useEffect } from \"react\";\r\nimport {\r\n  StyleSheet,\r\n  View,\r\n  Text,\r\n  TouchableOpacity,\r\n  Image,\r\n  Alert,\r\n  ImageBackground,\r\n} from \"react-native\";\r\nimport Icon from \"react-native-vector-icons/Ionicons\";\r\nimport { createAppContainer } from \"react-navigation\";\r\nimport { createMaterialTopTabNavigator } from 'react-navigation-tabs';\r\nimport { fb, Fire } from \"../src/firebase/APIKeys.js\";\r\nimport * as firebase from \"firebase\";\r\nimport Header from \"../components/Header\";\r\nvar baseHealth = 0;\r\nvar baseStatus = 0;\r\nvar baseCurrency = 0;\r\nvar userid = Fire.shared.user._id;\r\n() => readData();\r\n//Fetching data from firebase console\r\nfunction readData() {\r\n  userid = Fire.shared.user._id;\r\n  firebase.database()\r\n    .ref(\"response/\" + userid + \"/avatarHealth\")\r\n    .once(\"value\", (dataSnapShot) => {\r\n      baseHealth = dataSnapShot.val();\r\n    });\r\n  firebase.database()\r\n    .ref(\"response/\" + userid + \"/avatarStatus\")\r\n    .once(\"value\", (dataSnapShot) => {\r\n      baseStatus = dataSnapShot.val();\r\n    });\r\n  firebase.database()\r\n    .ref(\"response/\" + userid + \"/currency\")\r\n    .once(\"value\", (dataSnapShot) => {\r\n      baseCurrency = dataSnapShot.val();\r\n    });\r\n}\r\n//Updating completed Quest to avatar stats\r\nfunction completeQuest(rewardHealth) {\r\n  baseHealth += rewardHealth[\"avatarHealth\"];\r\n  baseStatus += rewardHealth[\"avatarStatus\"];\r\n  baseCurrency += rewardHealth[\"shopCurrency\"];\r\n  if (baseHealth >= 100) {\r\n    fb.database()\r\n      .ref(\"response/\" + userid + \"/\")\r\n      .update({\r\n        avatarHealth: 100,\r\n        avatarStatus: baseStatus,\r\n        currency: baseCurrency,\r\n      })\r\n      .then(() => {\r\n        console.log(\"Completed a quest\");\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  } else {\r\n    fb.database()\r\n      .ref(\"response/\" + userid + \"/\")\r\n      .update({\r\n        avatarHealth: baseHealth,\r\n        avatarStatus: baseStatus,\r\n        currency: baseCurrency,\r\n      })\r\n      .then(() => {\r\n        console.log(\"Completed a quest\");\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  }\r\n}\r\n\r\n// Updating Quest after a quest has been completed.\r\nconst updating = (id, progress) => {\r\n  return new Promise(function (resolve, reject) {\r\n    let key;\r\n    if (id != null) {\r\n      key = id;\r\n    } else {\r\n      key = fb.database().ref().push().key;\r\n    }\r\n    let complete = {\r\n      questCompletion: progress[\"questMaxValue\"],\r\n      questMaxValue: progress[\"questMaxValue\"],\r\n    };\r\n    let dataToSave = {\r\n      questID: key,\r\n      questProgress: complete,\r\n    };\r\n    fb.database()\r\n      .ref(\"/response/\" + userid + \"/quests/\" + key)\r\n      .update(dataToSave)\r\n      .then((snapshot) => {\r\n        resolve(snapshot);\r\n      })\r\n      .catch((err) => {\r\n        reject(err);\r\n      });\r\n  });\r\n};\r\n//All Quests Tab\r\nfunction ReadAllTab() {\r\n  const [quests, allQuests] = useState([]);\r\n  useEffect(() => {\r\n    const questRef = firebase.database().ref(\"/response/\" + userid + \"/quests/\");\r\n    const OnLoadingListener = questRef.on(\"value\", (snapshot) => {\r\n      allQuests([]);\r\n      snapshot.forEach(function (childSnapshot) {\r\n        allQuests((quests) => [...quests, childSnapshot.val()]);\r\n      });\r\n    });\r\n    return () => {\r\n      questRef.off(\"value\", OnLoadingListener);\r\n    };\r\n  }, []);\r\n  return (\r\n    <View>\r\n      {quests.map(function (item) {\r\n        return (\r\n          <TouchableOpacity\r\n            key={item[\"questID\"]}\r\n            style={styles.textContainer}\r\n            onPress={() =>\r\n              Alert.alert(\r\n                \"Task Complete?\",\r\n                \"Confirm and get rewards:  \\nHealth: \" +\r\n                item[\"questReward\"][\"avatarHealth\"] +\r\n                \"\\nHappiness: \" +\r\n                item[\"questReward\"][\"avatarStatus\"],\r\n                [\r\n                  {\r\n                    text: \"Cancel\",\r\n                    onPress: () => console.log(\"click cancel\"),\r\n                    style: \"cancel\",\r\n                  },\r\n                  {\r\n                    text: \"OK\",\r\n                    onPress: () => completeQuest(item[\"questReward\"]),\r\n                  },\r\n                ],\r\n                { cancelable: false }\r\n              )\r\n            }\r\n          >\r\n            <View style={styles.taskDiv}>\r\n              <Text style={styles.taskTitle}> {item[\"questName\"]}</Text>\r\n              <Text style={styles.rewardPoint}>\r\n                + {item[\"questReward\"][\"avatarHealth\"]}\r\n                <Icon name={\"md-heart\"} color={\"red\"} size={20} />\r\n              </Text>\r\n            </View>\r\n            <Text> {item[\"questDescription\"]}</Text>\r\n          </TouchableOpacity>\r\n        );\r\n      })}\r\n    </View>\r\n  );\r\n}\r\nReadAllTab.navigationOptions = {\r\n  tabBarIcon: ({ tintColor, focused }) => (\r\n    <Icon name={focused ? \"ios-cube\" : \"md-cube\"} color={tintColor} size={25} />\r\n  ),\r\n};\r\n//InProgress Quest Tab\r\nfunction InProgreeTab() {\r\n  const [inProgress, allInProgressQuests] = useState([]);\r\n  useEffect(() => {\r\n    const questRef = firebase.database().ref(\"/response/\" + userid + \"/quests/\");\r\n    const OnLoadingListener = questRef.on(\"value\", (snapshot) => {\r\n      allInProgressQuests([]);\r\n      snapshot.forEach(function (childSnapshot) {\r\n        allInProgressQuests((inProgress) => [\r\n          ...inProgress,\r\n          childSnapshot.val(),\r\n        ]);\r\n        // }\r\n      });\r\n    });\r\n    return () => {\r\n      questRef.off(\"value\", OnLoadingListener);\r\n    };\r\n  }, []);\r\n  return (\r\n    <View>\r\n      {inProgress.map(function (item) {\r\n        if (\r\n          item[\"questProgress\"][\"questCompletion\"] >= 0 &&\r\n          item[\"questProgress\"][\"questCompletion\"] !=\r\n          item[\"questProgress\"][\"questMaxValue\"]\r\n        ) {\r\n          return (\r\n            <TouchableOpacity\r\n              key={item[\"questID\"]}\r\n              style={styles.textContainer}\r\n              onPress={() =>\r\n                Alert.alert(\r\n                  \"Your Progress\",\r\n                  \"You have finished \" +\r\n                  item[\"questReward\"][\"avatarHealth\"] +\r\n                  \"/\" +\r\n                  item[\"questReward\"][\"avatarStatus\"] +\r\n                  \" of the task, good job and go on\",\r\n                  [\r\n                    {\r\n                      text: \"Cancel\",\r\n                      onPress: () => console.log(\"click cancel\"),\r\n                      style: \"cancel\",\r\n                    },\r\n                    {\r\n                      text: \"OK\",\r\n                      onPress: () => {\r\n                        completeQuest(item[\"questReward\"]);\r\n                        updating(item[\"questID\"], item[\"questProgress\"]);\r\n                      },\r\n                    },\r\n                  ],\r\n                  { cancelable: false }\r\n                )\r\n              }\r\n            >\r\n              <View style={styles.taskDiv}>\r\n                <Text style={styles.taskTitle}> {item[\"questName\"]}</Text>\r\n                <Text style={styles.rewardPoint}>\r\n                  + {item[\"questReward\"][\"avatarHealth\"]}\r\n                  <Icon name={\"md-heart\"} color={\"red\"} size={20} />\r\n                </Text>\r\n              </View>\r\n              <Text> {item[\"questDescription\"]}</Text>\r\n            </TouchableOpacity>\r\n          );\r\n        }\r\n      })}\r\n    </View>\r\n  );\r\n}\r\nInProgreeTab.navigationOptions = {\r\n  tabBarIcon: ({ tintColor, focused }) => (\r\n    <Icon\r\n      name={focused ? \"ios-stats\" : \"ios-stats\"}\r\n      color={tintColor}\r\n      size={25}\r\n    />\r\n  ),\r\n};\r\n//Completed Quest Tab\r\nfunction CompletionTab() {\r\n  const [completedQuest, allCompletedQuests] = useState([]);\r\n  useEffect(() => {\r\n    const questRef = firebase.database().ref(\"/response/\" + userid + \"/quests/\");\r\n    const OnLoadingListener = questRef.on(\"value\", (snapshot) => {\r\n      allCompletedQuests([]);\r\n      snapshot.forEach(function (childSnapshot) {\r\n        allCompletedQuests((completedQuest) => [\r\n          ...completedQuest,\r\n          childSnapshot.val(),\r\n        ]);\r\n        // }\r\n      });\r\n    });\r\n    return () => {\r\n      questRef.off(\"value\", OnLoadingListener);\r\n    };\r\n  }, []);\r\n  return (\r\n    <View>\r\n      {completedQuest.map(function (item) {\r\n        if (\r\n          item[\"questProgress\"][\"questCompletion\"] ==\r\n          item[\"questProgress\"][\"questMaxValue\"]\r\n        ) {\r\n          {\r\n            return (\r\n              <TouchableOpacity\r\n                key={item[\"questID\"]}\r\n                style={styles.textContainer}\r\n              >\r\n                <View style={styles.taskDiv}>\r\n                  <Text style={styles.taskTitle}> {item[\"questName\"]}</Text>\r\n                  <Text style={styles.rewardPoint}>\r\n                    + {item[\"questReward\"][\"avatarHealth\"]}\r\n                    <Icon name={\"md-checkmark\"} color={\"green\"} size={20} />\r\n                  </Text>\r\n                </View>\r\n                <Text> {item[\"questDescription\"]}</Text>\r\n              </TouchableOpacity>\r\n            );\r\n          }\r\n        }\r\n      })}\r\n    </View>\r\n  );\r\n}\r\nCompletionTab.navigationOptions = {\r\n  tabBarIcon: ({ tintColor, focused }) => (\r\n    <Icon\r\n      name={focused ? \"ios-flag\" : \"ios-flag\"}\r\n      color={tintColor}\r\n      size={25}\r\n    />\r\n  ),\r\n};\r\n\r\nconst Tab = createMaterialTopTabNavigator(\r\n  {\r\n    All: ReadAllTab,\r\n    Inprogress: InProgreeTab,\r\n    Completed: CompletionTab,\r\n  },\r\n  {\r\n    tabBarOptions: {\r\n      activeTintColor: \"black\",\r\n      showIcon: true,\r\n      showLabel: true,\r\n      style: {\r\n        borderColor: \"black\",\r\n        backgroundColor: \"#FF6600\",\r\n      },\r\n    },\r\n  }\r\n);\r\nconst AppIndex = createAppContainer(Tab);\r\n\r\nexport default class QuestScreen extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      questCompletion: 0,\r\n      avatarStatus: 0,\r\n      avatarHealth: 0,\r\n      avatarCurrency: 0,\r\n    };\r\n    if (!firebase.apps.length) {\r\n      firebase.initializeApp(ApiKeys.FirebaseConfig);\r\n    }\r\n    readData();\r\n  }\r\n  //Component Update Trigger Rendering\r\n  componentDidMount() {\r\n    userid = Fire.shared.user._id;\r\n    this.setState({ avatarHealth: baseHealth, avatarStatus: baseStatus, avatarCurrency: baseCurrency });\r\n    fb.database()\r\n      .ref(\"response/\" + userid + \"/currency\")\r\n      .on(\"value\", (querySnapShot) => {\r\n        let data = querySnapShot.val() ? querySnapShot.val() : {};\r\n        this.setState({\r\n          avatarCurrency: data,\r\n        });\r\n      });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <View style={styles.MainContainer}>\r\n        <ImageBackground\r\n          source={require(\"../assets/BackgroundOrange.png\")}\r\n          style={styles.backgroundImage}\r\n        >\r\n          <Header props={this.props} pageName=\"Quest\" baseCurrency={this.state.avatarCurrency} />\r\n          <AppIndex />\r\n        </ImageBackground>\r\n      </View>\r\n    );\r\n  }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  backgroundImage: {\r\n    flex: 1,\r\n    resizeMode: \"cover\",\r\n    justifyContent: \"center\",\r\n  },\r\n  MainContainer: {\r\n    flex: 1,\r\n    flexDirection: \"column\",\r\n  },\r\n\r\n  navBar: {\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-evenly\",\r\n  },\r\n\r\n  taskCard: {\r\n    flex: 5,\r\n    backgroundColor: \"#fff\",\r\n    borderColor: \"black\",\r\n    borderWidth: 1,\r\n    margin: 10,\r\n    justifyContent: \"center\",\r\n  },\r\n\r\n  taskDiv: {\r\n    // flex: 1,\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-between\",\r\n  },\r\n\r\n  taskTitle: {\r\n    fontSize: 20,\r\n  },\r\n\r\n  rewardPoint: {\r\n    fontSize: 20,\r\n    color: \"darkblue\",\r\n  },\r\n\r\n  taskbody: {\r\n    flex: 1,\r\n    fontSize: 14,\r\n  },\r\n\r\n  taskDone: {\r\n    borderColor: \"#737373\",\r\n    backgroundColor: \"darkgrey\",\r\n  },\r\n\r\n  Content: {\r\n    flex: 10,\r\n    backgroundColor: \"#fff\",\r\n    marginTop: \"15%\",\r\n  },\r\n\r\n  textContainer: {\r\n    padding: 10,\r\n    marginTop: 3,\r\n    backgroundColor: \"white\",\r\n    borderColor: \"darkgrey\",\r\n    borderWidth: 1,\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}