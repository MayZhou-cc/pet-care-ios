{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\s4397674\\\\Documents\\\\PP\\\\test\\\\components\\\\auth\\\\SignupScreen.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { NavigationActions } from \"react-navigation\";\nimport * as firebase from \"firebase\";\n\nvar SignUpScreen = function (_Component) {\n  _inherits(SignUpScreen, _Component);\n\n  var _super = _createSuper(SignUpScreen);\n\n  function SignUpScreen(props) {\n    var _this;\n\n    _classCallCheck(this, SignUpScreen);\n\n    _this = _super.call(this, props);\n\n    _this.onSignupPress = function () {\n      if (_this.state.password !== _this.state.passwordConfirm) {\n        Alert.alert(\"Passwords do not match\");\n        return;\n      }\n\n      firebase.auth().createUserWithEmailAndPassword(_this.state.email, _this.state.password).then(function () {}, function (error) {\n        Alert.alert(error.message);\n      });\n    };\n\n    _this.onBackToLoginPress = function () {\n      var navActions = NavigationActions.reset({\n        index: 0,\n        actions: [NavigationActions.navigate({\n          routeName: \"Login\"\n        })]\n      });\n\n      _this.props.navigation.dispatch(navActions);\n    };\n\n    _this.state = {\n      email: \"\",\n      password: \"\",\n      passwordConfirm: \"\"\n    };\n    return _this;\n  }\n\n  _createClass(SignUpScreen, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Text, {\n        style: {\n          paddingTop: 20\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 12\n        }\n      }, \"SignUpScreen\");\n    }\n  }]);\n\n  return SignUpScreen;\n}(Component);\n\nexport { SignUpScreen as default };\nvar style = StyleSheet.create({});","map":{"version":3,"sources":["C:/Users/s4397674/Documents/PP/test/components/auth/SignupScreen.js"],"names":["React","Component","NavigationActions","firebase","SignUpScreen","props","onSignupPress","state","password","passwordConfirm","Alert","alert","auth","createUserWithEmailAndPassword","email","then","error","message","onBackToLoginPress","navActions","reset","index","actions","navigate","routeName","navigation","dispatch","paddingTop","style","StyleSheet","create"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;;;;;AAEA,SAASC,iBAAT,QAAkC,kBAAlC;AACA,OAAO,KAAKC,QAAZ,MAA0B,UAA1B;;IAEqBC,Y;;;;;AACnB,wBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,8BAAMA,KAAN;;AADiB,UASnBC,aATmB,GASH,YAAM;AACpB,UAAI,MAAKC,KAAL,CAAWC,QAAX,KAAwB,MAAKD,KAAL,CAAWE,eAAvC,EAAwD;AACtDC,QAAAA,KAAK,CAACC,KAAN,CAAY,wBAAZ;AACA;AACD;;AAEDR,MAAAA,QAAQ,CACLS,IADH,GAEGC,8BAFH,CAEkC,MAAKN,KAAL,CAAWO,KAF7C,EAEoD,MAAKP,KAAL,CAAWC,QAF/D,EAGGO,IAHH,CAII,YAAM,CAAE,CAJZ,EAKI,UAACC,KAAD,EAAW;AACTN,QAAAA,KAAK,CAACC,KAAN,CAAYK,KAAK,CAACC,OAAlB;AACD,OAPL;AASD,KAxBkB;;AAAA,UA0BnBC,kBA1BmB,GA0BE,YAAM;AACzB,UAAIC,UAAU,GAAGjB,iBAAiB,CAACkB,KAAlB,CAAwB;AACvCC,QAAAA,KAAK,EAAE,CADgC;AAEvCC,QAAAA,OAAO,EAAE,CAACpB,iBAAiB,CAACqB,QAAlB,CAA2B;AAAEC,UAAAA,SAAS,EAAE;AAAb,SAA3B,CAAD;AAF8B,OAAxB,CAAjB;;AAIA,YAAKnB,KAAL,CAAWoB,UAAX,CAAsBC,QAAtB,CAA+BP,UAA/B;AACD,KAhCkB;;AAEjB,UAAKZ,KAAL,GAAa;AACXO,MAAAA,KAAK,EAAE,EADI;AAEXN,MAAAA,QAAQ,EAAE,EAFC;AAGXC,MAAAA,eAAe,EAAE;AAHN,KAAb;AAFiB;AAOlB;;;;6BA2BQ;AACP,aAAO,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAAEkB,UAAAA,UAAU,EAAE;AAAd,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAAP;AACD;;;;EArCuC1B,S;;SAArBG,Y;AAwCrB,IAAMwB,KAAK,GAAGC,UAAU,CAACC,MAAX,CAAkB,EAAlB,CAAd","sourcesContent":["import React, { Component } from \"react\";\r\nimport { StyleSheet, View, Text, TextInput, Button, Alert } from \"react-native\";\r\nimport { NavigationActions } from \"react-navigation\";\r\nimport * as firebase from \"firebase\";\r\n\r\nexport default class SignUpScreen extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      email: \"\",\r\n      password: \"\",\r\n      passwordConfirm: \"\",\r\n    };\r\n  }\r\n\r\n  onSignupPress = () => {\r\n    if (this.state.password !== this.state.passwordConfirm) {\r\n      Alert.alert(\"Passwords do not match\");\r\n      return;\r\n    }\r\n\r\n    firebase\r\n      .auth()\r\n      .createUserWithEmailAndPassword(this.state.email, this.state.password)\r\n      .then(\r\n        () => {},\r\n        (error) => {\r\n          Alert.alert(error.message);\r\n        }\r\n      );\r\n  };\r\n\r\n  onBackToLoginPress = () => {\r\n    var navActions = NavigationActions.reset({\r\n      index: 0,\r\n      actions: [NavigationActions.navigate({ routeName: \"Login\" })],\r\n    });\r\n    this.props.navigation.dispatch(navActions);\r\n  };\r\n\r\n  render() {\r\n    return <Text style={{ paddingTop: 20 }}>SignUpScreen</Text>;\r\n  }\r\n}\r\n\r\nconst style = StyleSheet.create({});\r\n"]},"metadata":{},"sourceType":"module"}