{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\s4397674\\\\Documents\\\\PP\\\\test\\\\components\\\\auth\\\\LogInScreen.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { NavigationActions, StackActions } from \"react-navigation\";\nimport * as firebase from \"firebase\";\n\nvar LogInScreen = function (_Component) {\n  _inherits(LogInScreen, _Component);\n\n  var _super = _createSuper(LogInScreen);\n\n  function LogInScreen(props) {\n    var _this;\n\n    _classCallCheck(this, LogInScreen);\n\n    _this = _super.call(this, props);\n\n    _this.onLoginPress = function () {\n      if (_this.state.email.length === '' && _this.state.password.length === '') {\n        Alert.alert('Enter details to signin!');\n        return;\n      } else {\n        _this.setState({\n          isLoading: true\n        });\n\n        firebase.auth().signInWithEmailAndPassword(_this.state.email, _this.state.password).then(function () {\n          _this.setState({\n            isLoading: false,\n            email: '',\n            password: ''\n          });\n        }, function (error) {\n          Alert.alert(error.message);\n          return;\n        });\n      }\n    };\n\n    _this.onCreateAccountPress = function () {\n      var navActions = StackActions.reset({\n        index: 0,\n        actions: [NavigationActions.navigate({\n          routeName: \"SignUp\"\n        })]\n      });\n\n      _this.props.navigation.dispatch(navActions);\n    };\n\n    _this.onForgotPasswordPress = function () {\n      var navActions = StackActions.reset({\n        index: 0,\n        actions: [NavigationActions.navigate({\n          routeName: \"ForgotPassword\"\n        })]\n      });\n\n      _this.props.navigation.dispatch(navActions);\n    };\n\n    _this.state = {\n      email: '',\n      password: '',\n      isLoading: false\n    };\n    return _this;\n  }\n\n  _createClass(LogInScreen, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      if (this.state.isLoading) {\n        return React.createElement(View, {\n          style: styles.preloader,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 9\n          }\n        }, React.createElement(ActivityIndicator, {\n          size: \"large\",\n          color: \"#9E9E9E\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 11\n          }\n        }));\n      } else {\n        return React.createElement(View, {\n          style: styles.container,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 9\n          }\n        }, React.createElement(Text, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 11\n          }\n        }, \"Login\"), React.createElement(TextInput, {\n          style: styles.inputStyle,\n          value: this.state.email,\n          onChangeText: function onChangeText(text) {\n            _this2.setState({\n              email: text\n            });\n          },\n          placeholder: \"Email\",\n          keyboardType: \"email-address\",\n          autoCapitalize: \"none\",\n          autoCorrect: false,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 11\n          }\n        }), React.createElement(View, {\n          style: {\n            paddingTop: 10\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 11\n          }\n        }), React.createElement(TextInput, {\n          style: styles.inputStyle,\n          value: this.state.password,\n          onChangeText: function onChangeText(text) {\n            _this2.setState({\n              password: text\n            });\n          },\n          placeholder: \"Password\",\n          secureTextEntry: true,\n          autoCapitalize: \"none\",\n          autoCorrect: false,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 11\n          }\n        }), React.createElement(Button, {\n          style: styles.loginText,\n          title: \"Login\",\n          containerStyle: {\n            paddingTop: 10\n          },\n          onPress: function onPress() {\n            return _this2.onLoginPress();\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 11\n          }\n        }), React.createElement(Button, {\n          style: styles.loginText,\n          title: \"Create account...\",\n          onPress: function onPress() {\n            return _this2.props.navigation.navigate(\"Signup\");\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 11\n          }\n        }), React.createElement(Button, {\n          style: styles.loginText,\n          title: \"Forgot Password...\",\n          onPress: function onPress() {\n            return _this2.props.navigation.navigate(\"ForgotPassword\");\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 11\n          }\n        }));\n      }\n    }\n  }]);\n\n  return LogInScreen;\n}(Component);\n\nexport { LogInScreen as default };\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n    padding: 35,\n    backgroundColor: '#fff'\n  },\n  inputStyle: {\n    width: '100%',\n    marginBottom: 15,\n    paddingBottom: 15,\n    alignSelf: \"center\",\n    borderColor: \"#ccc\",\n    borderBottomWidth: 1\n  },\n  loginText: {\n    color: '#3740FE',\n    marginTop: 25,\n    textAlign: 'center'\n  },\n  preloader: {\n    left: 0,\n    right: 0,\n    top: 0,\n    bottom: 0,\n    position: 'absolute',\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: '#fff'\n  }\n});","map":{"version":3,"sources":["C:/Users/s4397674/Documents/PP/test/components/auth/LogInScreen.js"],"names":["React","Component","NavigationActions","StackActions","firebase","LogInScreen","props","onLoginPress","state","email","length","password","Alert","alert","setState","isLoading","auth","signInWithEmailAndPassword","then","error","message","onCreateAccountPress","navActions","reset","index","actions","navigate","routeName","navigation","dispatch","onForgotPasswordPress","styles","preloader","container","inputStyle","text","paddingTop","loginText","StyleSheet","create","flex","display","flexDirection","justifyContent","padding","backgroundColor","width","marginBottom","paddingBottom","alignSelf","borderColor","borderBottomWidth","color","marginTop","textAlign","left","right","top","bottom","position","alignItems"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { View, Text, TextInput, Button, Alert, ActivityIndicator, StyleSheet } from \"react-native\";\r\nimport { NavigationActions, StackActions } from \"react-navigation\";\r\nimport * as firebase from \"firebase\";\r\n\r\nexport default class LogInScreen extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      email: '',\r\n      password: '',\r\n      isLoading: false,\r\n    };\r\n  }\r\n  onLoginPress = () => {\r\n    if (this.state.email.length === '' && this.state.password.length === '') {\r\n      Alert.alert('Enter details to signin!');\r\n      return;\r\n    }\r\n    else {\r\n      this.setState({\r\n        isLoading: true,\r\n      })\r\n      firebase\r\n      .auth()\r\n      .signInWithEmailAndPassword(this.state.email, this.state.password)\r\n      .then(\r\n        () => {\r\n          this.setState({\r\n            isLoading: false,\r\n            email: '',\r\n            password: '',\r\n          })\r\n        },\r\n        (error) => {\r\n          Alert.alert(error.message);\r\n          return;\r\n        }\r\n      );\r\n    }\r\n  };\r\n\r\n  onCreateAccountPress = () => {\r\n      // NavigationActions.navigate(\"SignUp\");\r\n    var navActions = StackActions.reset({\r\n      index: 0,\r\n      actions: [NavigationActions.navigate({ routeName: \"SignUp\" })],\r\n    });\r\n    this.props.navigation.dispatch(navActions);\r\n  };\r\n\r\n  onForgotPasswordPress = () => {\r\n    var navActions = StackActions.reset({\r\n      index: 0,\r\n      actions: [NavigationActions.navigate({ routeName: \"ForgotPassword\" })],\r\n    });\r\n    this.props.navigation.dispatch(navActions);\r\n  };\r\n  render() {\r\n    if(this.state.isLoading) {\r\n      return(\r\n        <View style={styles.preloader}>\r\n          <ActivityIndicator size=\"large\" color=\"#9E9E9E\"/>\r\n        </View>\r\n      )\r\n    }\r\n    else {\r\n      return (\r\n        <View style={styles.container}>\r\n          <Text>Login</Text>\r\n\r\n          <TextInput\r\n            style={styles.inputStyle}\r\n            value={this.state.email}\r\n            onChangeText={(text) => {\r\n              this.setState({ email: text });\r\n            }}\r\n            placeholder=\"Email\"\r\n            keyboardType=\"email-address\"\r\n            autoCapitalize=\"none\"\r\n            autoCorrect={false}\r\n          />\r\n\r\n          <View style={{ paddingTop: 10 }} />\r\n\r\n          <TextInput\r\n            style={styles.inputStyle}\r\n            value={this.state.password}\r\n            onChangeText={(text) => {\r\n              this.setState({ password: text });\r\n            }}\r\n            placeholder=\"Password\"\r\n            secureTextEntry={true}\r\n            autoCapitalize=\"none\"\r\n            autoCorrect={false}\r\n          />\r\n\r\n          <Button\r\n            style={styles.loginText}\r\n            title=\"Login\"\r\n            containerStyle={{ paddingTop: 10 }}\r\n            onPress={() => this.onLoginPress()}\r\n          />\r\n          <Button\r\n            style={styles.loginText}\r\n            title=\"Create account...\"\r\n            onPress={() => this.props.navigation.navigate(\"Signup\")}\r\n          />\r\n          <Button\r\n            style={styles.loginText}\r\n            title=\"Forgot Password...\"\r\n            onPress={() => this.props.navigation.navigate(\"ForgotPassword\")}\r\n          />\r\n        </View>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    justifyContent: \"center\",\r\n    padding: 35,\r\n    backgroundColor: '#fff'\r\n  },\r\n  inputStyle: {\r\n    width: '100%',\r\n    marginBottom: 15,\r\n    paddingBottom: 15,\r\n    alignSelf: \"center\",\r\n    borderColor: \"#ccc\",\r\n    borderBottomWidth: 1\r\n  },\r\n  loginText: {\r\n    color: '#3740FE',\r\n    marginTop: 25,\r\n    textAlign: 'center'\r\n  },\r\n  preloader: {\r\n    left: 0,\r\n    right: 0,\r\n    top: 0,\r\n    bottom: 0,\r\n    position: 'absolute',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    backgroundColor: '#fff'\r\n  }\r\n});\r\n"]},"metadata":{},"sourceType":"module"}