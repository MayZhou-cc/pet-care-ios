{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\s4397674\\\\Documents\\\\PP\\\\test\\\\components\\\\NutritionalScreen.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\n{}\nimport Icon from \"@expo/vector-icons/Ionicons\";\nimport React, { Component } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport { createAppContainer } from \"react-navigation\";\nimport { createMaterialTopTabNavigator } from \"react-navigation-tabs\";\nimport { Tabs } from \"@feuer/react-tabs\";\nimport { FontAwesome, MaterialCommunityIcons } from \"@expo/vector-icons\";\nimport { DataTable } from \"react-native-paper\";\n\nfunction ReadTab() {\n  console.log(\"read tab\");\n  return React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }\n  }, \"Read\"));\n}\n\nReadTab.navigationOptions = {\n  tabBarIcon: function tabBarIcon(_ref) {\n    var tintColor = _ref.tintColor,\n        focused = _ref.focused;\n    return React.createElement(Icon, {\n      name: focused ? \"ios-home\" : \"md-home\",\n      color: tintColor,\n      size: 25,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 5\n      }\n    });\n  }\n};\n\nfunction UnreadTab() {\n  console.log(\"unread tab!\");\n  return React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }\n  }, \"Unread\"));\n}\n\nUnreadTab.navigationOptions = {\n  tabBarIcon: function tabBarIcon(_ref2) {\n    var tintColor = _ref2.tintColor,\n        focused = _ref2.focused;\n    return React.createElement(Icon, {\n      name: focused ? \"ios-person\" : \"md-person\",\n      color: tintColor,\n      size: 25,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 5\n      }\n    });\n  }\n};\nvar TabNavigator = createMaterialTopTabNavigator({\n  Read: ReadTab,\n  Unread: UnreadTab\n}, {\n  tabBarOptions: {\n    activeTintColor: \"white\",\n    showIcon: true,\n    showLabel: false,\n    style: {\n      backgroundColor: \"blue\"\n    }\n  }\n});\nvar AppIndex = createAppContainer(createAppContainer(TabNavigator));\n\nvar NutritionalScreen = function (_Component) {\n  _inherits(NutritionalScreen, _Component);\n\n  var _super = _createSuper(NutritionalScreen);\n\n  function NutritionalScreen(props) {\n    _classCallCheck(this, NutritionalScreen);\n\n    return _super.call(this, props);\n  }\n\n  _createClass(NutritionalScreen, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(View, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 7\n        }\n      }, React.createElement(View, {\n        className: \"NutritionPage\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 9\n        }\n      }, React.createElement(AppIndex, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 11\n        }\n      })));\n    }\n  }]);\n\n  return NutritionalScreen;\n}(Component);\n\nexport { NutritionalScreen as default };\n{}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#5F7EB2\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  tabs: {\n    flex: 1,\n    backgroundColor: \"#D3E3F6\",\n    alignItems: \"flex-start\",\n    justifyContent: \"flex-start\",\n    textAlign: \"left\"\n  }\n});","map":{"version":3,"sources":["C:/Users/s4397674/Documents/PP/test/components/NutritionalScreen.js"],"names":["Icon","React","Component","createAppContainer","createMaterialTopTabNavigator","Tabs","FontAwesome","MaterialCommunityIcons","DataTable","ReadTab","console","log","navigationOptions","tabBarIcon","tintColor","focused","UnreadTab","TabNavigator","Read","Unread","tabBarOptions","activeTintColor","showIcon","showLabel","style","backgroundColor","AppIndex","NutritionalScreen","props","styles","StyleSheet","create","container","flex","alignItems","justifyContent","tabs","textAlign"],"mappings":"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","sourcesContent":["//NutritionScreen.js\r\n\r\n{\r\n  /* \r\ndependencies installed: 1. npm install @feuer/react-tabs\r\n                        2. npm install react-native-paper\r\n*/\r\n}\r\nimport Icon from \"react-native-vector-icons/Ionicons\";\r\nimport React, { Component } from \"react\";\r\nimport { StyleSheet, Text, View, StatusBar } from \"react-native\";\r\nimport { createAppContainer } from \"react-navigation\";\r\nimport { createMaterialTopTabNavigator } from \"react-navigation-tabs\";\r\nimport { Tabs } from \"@feuer/react-tabs\";\r\nimport { FontAwesome, MaterialCommunityIcons } from \"@expo/vector-icons\";\r\nimport { DataTable } from \"react-native-paper\";\r\n// import { NutritionalScreen } from \"./ScreenComponents\";\r\n\r\n// export default NutritionalScreen(\r\n//   {\r\n//     Home: { screen: HomeScreen },\r\n//     Quest: { screen: QuestScreen },\r\n//     NutritionalTips: { screen: NutritionalScreen },\r\n//   },\r\n//   {\r\n//     navigationOptions: ({ navigation }) => ({\r\n//       tabBarIcon: ({ focused }) => {\r\n//         const { routeName } = navigation.state;\r\n//         let iconName;\r\n//         switch (routeName) {\r\n//           case \"Home\":\r\n//             iconName =\r\n//               Platform.OS === \"ios\"\r\n//                 ? `ios-information-circle${focused ? \"\" : \"-outline\"}`\r\n//                 : \"md-information-circle\";\r\n//             break;\r\n//         }\r\n//         return (\r\n//           <Ionicons\r\n//             name={iconName}\r\n//             size={28}\r\n//             style={{ marginBottom: -3 }}\r\n//             color={focused ? Design.tabIconSelected : Design.tabIconDefault}\r\n//           />\r\n//         );\r\n//       },\r\n//     }),\r\n//     tabBarComponent: TabBarBottom,\r\n//     tabBarPosition: \"bottom\",\r\n//     animationEnabled: false,\r\n//     swipeEnabled: false,\r\n//   }\r\n// );\r\nfunction ReadTab() {\r\n  console.log(\"read tab\");\r\n  return (\r\n    <View>\r\n      <Text>Read</Text>\r\n    </View>\r\n  );\r\n}\r\nReadTab.navigationOptions = {\r\n  tabBarIcon: ({ tintColor, focused }) => (\r\n    <Icon name={focused ? \"ios-home\" : \"md-home\"} color={tintColor} size={25} />\r\n  ),\r\n};\r\n\r\nfunction UnreadTab() {\r\n  console.log(\"unread tab!\");\r\n  return (\r\n    <View>\r\n      <Text>Unread</Text>\r\n    </View>\r\n  );\r\n}\r\nUnreadTab.navigationOptions = {\r\n  tabBarIcon: ({ tintColor, focused }) => (\r\n    <Icon\r\n      name={focused ? \"ios-person\" : \"md-person\"}\r\n      color={tintColor}\r\n      size={25}\r\n    />\r\n  ),\r\n};\r\n\r\nconst TabNavigator = createMaterialTopTabNavigator(\r\n  {\r\n    Read: ReadTab,\r\n    Unread: UnreadTab,\r\n  },\r\n  {\r\n    tabBarOptions: {\r\n      activeTintColor: \"white\",\r\n      showIcon: true,\r\n      showLabel: false,\r\n      style: {\r\n        backgroundColor: \"blue\",\r\n      },\r\n    },\r\n  }\r\n);\r\nconst AppIndex = createAppContainer(createAppContainer(TabNavigator));\r\n\r\nexport default class NutritionalScreen extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n  render() {\r\n    return (\r\n      // <View style={styles.container}>\r\n      //   {/*  ICONS  */}\r\n      //   <View style={{ flexDirection: \"row\" }}>\r\n      //     <FontAwesome\r\n      //       style={{ marginLeft: 15 }}\r\n      //       name=\"home\"\r\n      //       size={30}\r\n      //       color=\"white\"\r\n      //     />\r\n      //     <FontAwesome\r\n      //       style={{ marginLeft: 20 }}\r\n      //       name=\"question-circle\"\r\n      //       size={30}\r\n      //       color=\"white\"\r\n      //     />\r\n      //     <MaterialCommunityIcons\r\n      //       style={{ marginLeft: 470, paddingRight: 10 }}\r\n      //       name=\"circle-expand\"\r\n      //       size={30}\r\n      //       color=\"white\"\r\n      //     />\r\n      //     <Text style={{ fontSize: 25 }}>102</Text>\r\n      //   </View>\r\n\r\n      //   {/*  PAGE TITLE  */}\r\n      //   <Text\r\n      //     style={{\r\n      //       textDecorationLine: \"underline\",\r\n      //       fontSize: 25,\r\n      //       textAlign: \"center\",\r\n      //       color: \"#FFFFFF\",\r\n      //       fontWeight: \"bold\",\r\n      //     }}\r\n      //   >\r\n      //     {\" \"}\r\n      //     Nutritional Tips{\" \"}\r\n      //   </Text>\r\n      <View>\r\n        {/* TABS */}\r\n        <View className=\"NutritionPage\">\r\n          {/* <StatusBar backgroundColor=\"blue\" barStyle=\"light-content\" /> */}\r\n          {/* <View style={styles.header}>\r\n            <Icon name=\"ios-camera\" size={28} color=\"white\" />\r\n            <Icon name=\"ios-menu\" size={28} color=\"white\" />\r\n          </View> */}\r\n          <AppIndex />\r\n        </View>\r\n      </View>\r\n\r\n      //         {/*  TABS  */}\r\n      //         <View className=\"NutritionPage\">\r\n      //           <Tabs\r\n      //             tabsProps={{\r\n      //               style: {\r\n      //                 textAlign: \"left\",\r\n      //               },\r\n      //             }}\r\n      //             activeTab={{\r\n      //               id: \"tab1\",\r\n      //             }}\r\n      //           >\r\n      //             <View style={styles.tabs}>\r\n      //               <Tabs.Tab id=\"tab1\" title=\"Unread\">\r\n      //                 <View>\r\n      //                   <DataTable>\r\n      //                     <DataTable.Header>\r\n      //                       <DataTable.Title>[Tip Name]</DataTable.Title>\r\n      //                       <DataTable.Title numeric>\r\n      //                         Type : [Tip Type]\r\n      //                       </DataTable.Title>\r\n      //                       <DataTable.Title numeric>\r\n      //                         Reward :{\" \"}\r\n      //                         <MaterialCommunityIcons\r\n      //                           name=\"circle-expand\"\r\n      //                           size={10}\r\n      //                           color=\"black\"\r\n      //                         />\r\n      //                         5\r\n      //                       </DataTable.Title>\r\n      //                     </DataTable.Header>\r\n\r\n      //                     <DataTable.Row>\r\n      //                       <Text>\r\n      //                         [ Task Desceiption : hubvcouehbv hwivoiebuvberu\r\n      //                         oibrberoivb reboi1rbiv1bre oboiogiv1uerbgo vi1\r\n      //                         rogiv1broigub 1oribgo1i rbgoivu1bro ]\r\n      //                       </Text>\r\n      //                     </DataTable.Row>\r\n\r\n      //                     <DataTable.Header>\r\n      //                       <DataTable.Title>[Tip Name]</DataTable.Title>\r\n      //                       <DataTable.Title numeric>\r\n      //                         Type : [Tip Type]\r\n      //                       </DataTable.Title>\r\n      //                       <DataTable.Title numeric>\r\n      //                         Reward :{\" \"}\r\n      //                         <MaterialCommunityIcons\r\n      //                           name=\"circle-expand\"\r\n      //                           size={10}\r\n      //                           color=\"black\"\r\n      //                         />\r\n      //                         6\r\n      //                       </DataTable.Title>\r\n      //                     </DataTable.Header>\r\n\r\n      //                     <DataTable.Row>\r\n      //                       <Text>\r\n      //                         [ Task Desceiption : hubvcouehbv hwivoiebuvberu oiboivb\r\n      //                         reboi1rbiv1bre ov1rbogigo v1rgboirbgovi1 rogiv1broigub\r\n      //                         1oribgo1i rbgoivu1br ]\r\n      //                       </Text>\r\n      //                     </DataTable.Row>\r\n\r\n      //                     <DataTable.Header>\r\n      //                       <DataTable.Title>[Tip Name]</DataTable.Title>\r\n      //                       <DataTable.Title numeric>\r\n      //                         Type : [Tip Type]\r\n      //                       </DataTable.Title>\r\n      //                       <DataTable.Title numeric>\r\n      //                         Reward :{\" \"}\r\n      //                         <MaterialCommunityIcons\r\n      //                           name=\"circle-expand\"\r\n      //                           size={10}\r\n      //                           color=\"black\"\r\n      //                         />\r\n      //                         6\r\n      //                       </DataTable.Title>\r\n      //                     </DataTable.Header>\r\n\r\n      //                     <DataTable.Row>\r\n      //                       <Text>\r\n      //                         [ Task Desceiption : hubvcouehbv hwivoiebuvberu oiboivb\r\n      //                         reboi1rbiv1bre ov1rbogigo v1rgboirbgovi1 rogiv1broigub\r\n      //                         1oribgo1i rbgoivu1br ]\r\n      //                       </Text>\r\n      //                     </DataTable.Row>\r\n      //                   </DataTable>\r\n      //                 </View>\r\n      //               </Tabs.Tab>\r\n\r\n      //               <View></View>\r\n      //               <Tabs.Tab style={{ color: \"#FFFFFF\" }} id=\"tab2\" title=\"Read\">\r\n      //                 <View>\r\n      //                   <DataTable>\r\n      //                     <DataTable.Header>\r\n      //                       <DataTable.Title>[Tip Name]</DataTable.Title>\r\n      //                       <DataTable.Title numeric>\r\n      //                         Type : [Tip Type]\r\n      //                       </DataTable.Title>\r\n      //                       <DataTable.Title numeric>\r\n      //                         Reward :{\" \"}\r\n      //                         <MaterialCommunityIcons\r\n      //                           name=\"circle-expand\"\r\n      //                           size={10}\r\n      //                           color=\"black\"\r\n      //                         />\r\n      //                         7\r\n      //                       </DataTable.Title>\r\n      //                     </DataTable.Header>\r\n\r\n      //                     <DataTable.Row>\r\n      //                       <Text>\r\n      //                         Task Desceiption : hduhv hbrovh hbrofu yuy uyuy\r\n      //                         idwefcvwdch bwihbwb wiufebf whebf eoiwbc\r\n      //                       </Text>\r\n      //                     </DataTable.Row>\r\n\r\n      //                     <DataTable.Header>\r\n      //                       <DataTable.Title>[Tip Name]</DataTable.Title>\r\n      //                       <DataTable.Title numeric>\r\n      //                         Type : [Tip Type]\r\n      //                       </DataTable.Title>\r\n      //                       <DataTable.Title numeric>\r\n      //                         Reward :{\" \"}\r\n      //                         <MaterialCommunityIcons\r\n      //                           name=\"circle-expand\"\r\n      //                           size={10}\r\n      //                           color=\"black\"\r\n      //                         />\r\n      //                         8\r\n      //                       </DataTable.Title>\r\n      //                     </DataTable.Header>\r\n\r\n      //                     <DataTable.Row>\r\n      //                       <Text>\r\n      //                         Task Desceiption : hduhv hbrovh hbrofu yuy uyuy\r\n      //                         idwefcvwdch bwihbwb wiufebf whebf eoiwbc\r\n      //                       </Text>\r\n      //                     </DataTable.Row>\r\n\r\n      //                     <DataTable.Header>\r\n      //                       <DataTable.Title>[Tip Name]</DataTable.Title>\r\n      //                       <DataTable.Title numeric>\r\n      //                         Type : [Tip Type]\r\n      //                       </DataTable.Title>\r\n      //                       <DataTable.Title style={{ fontWeight: \"bold\" }} numeric>\r\n      //                         Reward :{\" \"}\r\n      //                         <MaterialCommunityIcons\r\n      //                           name=\"circle-expand\"\r\n      //                           size={10}\r\n      //                           color=\"black\"\r\n      //                         />\r\n      //                         20\r\n      //                       </DataTable.Title>\r\n      //                     </DataTable.Header>\r\n\r\n      //                     <DataTable.Row>\r\n      //                       <Text>\r\n      //                         Task Desceiption : hduhv hbrovh hbrofu yuy uyuy\r\n      //                         idwefcvwdch bwihbwb wiufebf whebf eoiwbc\r\n      //                       </Text>\r\n      //                     </DataTable.Row>\r\n      //                   </DataTable>\r\n      //                 </View>\r\n      //               </Tabs.Tab>\r\n      //             </View>\r\n      //           </Tabs>\r\n      //         </View>\r\n      //       </View>\r\n    );\r\n  }\r\n}\r\n\r\n{\r\n  /*  STYLESHEET  */\r\n}\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: \"#5F7EB2\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n\r\n  tabs: {\r\n    flex: 1,\r\n    backgroundColor: \"#D3E3F6\",\r\n    alignItems: \"flex-start\",\r\n    justifyContent: \"flex-start\",\r\n    textAlign: \"left\",\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}