{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\s4397674\\\\Documents\\\\PP\\\\test\\\\App.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport { AppLoading, Asset, Font } from \"expo\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport RootNavigation from \"./navigation/RootNavigation\";\nimport MainTabNavigator from \"./navigation/MainTabNavigation\";\nimport { createStackNavigator } from \"@react-navigation/stack\";\nimport ApiKeys from \"./src/firebase/APIKeys\";\nimport * as firebase from \"firebase\";\nvar Stack = createStackNavigator();\n\nvar App = function (_Component) {\n  _inherits(App, _Component);\n\n  var _super = _createSuper(App);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _super.call(this, props);\n\n    _this.onAuthStateChanged = function (user) {\n      _this.setState({\n        isAuthenticationReady: true\n      });\n\n      _this.setState({\n        isAuthenticated: !!user\n      });\n    };\n\n    _this._loadResourcesAsync = function _callee() {\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              return _context.abrupt(\"return\", Promise.all([Asset.loadAsync([]), Font.loadAsync({})]));\n\n            case 1:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this._handleLoadingError = function (error) {\n      console.warn(error);\n    };\n\n    _this._handleFinishLoading = function () {\n      _this.setState({\n        isLoadingComplete: true\n      });\n    };\n\n    _this.state = {\n      isLoadingComplete: false,\n      isAuthenticationReady: false,\n      isAuthenticated: false\n    };\n\n    if (!firebase.apps.length) {\n      firebase.initializeApp(ApiKeys.FirebaseConfig);\n      firebase.analytics = firebase.analytics();\n    }\n\n    firebase.auth().onAuthStateChanged(_this.onAuthStateChanged);\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      if ((!this.state.isLoadingComplete || !this.state.isAuthenticationReady) && !this.props.skipLoadingScreen) {\n        return React.createElement(AppLoading, {\n          startAsync: this._loadResourcesAsync,\n          onError: this._handleLoadingError,\n          onFinish: this._handleFinishLoading,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 9\n          }\n        });\n      } else {\n        return React.createElement(View, {\n          style: styles.container,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 9\n          }\n        }, Platform.OS === \"ios\" && React.createElement(StatusBar, {\n          barStyle: \"default\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 37\n          }\n        }), Platform.OS === \"android\" && React.createElement(View, {\n          style: styles.statusBarUnderlay,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 13\n          }\n        }), this.state.isAuthenticated ? React.createElement(MainTabNavigator, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 13\n          }\n        }) : React.createElement(RootNavigation, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 13\n          }\n        }));\n      }\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport { App as default };\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#fff\"\n  },\n  statusBarUnderlay: {\n    height: 24,\n    backgroundColor: \"rgba(0,0,0,0.2)\"\n  }\n});","map":{"version":3,"sources":["C:/Users/s4397674/Documents/PP/test/App.js"],"names":["React","Component","AppLoading","Asset","Font","RootNavigation","MainTabNavigator","createStackNavigator","ApiKeys","firebase","Stack","App","props","onAuthStateChanged","user","setState","isAuthenticationReady","isAuthenticated","_loadResourcesAsync","Promise","all","loadAsync","_handleLoadingError","error","console","warn","_handleFinishLoading","isLoadingComplete","state","apps","length","initializeApp","FirebaseConfig","analytics","auth","skipLoadingScreen","styles","container","Platform","OS","statusBarUnderlay","StyleSheet","create","flex","backgroundColor","height"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { AppLoading, Asset, Font } from \"expo\";\r\nimport { StyleSheet, Text, View, Platform } from \"react-native\";\r\nimport RootNavigation from \"./navigation/RootNavigation\";\r\nimport MainTabNavigator from \"./navigation/MainTabNavigation\";\r\nimport { createStackNavigator } from \"@react-navigation/stack\";\r\n\r\nimport ApiKeys from \"./src/firebase/APIKeys\";\r\nimport * as firebase from \"firebase\";\r\n\r\nconst Stack = createStackNavigator();\r\n// const firebase = require(\"firebase/app\");\r\n// require(\"firebase/analytics\");\r\n\r\nexport default class App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isLoadingComplete: false,\r\n      isAuthenticationReady: false,\r\n      isAuthenticated: false,\r\n    };\r\n\r\n    if (!firebase.apps.length) {\r\n      firebase.initializeApp(ApiKeys.FirebaseConfig);\r\n      firebase.analytics = firebase.analytics();\r\n      // firebase.analytics.isSupported().then((isSupported) => {\r\n      //   if (isSupported) {\r\n      //     analytics = firebase.analytics();\r\n      //   }\r\n      // });\r\n    }\r\n    firebase.auth().onAuthStateChanged(this.onAuthStateChanged);\r\n  }\r\n\r\n  onAuthStateChanged = (user) => {\r\n    this.setState({ isAuthenticationReady: true });\r\n    this.setState({ isAuthenticated: !!user });\r\n  };\r\n\r\n  render() {\r\n    if (\r\n      (!this.state.isLoadingComplete || !this.state.isAuthenticationReady) &&\r\n      !this.props.skipLoadingScreen\r\n    ) {\r\n      return (\r\n        <AppLoading\r\n          startAsync={this._loadResourcesAsync}\r\n          onError={this._handleLoadingError}\r\n          onFinish={this._handleFinishLoading}\r\n        />\r\n      );\r\n    } else {\r\n      return (\r\n        <View style={styles.container}>\r\n          {Platform.OS === \"ios\" && <StatusBar barStyle=\"default\" />}\r\n          {Platform.OS === \"android\" && (\r\n            <View style={styles.statusBarUnderlay} />\r\n          )}\r\n          {this.state.isAuthenticated ? (\r\n            <MainTabNavigator />\r\n          ) : (\r\n            <RootNavigation />\r\n          )}\r\n        </View>\r\n      );\r\n      // <NavigationContainer>\r\n      //   <Stack.Navigator>\r\n      //     <Stack.Screen\r\n      //       name=\"Home\"\r\n      //       component={HomeScreen}\r\n      //       options={{ title: \"Supersizers\" }}\r\n      //     />\r\n      //     <Stack.Screen name=\"Quest\" component={QuestScreen} />\r\n      //     <Stack.Screen name=\"Nutritional\" component={NutritionalScreen} />\r\n      //   </Stack.Navigator>\r\n      // </NavigationContainer>;\r\n    }\r\n  }\r\n  _loadResourcesAsync = async () => {\r\n    return Promise.all([\r\n      Asset.loadAsync([\r\n        // require(\"./assets/images/robot-dev.png\"),\r\n        // require(\"./assets/images/robot-prod.png\"),\r\n      ]),\r\n      Font.loadAsync({\r\n        // This is the font that we are using for our tab bar\r\n        // ...Ionicons.font,\r\n        // We include SpaceMono because we use it in HomeScreen.js. Feel free\r\n        // to remove this if you are not using it in your app\r\n        // \"space-mono\": require(\"./assets/fonts/SpaceMono-Regular.ttf\"),\r\n      }),\r\n    ]);\r\n  };\r\n\r\n  _handleLoadingError = (error) => {\r\n    // In this case, you might want to report the error to your error\r\n    // reporting service, for example Sentry\r\n    console.warn(error);\r\n  };\r\n\r\n  _handleFinishLoading = () => {\r\n    this.setState({ isLoadingComplete: true });\r\n  };\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: \"#fff\",\r\n  },\r\n  statusBarUnderlay: {\r\n    height: 24,\r\n    backgroundColor: \"rgba(0,0,0,0.2)\",\r\n  },\r\n});\r\n// export default App;\r\n"]},"metadata":{},"sourceType":"module"}