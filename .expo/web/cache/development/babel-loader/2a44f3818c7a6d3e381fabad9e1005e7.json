{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\s4397674\\\\Documents\\\\PP\\\\test\\\\components\\\\NutritionalScreen.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport Icon from \"@expo/vector-icons/Ionicons\";\nimport React, { Component, useState, useEffect, useCallback } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { createAppContainer } from \"react-navigation\";\nimport { createMaterialTopTabNavigator } from \"react-navigation-tabs\";\nimport { FontAwesome, MaterialIcons } from \"@expo/vector-icons\";\nimport { fb, Fire } from \"../src/firebase/APIKeys\";\nvar baseHealth = 0;\nvar baseStatus = 0;\nvar baseCurrency = 0;\nvar userid = Fire.shared.user._id;\nconsole.log(userid);\n\n(function () {\n  return readData();\n});\n\nfunction readData() {\n  fb.database().ref(\"response/\" + userid + \"/avatarHealth\").once(\"value\", function (dataSnapShot) {\n    baseHealth = dataSnapShot.val();\n  });\n  fb.database().ref(\"response/\" + userid + \"/avatarStatus\").once(\"value\", function (dataSnapShot) {\n    baseStatus = dataSnapShot.val();\n  });\n  fb.database().ref(\"response/\" + userid + \"/currency\").once(\"value\", function (dataSnapShot) {\n    baseCurrency = dataSnapShot.val();\n  });\n}\n\nfunction ReadTab() {\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      read = _useState2[0],\n      allReads = _useState2[1];\n\n  useEffect(function () {\n    var readRef = fb.database().ref(\"response/\" + userid + \"/nutritionalTips\");\n    var OnLoadingListener = readRef.on(\"value\", function (snapshot) {\n      allReads([]);\n      snapshot.forEach(function (childSnapshot) {\n        allReads(function (read) {\n          return [].concat(_toConsumableArray(read), [childSnapshot.val()]);\n        });\n      });\n    });\n    return function () {\n      readRef.off(\"value\", OnLoadingListener);\n    };\n  }, []);\n  return React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 5\n    }\n  }, React.createElement(SafeAreaView, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }\n  }, React.createElement(ScrollView, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }\n  }, read.map(function (item) {\n    if (item[\"complete\"]) {\n      return React.createElement(TouchableOpacity, {\n        key: item[\"tipID\"],\n        style: styles.textContainer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 17\n        }\n      }, React.createElement(Text, {\n        style: styles.text,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 19\n        }\n      }, \"Type: \", item[\"tipType\"]), React.createElement(Text, {\n        style: styles.text,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 19\n        }\n      }, \"Title: \", item[\"tipName\"]), React.createElement(Text, {\n        style: styles.text,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 19\n        }\n      }, \"Description: \", item[\"tip\"]), React.createElement(Text, {\n        style: styles.text,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 19\n        }\n      }, \"Rewards: \", item[\"tipReward\"][\"shopCurrency\"]));\n    }\n  }))));\n}\n\nReadTab.navigationOptions = {\n  tabBarIcon: function tabBarIcon(_ref) {\n    var tintColor = _ref.tintColor,\n        focused = _ref.focused;\n    return React.createElement(Icon, {\n      name: focused ? \"ios-mail-open\" : \"md-mail-open\",\n      color: tintColor,\n      size: 25,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 5\n      }\n    });\n  }\n};\n\nvar submitTip = function submitTip(id, name, tip, type, reward, complete) {\n  return new Promise(function (resolve, reject) {\n    var key;\n\n    if (id != null) {\n      key = id;\n    } else {\n      key = fb.database().ref().push().key;\n    }\n\n    var dataToSave = {\n      tipID: key,\n      tipName: name,\n      complete: complete,\n      tipReward: reward,\n      tip: tip,\n      tipType: type\n    };\n    console.log(dataToSave);\n    fb.database().ref(\"response/\" + userid + \"/nutritionalTips/\" + key).update(dataToSave).then(function (snapshot) {\n      resolve(snapshot);\n    }).catch(function (err) {\n      reject(err);\n    });\n  });\n};\n\nfunction completeTips(rewardHealth) {\n  var _this = this;\n\n  baseHealth += rewardHealth[\"avatarHealth\"];\n  baseStatus += rewardHealth[\"avatarStatus\"];\n  baseCurrency += rewardHealth[\"shopCurrency\"];\n  this.setState(function (state, props) {\n    return {\n      baseHealth: _this.state.baseHealth + rewardHealth[\"avatarHealth\"],\n      baseCurr: _this.state.baseCurr + rewardHealth[\"shopCurrency\"],\n      baseStatus: _this.state.baseStatus + rewardHealth[\"avatarStatus\"]\n    };\n  });\n  fb.database().ref(\"response/\" + userid + \"/\").update({\n    avatarHealth: baseHealth,\n    avatarStatus: baseStatus,\n    currency: baseCurrency\n  }).then(function () {\n    console.log(\"Read a nutritional tip. Congrats!\");\n  }).catch(function (error) {\n    console.log(error);\n  });\n}\n\nfunction reading(item) {\n  Alert.alert(item[\"tipName\"], item[\"tip\"], [{\n    text: \"Cancel\",\n    onPress: function onPress() {\n      return console.log(\"cancel\");\n    },\n    style: \"cancel\"\n  }, {\n    text: \"OK\",\n    onPress: function onPress() {\n      completeTips(item[\"tipReward\"]);\n      submitTip(item[\"tipID\"], item[\"tipName\"], item[\"tip\"], item[\"tipType\"], item[\"tipReward\"], !item[\"complete\"]);\n    }\n  }], {\n    cancelable: false\n  });\n}\n\nfunction UnreadTab() {\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      unread = _useState4[0],\n      allUnreads = _useState4[1];\n\n  useEffect(function () {\n    var unreadRef = fb.database().ref(\"/response/\" + userid + \"/nutritionalTips/\");\n    var OnLoadingListener = unreadRef.on(\"value\", function (snapshot) {\n      allUnreads([]);\n      snapshot.forEach(function (childSnapshot) {\n        allUnreads(function (unread) {\n          return [].concat(_toConsumableArray(unread), [childSnapshot.val()]);\n        });\n      });\n    });\n    return function () {\n      unreadRef.off(\"value\", OnLoadingListener);\n    };\n  }, []);\n  return React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 5\n    }\n  }, React.createElement(SafeAreaView, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 7\n    }\n  }, React.createElement(ScrollView, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 9\n    }\n  }, unread.map(function (item) {\n    if (!item[\"complete\"]) {\n      return React.createElement(TouchableOpacity, {\n        key: item[\"tipID\"],\n        style: styles.textContainer,\n        onPress: function onPress() {\n          return reading(item);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 17\n        }\n      }, React.createElement(Text, {\n        style: styles.text,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 19\n        }\n      }, \"Type: \", item[\"tipType\"]), React.createElement(Text, {\n        style: styles.text,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 19\n        }\n      }, \"Title: \", item[\"tipName\"]), React.createElement(Text, {\n        style: styles.text,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 19\n        }\n      }, \"Description: \", item[\"tip\"]), React.createElement(Text, {\n        style: styles.text,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 19\n        }\n      }, \"Rewards: \", item[\"tipReward\"][\"shopCurrency\"]));\n    }\n  }))));\n}\n\nUnreadTab.navigationOptions = {\n  tabBarIcon: function tabBarIcon(_ref2) {\n    var tintColor = _ref2.tintColor,\n        focused = _ref2.focused;\n    return React.createElement(Icon, {\n      name: focused ? \"ios-mail-unread\" : \"md-mail-unread\",\n      color: tintColor,\n      size: 25,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 5\n      }\n    });\n  }\n};\nvar Tab = createMaterialTopTabNavigator({\n  Unread: UnreadTab,\n  Read: ReadTab\n}, {\n  tabBarOptions: {\n    activeTintColor: \"black\",\n    showIcon: true,\n    showLabel: true,\n    style: {\n      backgroundColor: \"#FF9933\"\n    }\n  }\n});\nvar AppIndex = createAppContainer(Tab);\n\nvar NutritionalScreen = function (_Component) {\n  _inherits(NutritionalScreen, _Component);\n\n  var _super = _createSuper(NutritionalScreen);\n\n  function NutritionalScreen(props) {\n    var _this2;\n\n    _classCallCheck(this, NutritionalScreen);\n\n    _this2 = _super.call(this, props);\n\n    _this2.handleCurrency = function () {\n      return React.createElement(Text, {\n        style: {\n          fontSize: 25,\n          color: \"white\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 301,\n          columnNumber: 12\n        }\n      }, baseCurrency);\n    };\n\n    _this2.state = {\n      baseHealth: 0,\n      baseStatus: 0,\n      baseCurr: 0\n    };\n\n    if (!fb.apps.length) {\n      fb.initializeApp(ApiKeys.FirebaseConfig);\n    }\n\n    _this2.readData();\n\n    completeTips = completeTips.bind(_assertThisInitialized(_this2));\n    reading = reading.bind(_assertThisInitialized(_this2));\n    return _this2;\n  }\n\n  _createClass(NutritionalScreen, [{\n    key: \"readData\",\n    value: function readData() {\n      var _this3 = this;\n\n      fb.database().ref(\"response/\" + userid + \"/avatarHealth\").once(\"value\", function (dataSnapShot) {\n        var temp = dataSnapShot.val();\n        baseHealth = temp;\n\n        _this3.setState({\n          baseHealth: temp\n        });\n      });\n      fb.database().ref(\"response/\" + userid + \"/avatarStatus\").once(\"value\", function (dataSnapShot) {\n        var temp = dataSnapShot.val();\n        baseStatus = temp;\n\n        _this3.setState({\n          baseStatus: temp\n        });\n      });\n      fb.database().ref(\"response/\" + userid + \"/currency\").once(\"value\", function (dataSnapShot) {\n        var temp = dataSnapShot.val();\n        baseCurrency = temp;\n\n        _this3.setState({\n          baseCurr: temp\n        });\n      });\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this4 = this;\n\n      this.timerID1 = setInterval(function () {\n        return _this4.readData();\n      }, 1000);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      clearInterval(this.timerID1);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      readData();\n      return React.createElement(View, {\n        style: {\n          flex: 1\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 307,\n          columnNumber: 7\n        }\n      }, React.createElement(ImageBackground, {\n        source: require(\"../assets/BackgroundOrange.png\"),\n        style: styles.backgroundImage,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 308,\n          columnNumber: 9\n        }\n      }, React.createElement(StatusBar, {\n        backgroundColor: \"white\",\n        barStyle: \"light-content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 312,\n          columnNumber: 11\n        }\n      }), React.createElement(View, {\n        style: styles.header,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 313,\n          columnNumber: 11\n        }\n      }, React.createElement(FontAwesome, {\n        style: {\n          marginLeft: 15\n        },\n        name: \"home\",\n        size: 25,\n        color: \"white\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 315,\n          columnNumber: 13\n        }\n      }), React.createElement(MaterialIcons, {\n        style: {\n          marginLeft: 25\n        },\n        name: \"settings\",\n        size: 25,\n        color: \"white\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 321,\n          columnNumber: 13\n        }\n      }), React.createElement(Text, {\n        style: {\n          marginLeft: 24,\n          alignItems: \"center\",\n          fontSize: 27,\n          textAlign: \"center\",\n          color: \"white\",\n          borderColor: \"#FF9933\",\n          borderRadius: 1\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 327,\n          columnNumber: 13\n        }\n      }, \" \", \"Nutritional Tips\", \" \"), React.createElement(MaterialIcons, {\n        style: {\n          marginLeft: 30\n        },\n        name: \"attach-money\",\n        size: 30,\n        color: \"white\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 341,\n          columnNumber: 13\n        }\n      }), React.createElement(this.handleCurrency, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 347,\n          columnNumber: 13\n        }\n      })), React.createElement(AppIndex, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 349,\n          columnNumber: 11\n        }\n      })));\n    }\n  }]);\n\n  return NutritionalScreen;\n}(Component);\n\nexport { NutritionalScreen as default };\n{}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#5F7EB2\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  textContainer: {\n    padding: 10,\n    marginTop: 3,\n    backgroundColor: \"#d9f9b1\",\n    alignItems: \"center\"\n  },\n  backgroundImage: {\n    flex: 1,\n    resizeMode: \"cover\",\n    justifyContent: \"center\"\n  },\n  text: {\n    color: \"#4f603c\",\n    fontSize: 20\n  },\n  taskCard: {\n    flex: 5,\n    backgroundColor: \"#FFE5CC\",\n    borderColor: \"black\",\n    borderWidth: 1,\n    margin: 10,\n    justifyContent: \"center\"\n  },\n  taskDiv: {\n    flex: 1,\n    flexDirection: \"row\",\n    justifyContent: \"space-between\"\n  },\n  taskTitle: {\n    fontSize: 20\n  },\n  rewardPoint: {\n    fontSize: 20,\n    color: \"darkblue\"\n  },\n  taskbody: {\n    flex: 1,\n    fontSize: 14\n  },\n  taskDone: {\n    borderColor: \"#737373\",\n    backgroundColor: \"darkgrey\"\n  },\n  header: {\n    flexDirection: \"row\"\n  },\n  tabs: {\n    flex: 1,\n    backgroundColor: \"#D3E3F6\",\n    alignItems: \"flex-start\",\n    justifyContent: \"flex-start\",\n    textAlign: \"left\"\n  }\n});","map":{"version":3,"sources":["C:/Users/s4397674/Documents/PP/test/components/NutritionalScreen.js"],"names":["Icon","React","Component","useState","useEffect","useCallback","createAppContainer","createMaterialTopTabNavigator","FontAwesome","MaterialIcons","fb","Fire","baseHealth","baseStatus","baseCurrency","userid","shared","user","_id","console","log","readData","database","ref","once","dataSnapShot","val","ReadTab","read","allReads","readRef","OnLoadingListener","on","snapshot","forEach","childSnapshot","off","map","item","styles","textContainer","text","navigationOptions","tabBarIcon","tintColor","focused","submitTip","id","name","tip","type","reward","complete","Promise","resolve","reject","key","push","dataToSave","tipID","tipName","tipReward","tipType","update","then","catch","err","completeTips","rewardHealth","setState","state","props","baseCurr","avatarHealth","avatarStatus","currency","error","reading","Alert","alert","onPress","style","cancelable","UnreadTab","unread","allUnreads","unreadRef","Tab","Unread","Read","tabBarOptions","activeTintColor","showIcon","showLabel","backgroundColor","AppIndex","NutritionalScreen","handleCurrency","fontSize","color","apps","length","initializeApp","ApiKeys","FirebaseConfig","bind","temp","timerID1","setInterval","clearInterval","flex","require","backgroundImage","header","marginLeft","alignItems","textAlign","borderColor","borderRadius","StyleSheet","create","container","justifyContent","padding","marginTop","resizeMode","taskCard","borderWidth","margin","taskDiv","flexDirection","taskTitle","rewardPoint","taskbody","taskDone","tabs"],"mappings":";;;;;;;;;;;;;;AAEA,OAAOA,IAAP;AACA,OAAOC,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,SAArC,EAAgDC,WAAhD,QAAmE,OAAnE;;;;;;;;;;AAYA,SAASC,kBAAT,QAAmC,kBAAnC;AACA,SAASC,6BAAT,QAA8C,uBAA9C;AACA,SAASC,WAAT,EAAsBC,aAAtB,QAA2C,oBAA3C;AACA,SAASC,EAAT,EAAaC,IAAb;AAEA,IAAIC,UAAU,GAAG,CAAjB;AACA,IAAIC,UAAU,GAAG,CAAjB;AACA,IAAIC,YAAY,GAAG,CAAnB;AACA,IAAIC,MAAM,GAAGJ,IAAI,CAACK,MAAL,CAAYC,IAAZ,CAAiBC,GAA9B;AACAC,OAAO,CAACC,GAAR,CAAYL,MAAZ;;AACA;AAAA,SAAMM,QAAQ,EAAd;AAAA;;AAEA,SAASA,QAAT,GAAoB;AAClBX,EAAAA,EAAE,CAACY,QAAH,GACGC,GADH,CACO,cAAcR,MAAd,GAAuB,eAD9B,EAEGS,IAFH,CAEQ,OAFR,EAEiB,UAACC,YAAD,EAAkB;AAC/Bb,IAAAA,UAAU,GAAGa,YAAY,CAACC,GAAb,EAAb;AACD,GAJH;AAKAhB,EAAAA,EAAE,CAACY,QAAH,GACGC,GADH,CACO,cAAcR,MAAd,GAAuB,eAD9B,EAEGS,IAFH,CAEQ,OAFR,EAEiB,UAACC,YAAD,EAAkB;AAC/BZ,IAAAA,UAAU,GAAGY,YAAY,CAACC,GAAb,EAAb;AACD,GAJH;AAKAhB,EAAAA,EAAE,CAACY,QAAH,GACGC,GADH,CACO,cAAcR,MAAd,GAAuB,WAD9B,EAEGS,IAFH,CAEQ,OAFR,EAEiB,UAACC,YAAD,EAAkB;AAC/BX,IAAAA,YAAY,GAAGW,YAAY,CAACC,GAAb,EAAf;AACD,GAJH;AAKD;;AAED,SAASC,OAAT,GAAmB;AAAA,kBACQxB,QAAQ,CAAC,EAAD,CADhB;AAAA;AAAA,MACVyB,IADU;AAAA,MACJC,QADI;;AAEjBzB,EAAAA,SAAS,CAAC,YAAM;AACd,QAAM0B,OAAO,GAAGpB,EAAE,CACfY,QADa,GAEbC,GAFa,CAET,cAAcR,MAAd,GAAuB,kBAFd,CAAhB;AAGA,QAAMgB,iBAAiB,GAAGD,OAAO,CAACE,EAAR,CAAW,OAAX,EAAoB,UAACC,QAAD,EAAc;AAC1DJ,MAAAA,QAAQ,CAAC,EAAD,CAAR;AACAI,MAAAA,QAAQ,CAACC,OAAT,CAAiB,UAAUC,aAAV,EAAyB;AACxCN,QAAAA,QAAQ,CAAC,UAACD,IAAD;AAAA,8CAAcA,IAAd,IAAoBO,aAAa,CAACT,GAAd,EAApB;AAAA,SAAD,CAAR;AACD,OAFD;AAGD,KALyB,CAA1B;AAMA,WAAO,YAAM;AACXI,MAAAA,OAAO,CAACM,GAAR,CAAY,OAAZ,EAAqBL,iBAArB;AACD,KAFD;AAGD,GAbQ,EAaN,EAbM,CAAT;AAcA,SACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGH,IAAI,CAACS,GAAL,CAAS,UAAUC,IAAV,EAAgB;AACxB,QAAIA,IAAI,CAAC,UAAD,CAAR,EAAsB;AACpB,aACE,oBAAC,gBAAD;AACE,QAAA,GAAG,EAAEA,IAAI,CAAC,OAAD,CADX;AAEE,QAAA,KAAK,EAAEC,MAAM,CAACC,aAFhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAIE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAED,MAAM,CAACE,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAiCH,IAAI,CAAC,SAAD,CAArC,CAJF,EAKE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEC,MAAM,CAACE,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAkCH,IAAI,CAAC,SAAD,CAAtC,CALF,EAME,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEC,MAAM,CAACE,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAAwCH,IAAI,CAAC,KAAD,CAA5C,CANF,EAOE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEC,MAAM,CAACE,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACYH,IAAI,CAAC,WAAD,CAAJ,CAAkB,cAAlB,CADZ,CAPF,CADF;AAaD;AACF,GAhBA,CADH,CADF,CADF,CADF;AAyBD;;AACDX,OAAO,CAACe,iBAAR,GAA4B;AAC1BC,EAAAA,UAAU,EAAE;AAAA,QAAGC,SAAH,QAAGA,SAAH;AAAA,QAAcC,OAAd,QAAcA,OAAd;AAAA,WACV,oBAAC,IAAD;AACE,MAAA,IAAI,EAAEA,OAAO,GAAG,eAAH,GAAqB,cADpC;AAEE,MAAA,KAAK,EAAED,SAFT;AAGE,MAAA,IAAI,EAAE,EAHR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADU;AAAA;AADc,CAA5B;;AAWA,IAAME,SAAS,GAAG,SAAZA,SAAY,CAACC,EAAD,EAAKC,IAAL,EAAWC,GAAX,EAAgBC,IAAhB,EAAsBC,MAAtB,EAA8BC,QAA9B,EAA2C;AAC3D,SAAO,IAAIC,OAAJ,CAAY,UAAUC,OAAV,EAAmBC,MAAnB,EAA2B;AAC5C,QAAIC,GAAJ;;AACA,QAAIT,EAAE,IAAI,IAAV,EAAgB;AACdS,MAAAA,GAAG,GAAGT,EAAN;AACD,KAFD,MAEO;AACLS,MAAAA,GAAG,GAAG9C,EAAE,CAACY,QAAH,GAAcC,GAAd,GAAoBkC,IAApB,GAA2BD,GAAjC;AACD;;AACD,QAAIE,UAAU,GAAG;AACfC,MAAAA,KAAK,EAAEH,GADQ;AAEfI,MAAAA,OAAO,EAAEZ,IAFM;AAGfI,MAAAA,QAAQ,EAAEA,QAHK;AAIfS,MAAAA,SAAS,EAAEV,MAJI;AAKfF,MAAAA,GAAG,EAAEA,GALU;AAMfa,MAAAA,OAAO,EAAEZ;AANM,KAAjB;AAQA/B,IAAAA,OAAO,CAACC,GAAR,CAAYsC,UAAZ;AACAhD,IAAAA,EAAE,CAACY,QAAH,GACGC,GADH,CACO,cAAcR,MAAd,GAAuB,mBAAvB,GAA6CyC,GADpD,EAEGO,MAFH,CAEUL,UAFV,EAGGM,IAHH,CAGQ,UAAC/B,QAAD,EAAc;AAClBqB,MAAAA,OAAO,CAACrB,QAAD,CAAP;AACD,KALH,EAMGgC,KANH,CAMS,UAACC,GAAD,EAAS;AACdX,MAAAA,MAAM,CAACW,GAAD,CAAN;AACD,KARH;AASD,GAzBM,CAAP;AA0BD,CA3BD;;AA6BA,SAASC,YAAT,CAAsBC,YAAtB,EAAoC;AAAA;;AAClCxD,EAAAA,UAAU,IAAIwD,YAAY,CAAC,cAAD,CAA1B;AACAvD,EAAAA,UAAU,IAAIuD,YAAY,CAAC,cAAD,CAA1B;AACAtD,EAAAA,YAAY,IAAIsD,YAAY,CAAC,cAAD,CAA5B;AACA,OAAKC,QAAL,CAAc,UAACC,KAAD,EAAQC,KAAR;AAAA,WAAmB;AAC/B3D,MAAAA,UAAU,EAAE,KAAI,CAAC0D,KAAL,CAAW1D,UAAX,GAAwBwD,YAAY,CAAC,cAAD,CADjB;AAE/BI,MAAAA,QAAQ,EAAE,KAAI,CAACF,KAAL,CAAWE,QAAX,GAAsBJ,YAAY,CAAC,cAAD,CAFb;AAG/BvD,MAAAA,UAAU,EAAE,KAAI,CAACyD,KAAL,CAAWzD,UAAX,GAAwBuD,YAAY,CAAC,cAAD;AAHjB,KAAnB;AAAA,GAAd;AAKA1D,EAAAA,EAAE,CAACY,QAAH,GACGC,GADH,CACO,cAAcR,MAAd,GAAuB,GAD9B,EAEGgD,MAFH,CAEU;AACNU,IAAAA,YAAY,EAAE7D,UADR;AAEN8D,IAAAA,YAAY,EAAE7D,UAFR;AAGN8D,IAAAA,QAAQ,EAAE7D;AAHJ,GAFV,EAOGkD,IAPH,CAOQ,YAAM;AACV7C,IAAAA,OAAO,CAACC,GAAR,CAAY,mCAAZ;AACD,GATH,EAUG6C,KAVH,CAUS,UAACW,KAAD,EAAW;AAChBzD,IAAAA,OAAO,CAACC,GAAR,CAAYwD,KAAZ;AACD,GAZH;AAaD;;AAGD,SAASC,OAAT,CAAiBvC,IAAjB,EAAuB;AACrBwC,EAAAA,KAAK,CAACC,KAAN,CACEzC,IAAI,CAAC,SAAD,CADN,EAEEA,IAAI,CAAC,KAAD,CAFN,EAGE,CACE;AACEG,IAAAA,IAAI,EAAE,QADR;AAEEuC,IAAAA,OAAO,EAAE;AAAA,aAAM7D,OAAO,CAACC,GAAR,CAAY,QAAZ,CAAN;AAAA,KAFX;AAGE6D,IAAAA,KAAK,EAAE;AAHT,GADF,EAME;AACExC,IAAAA,IAAI,EAAE,IADR;AAEEuC,IAAAA,OAAO,EAAE,mBAAM;AACbb,MAAAA,YAAY,CAAC7B,IAAI,CAAC,WAAD,CAAL,CAAZ;AACAQ,MAAAA,SAAS,CACPR,IAAI,CAAC,OAAD,CADG,EAEPA,IAAI,CAAC,SAAD,CAFG,EAGPA,IAAI,CAAC,KAAD,CAHG,EAIPA,IAAI,CAAC,SAAD,CAJG,EAKPA,IAAI,CAAC,WAAD,CALG,EAMP,CAACA,IAAI,CAAC,UAAD,CANE,CAAT;AAQD;AAZH,GANF,CAHF,EAwBE;AAAE4C,IAAAA,UAAU,EAAE;AAAd,GAxBF;AA0BD;;AACD,SAASC,SAAT,GAAqB;AAAA,mBACUhF,QAAQ,CAAC,EAAD,CADlB;AAAA;AAAA,MACZiF,MADY;AAAA,MACJC,UADI;;AAEnBjF,EAAAA,SAAS,CAAC,YAAM;AACd,QAAMkF,SAAS,GAAG5E,EAAE,CACjBY,QADe,GAEfC,GAFe,CAEX,eAAeR,MAAf,GAAwB,mBAFb,CAAlB;AAGA,QAAMgB,iBAAiB,GAAGuD,SAAS,CAACtD,EAAV,CAAa,OAAb,EAAsB,UAACC,QAAD,EAAc;AAC5DoD,MAAAA,UAAU,CAAC,EAAD,CAAV;AACApD,MAAAA,QAAQ,CAACC,OAAT,CAAiB,UAAUC,aAAV,EAAyB;AACxCkD,QAAAA,UAAU,CAAC,UAACD,MAAD;AAAA,8CAAgBA,MAAhB,IAAwBjD,aAAa,CAACT,GAAd,EAAxB;AAAA,SAAD,CAAV;AACD,OAFD;AAGD,KALyB,CAA1B;AAMA,WAAO,YAAM;AACX4D,MAAAA,SAAS,CAAClD,GAAV,CAAc,OAAd,EAAuBL,iBAAvB;AACD,KAFD;AAGD,GAbQ,EAaN,EAbM,CAAT;AAcA,SACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGqD,MAAM,CAAC/C,GAAP,CAAW,UAAUC,IAAV,EAAgB;AAC1B,QAAI,CAACA,IAAI,CAAC,UAAD,CAAT,EAAuB;AACrB,aACE,oBAAC,gBAAD;AACE,QAAA,GAAG,EAAEA,IAAI,CAAC,OAAD,CADX;AAEE,QAAA,KAAK,EAAEC,MAAM,CAACC,aAFhB;AAGE,QAAA,OAAO,EAAE;AAAA,iBAAMqC,OAAO,CAACvC,IAAD,CAAb;AAAA,SAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAKE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEC,MAAM,CAACE,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAiCH,IAAI,CAAC,SAAD,CAArC,CALF,EAME,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEC,MAAM,CAACE,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAkCH,IAAI,CAAC,SAAD,CAAtC,CANF,EAOE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEC,MAAM,CAACE,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAAwCH,IAAI,CAAC,KAAD,CAA5C,CAPF,EAQE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEC,MAAM,CAACE,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACYH,IAAI,CAAC,WAAD,CAAJ,CAAkB,cAAlB,CADZ,CARF,CADF;AAcD;AACF,GAjBA,CADH,CADF,CADF,CADF;AA0BD;;AACD6C,SAAS,CAACzC,iBAAV,GAA8B;AAC5BC,EAAAA,UAAU,EAAE;AAAA,QAAGC,SAAH,SAAGA,SAAH;AAAA,QAAcC,OAAd,SAAcA,OAAd;AAAA,WACV,oBAAC,IAAD;AACE,MAAA,IAAI,EAAEA,OAAO,GAAG,iBAAH,GAAuB,gBADtC;AAEE,MAAA,KAAK,EAAED,SAFT;AAGE,MAAA,IAAI,EAAE,EAHR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADU;AAAA;AADgB,CAA9B;AAUA,IAAM2C,GAAG,GAAGhF,6BAA6B,CACvC;AACEiF,EAAAA,MAAM,EAAEL,SADV;AAEEM,EAAAA,IAAI,EAAE9D;AAFR,CADuC,EAKvC;AACE+D,EAAAA,aAAa,EAAE;AACbC,IAAAA,eAAe,EAAE,OADJ;AAEbC,IAAAA,QAAQ,EAAE,IAFG;AAGbC,IAAAA,SAAS,EAAE,IAHE;AAIbZ,IAAAA,KAAK,EAAE;AACLa,MAAAA,eAAe,EAAE;AADZ;AAJM;AADjB,CALuC,CAAzC;AAgBA,IAAMC,QAAQ,GAAGzF,kBAAkB,CAACiF,GAAD,CAAnC;;IAEqBS,iB;;;;;AACnB,6BAAYzB,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,+BAAMA,KAAN;;AADiB,WA+CnB0B,cA/CmB,GA+CF,YAAM;AACrB,aAAO,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAAEC,UAAAA,QAAQ,EAAE,EAAZ;AAAgBC,UAAAA,KAAK,EAAE;AAAvB,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAgDrF,YAAhD,CAAP;AACD,KAjDkB;;AAEjB,WAAKwD,KAAL,GAAa;AACX1D,MAAAA,UAAU,EAAE,CADD;AAEXC,MAAAA,UAAU,EAAE,CAFD;AAGX2D,MAAAA,QAAQ,EAAE;AAHC,KAAb;;AAKA,QAAI,CAAC9D,EAAE,CAAC0F,IAAH,CAAQC,MAAb,EAAqB;AACnB3F,MAAAA,EAAE,CAAC4F,aAAH,CAAiBC,OAAO,CAACC,cAAzB;AACD;;AACD,WAAKnF,QAAL;;AACA8C,IAAAA,YAAY,GAAGA,YAAY,CAACsC,IAAb,gCAAf;AACA5B,IAAAA,OAAO,GAAGA,OAAO,CAAC4B,IAAR,gCAAV;AAZiB;AAalB;;;;+BAEU;AAAA;;AACT/F,MAAAA,EAAE,CAACY,QAAH,GACGC,GADH,CACO,cAAcR,MAAd,GAAuB,eAD9B,EAEGS,IAFH,CAEQ,OAFR,EAEiB,UAACC,YAAD,EAAkB;AAC/B,YAAIiF,IAAI,GAAGjF,YAAY,CAACC,GAAb,EAAX;AACAd,QAAAA,UAAU,GAAG8F,IAAb;;AACA,QAAA,MAAI,CAACrC,QAAL,CAAc;AAAEzD,UAAAA,UAAU,EAAE8F;AAAd,SAAd;AACD,OANH;AAOAhG,MAAAA,EAAE,CAACY,QAAH,GACGC,GADH,CACO,cAAcR,MAAd,GAAuB,eAD9B,EAEGS,IAFH,CAEQ,OAFR,EAEiB,UAACC,YAAD,EAAkB;AAC/B,YAAIiF,IAAI,GAAGjF,YAAY,CAACC,GAAb,EAAX;AACAb,QAAAA,UAAU,GAAG6F,IAAb;;AACA,QAAA,MAAI,CAACrC,QAAL,CAAc;AAAExD,UAAAA,UAAU,EAAE6F;AAAd,SAAd;AACD,OANH;AAOAhG,MAAAA,EAAE,CAACY,QAAH,GACGC,GADH,CACO,cAAcR,MAAd,GAAuB,WAD9B,EAEGS,IAFH,CAEQ,OAFR,EAEiB,UAACC,YAAD,EAAkB;AAC/B,YAAIiF,IAAI,GAAGjF,YAAY,CAACC,GAAb,EAAX;AACAZ,QAAAA,YAAY,GAAG4F,IAAf;;AACA,QAAA,MAAI,CAACrC,QAAL,CAAc;AAAEG,UAAAA,QAAQ,EAAEkC;AAAZ,SAAd;AACD,OANH;AAOD;;;wCAEmB;AAAA;;AAClB,WAAKC,QAAL,GAAgBC,WAAW,CAAC;AAAA,eAAM,MAAI,CAACvF,QAAL,EAAN;AAAA,OAAD,EAAwB,IAAxB,CAA3B;AACD;;;2CAEsB;AACrBwF,MAAAA,aAAa,CAAC,KAAKF,QAAN,CAAb;AACD;;;6BAMQ;AACPtF,MAAAA,QAAQ;AACR,aACE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAAEyF,UAAAA,IAAI,EAAE;AAAR,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,eAAD;AACE,QAAA,MAAM,EAAEC,OAAO,kCADjB;AAEE,QAAA,KAAK,EAAExE,MAAM,CAACyE,eAFhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAIE,oBAAC,SAAD;AAAW,QAAA,eAAe,EAAC,OAA3B;AAAmC,QAAA,QAAQ,EAAC,eAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJF,EAKE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEzE,MAAM,CAAC0E,MAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEE,oBAAC,WAAD;AACE,QAAA,KAAK,EAAE;AAAEC,UAAAA,UAAU,EAAE;AAAd,SADT;AAEE,QAAA,IAAI,EAAC,MAFP;AAGE,QAAA,IAAI,EAAE,EAHR;AAIE,QAAA,KAAK,EAAC,OAJR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,EAQE,oBAAC,aAAD;AACE,QAAA,KAAK,EAAE;AAAEA,UAAAA,UAAU,EAAE;AAAd,SADT;AAEE,QAAA,IAAI,EAAC,UAFP;AAGE,QAAA,IAAI,EAAE,EAHR;AAIE,QAAA,KAAK,EAAC,OAJR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QARF,EAcE,oBAAC,IAAD;AACE,QAAA,KAAK,EAAE;AACLA,UAAAA,UAAU,EAAE,EADP;AAELC,UAAAA,UAAU,EAAE,QAFP;AAGLjB,UAAAA,QAAQ,EAAE,EAHL;AAILkB,UAAAA,SAAS,EAAE,QAJN;AAKLjB,UAAAA,KAAK,EAAE,OALF;AAMLkB,UAAAA,WAAW,EAAE,SANR;AAOLC,UAAAA,YAAY,EAAE;AAPT,SADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAWG,GAXH,sBAYmB,GAZnB,CAdF,EA4BE,oBAAC,aAAD;AACE,QAAA,KAAK,EAAE;AAAEJ,UAAAA,UAAU,EAAE;AAAd,SADT;AAEE,QAAA,IAAI,EAAC,cAFP;AAGE,QAAA,IAAI,EAAE,EAHR;AAIE,QAAA,KAAK,EAAC,OAJR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QA5BF,EAkCE,yBAAM,cAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAlCF,CALF,EAyCE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAzCF,CADF,CADF;AA+CD;;;;EArG4ChH,S;;SAA1B8F,iB;AAwGrB,CAEC;AACD,IAAMzD,MAAM,GAAGgF,UAAU,CAACC,MAAX,CAAkB;AAC/BC,EAAAA,SAAS,EAAE;AACTX,IAAAA,IAAI,EAAE,CADG;AAEThB,IAAAA,eAAe,EAAE,SAFR;AAGTqB,IAAAA,UAAU,EAAE,QAHH;AAITO,IAAAA,cAAc,EAAE;AAJP,GADoB;AAQ/BlF,EAAAA,aAAa,EAAE;AACbmF,IAAAA,OAAO,EAAE,EADI;AAEbC,IAAAA,SAAS,EAAE,CAFE;AAGb9B,IAAAA,eAAe,EAAE,SAHJ;AAIbqB,IAAAA,UAAU,EAAE;AAJC,GARgB;AAe/BH,EAAAA,eAAe,EAAE;AACfF,IAAAA,IAAI,EAAE,CADS;AAEfe,IAAAA,UAAU,EAAE,OAFG;AAGfH,IAAAA,cAAc,EAAE;AAHD,GAfc;AAqB/BjF,EAAAA,IAAI,EAAE;AACJ0D,IAAAA,KAAK,EAAE,SADH;AAEJD,IAAAA,QAAQ,EAAE;AAFN,GArByB;AA0B/B4B,EAAAA,QAAQ,EAAE;AACRhB,IAAAA,IAAI,EAAE,CADE;AAERhB,IAAAA,eAAe,EAAE,SAFT;AAGRuB,IAAAA,WAAW,EAAE,OAHL;AAIRU,IAAAA,WAAW,EAAE,CAJL;AAKRC,IAAAA,MAAM,EAAE,EALA;AAMRN,IAAAA,cAAc,EAAE;AANR,GA1BqB;AAmC/BO,EAAAA,OAAO,EAAE;AACPnB,IAAAA,IAAI,EAAE,CADC;AAEPoB,IAAAA,aAAa,EAAE,KAFR;AAGPR,IAAAA,cAAc,EAAE;AAHT,GAnCsB;AAyC/BS,EAAAA,SAAS,EAAE;AACTjC,IAAAA,QAAQ,EAAE;AADD,GAzCoB;AA6C/BkC,EAAAA,WAAW,EAAE;AACXlC,IAAAA,QAAQ,EAAE,EADC;AAEXC,IAAAA,KAAK,EAAE;AAFI,GA7CkB;AAkD/BkC,EAAAA,QAAQ,EAAE;AACRvB,IAAAA,IAAI,EAAE,CADE;AAERZ,IAAAA,QAAQ,EAAE;AAFF,GAlDqB;AAuD/BoC,EAAAA,QAAQ,EAAE;AACRjB,IAAAA,WAAW,EAAE,SADL;AAERvB,IAAAA,eAAe,EAAE;AAFT,GAvDqB;AA4D/BmB,EAAAA,MAAM,EAAE;AACNiB,IAAAA,aAAa,EAAE;AADT,GA5DuB;AAgE/BK,EAAAA,IAAI,EAAE;AACJzB,IAAAA,IAAI,EAAE,CADF;AAEJhB,IAAAA,eAAe,EAAE,SAFb;AAGJqB,IAAAA,UAAU,EAAE,YAHR;AAIJO,IAAAA,cAAc,EAAE,YAJZ;AAKJN,IAAAA,SAAS,EAAE;AALP;AAhEyB,CAAlB,CAAf","sourcesContent":["//NutritionScreen.js\r\n\r\nimport Icon from \"react-native-vector-icons/Ionicons\";\r\nimport React, { Component, useState, useEffect, useCallback } from \"react\";\r\nimport {\r\n  StyleSheet,\r\n  Text,\r\n  View,\r\n  StatusBar,\r\n  TouchableOpacity,\r\n  ImageBackground,\r\n  SafeAreaView,\r\n  ScrollView,\r\n  Alert,\r\n} from \"react-native\";\r\nimport { createAppContainer } from \"react-navigation\";\r\nimport { createMaterialTopTabNavigator } from \"react-navigation-tabs\";\r\nimport { FontAwesome, MaterialIcons } from \"@expo/vector-icons\";\r\nimport { fb, Fire } from \"../src/firebase/APIKeys\";\r\n\r\nvar baseHealth = 0;\r\nvar baseStatus = 0;\r\nvar baseCurrency = 0;\r\nvar userid = Fire.shared.user._id;\r\nconsole.log(userid);\r\n() => readData();\r\n\r\nfunction readData() {\r\n  fb.database()\r\n    .ref(\"response/\" + userid + \"/avatarHealth\")\r\n    .once(\"value\", (dataSnapShot) => {\r\n      baseHealth = dataSnapShot.val();\r\n    });\r\n  fb.database()\r\n    .ref(\"response/\" + userid + \"/avatarStatus\")\r\n    .once(\"value\", (dataSnapShot) => {\r\n      baseStatus = dataSnapShot.val();\r\n    });\r\n  fb.database()\r\n    .ref(\"response/\" + userid + \"/currency\")\r\n    .once(\"value\", (dataSnapShot) => {\r\n      baseCurrency = dataSnapShot.val();\r\n    });\r\n}\r\n\r\nfunction ReadTab() {\r\n  const [read, allReads] = useState([]);\r\n  useEffect(() => {\r\n    const readRef = fb\r\n      .database()\r\n      .ref(\"response/\" + userid + \"/nutritionalTips\");\r\n    const OnLoadingListener = readRef.on(\"value\", (snapshot) => {\r\n      allReads([]);\r\n      snapshot.forEach(function (childSnapshot) {\r\n        allReads((read) => [...read, childSnapshot.val()]);\r\n      });\r\n    });\r\n    return () => {\r\n      readRef.off(\"value\", OnLoadingListener);\r\n    };\r\n  }, []);\r\n  return (\r\n    <View>\r\n      <SafeAreaView>\r\n        <ScrollView>\r\n          {read.map(function (item) {\r\n            if (item[\"complete\"]) {\r\n              return (\r\n                <TouchableOpacity\r\n                  key={item[\"tipID\"]}\r\n                  style={styles.textContainer}\r\n                >\r\n                  <Text style={styles.text}>Type: {item[\"tipType\"]}</Text>\r\n                  <Text style={styles.text}>Title: {item[\"tipName\"]}</Text>\r\n                  <Text style={styles.text}>Description: {item[\"tip\"]}</Text>\r\n                  <Text style={styles.text}>\r\n                    Rewards: {item[\"tipReward\"][\"shopCurrency\"]}\r\n                  </Text>\r\n                </TouchableOpacity>\r\n              );\r\n            }\r\n          })}\r\n        </ScrollView>\r\n      </SafeAreaView>\r\n    </View>\r\n  );\r\n}\r\nReadTab.navigationOptions = {\r\n  tabBarIcon: ({ tintColor, focused }) => (\r\n    <Icon\r\n      name={focused ? \"ios-mail-open\" : \"md-mail-open\"}\r\n      color={tintColor}\r\n      size={25}\r\n    />\r\n  ),\r\n};\r\n\r\n// Update tip after the tip has been read\r\nconst submitTip = (id, name, tip, type, reward, complete) => {\r\n  return new Promise(function (resolve, reject) {\r\n    let key;\r\n    if (id != null) {\r\n      key = id;\r\n    } else {\r\n      key = fb.database().ref().push().key;\r\n    }\r\n    let dataToSave = {\r\n      tipID: key,\r\n      tipName: name,\r\n      complete: complete,\r\n      tipReward: reward,\r\n      tip: tip,\r\n      tipType: type,\r\n    };\r\n    console.log(dataToSave);\r\n    fb.database()\r\n      .ref(\"response/\" + userid + \"/nutritionalTips/\" + key)\r\n      .update(dataToSave)\r\n      .then((snapshot) => {\r\n        resolve(snapshot);\r\n      })\r\n      .catch((err) => {\r\n        reject(err);\r\n      });\r\n  });\r\n};\r\n\r\nfunction completeTips(rewardHealth) {\r\n  baseHealth += rewardHealth[\"avatarHealth\"];\r\n  baseStatus += rewardHealth[\"avatarStatus\"];\r\n  baseCurrency += rewardHealth[\"shopCurrency\"];\r\n  this.setState((state, props) => ({\r\n    baseHealth: this.state.baseHealth + rewardHealth[\"avatarHealth\"],\r\n    baseCurr: this.state.baseCurr + rewardHealth[\"shopCurrency\"],\r\n    baseStatus: this.state.baseStatus + rewardHealth[\"avatarStatus\"],\r\n  }));\r\n  fb.database()\r\n    .ref(\"response/\" + userid + \"/\")\r\n    .update({\r\n      avatarHealth: baseHealth,\r\n      avatarStatus: baseStatus,\r\n      currency: baseCurrency,\r\n    })\r\n    .then(() => {\r\n      console.log(\"Read a nutritional tip. Congrats!\");\r\n    })\r\n    .catch((error) => {\r\n      console.log(error);\r\n    });\r\n}\r\n\r\n// Reading Alert to verify if the tip is read.\r\nfunction reading(item) {\r\n  Alert.alert(\r\n    item[\"tipName\"],\r\n    item[\"tip\"],\r\n    [\r\n      {\r\n        text: \"Cancel\",\r\n        onPress: () => console.log(\"cancel\"),\r\n        style: \"cancel\",\r\n      },\r\n      {\r\n        text: \"OK\",\r\n        onPress: () => {\r\n          completeTips(item[\"tipReward\"]);\r\n          submitTip(\r\n            item[\"tipID\"],\r\n            item[\"tipName\"],\r\n            item[\"tip\"],\r\n            item[\"tipType\"],\r\n            item[\"tipReward\"],\r\n            !item[\"complete\"]\r\n          );\r\n        },\r\n      },\r\n    ],\r\n    { cancelable: false }\r\n  );\r\n}\r\nfunction UnreadTab() {\r\n  const [unread, allUnreads] = useState([]);\r\n  useEffect(() => {\r\n    const unreadRef = fb\r\n      .database()\r\n      .ref(\"/response/\" + userid + \"/nutritionalTips/\");\r\n    const OnLoadingListener = unreadRef.on(\"value\", (snapshot) => {\r\n      allUnreads([]);\r\n      snapshot.forEach(function (childSnapshot) {\r\n        allUnreads((unread) => [...unread, childSnapshot.val()]);\r\n      });\r\n    });\r\n    return () => {\r\n      unreadRef.off(\"value\", OnLoadingListener);\r\n    };\r\n  }, []);\r\n  return (\r\n    <View>\r\n      <SafeAreaView>\r\n        <ScrollView>\r\n          {unread.map(function (item) {\r\n            if (!item[\"complete\"]) {\r\n              return (\r\n                <TouchableOpacity\r\n                  key={item[\"tipID\"]}\r\n                  style={styles.textContainer}\r\n                  onPress={() => reading(item)}\r\n                >\r\n                  <Text style={styles.text}>Type: {item[\"tipType\"]}</Text>\r\n                  <Text style={styles.text}>Title: {item[\"tipName\"]}</Text>\r\n                  <Text style={styles.text}>Description: {item[\"tip\"]}</Text>\r\n                  <Text style={styles.text}>\r\n                    Rewards: {item[\"tipReward\"][\"shopCurrency\"]}\r\n                  </Text>\r\n                </TouchableOpacity>\r\n              );\r\n            }\r\n          })}\r\n        </ScrollView>\r\n      </SafeAreaView>\r\n    </View>\r\n  );\r\n}\r\nUnreadTab.navigationOptions = {\r\n  tabBarIcon: ({ tintColor, focused }) => (\r\n    <Icon\r\n      name={focused ? \"ios-mail-unread\" : \"md-mail-unread\"}\r\n      color={tintColor}\r\n      size={25}\r\n    />\r\n  ),\r\n};\r\n\r\nconst Tab = createMaterialTopTabNavigator(\r\n  {\r\n    Unread: UnreadTab,\r\n    Read: ReadTab,\r\n  },\r\n  {\r\n    tabBarOptions: {\r\n      activeTintColor: \"black\",\r\n      showIcon: true,\r\n      showLabel: true,\r\n      style: {\r\n        backgroundColor: \"#FF9933\",\r\n      },\r\n    },\r\n  }\r\n);\r\nconst AppIndex = createAppContainer(Tab);\r\n\r\nexport default class NutritionalScreen extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      baseHealth: 0,\r\n      baseStatus: 0,\r\n      baseCurr: 0,\r\n    };\r\n    if (!fb.apps.length) {\r\n      fb.initializeApp(ApiKeys.FirebaseConfig);\r\n    }\r\n    this.readData();\r\n    completeTips = completeTips.bind(this);\r\n    reading = reading.bind(this);\r\n  }\r\n\r\n  readData() {\r\n    fb.database()\r\n      .ref(\"response/\" + userid + \"/avatarHealth\")\r\n      .once(\"value\", (dataSnapShot) => {\r\n        var temp = dataSnapShot.val();\r\n        baseHealth = temp;\r\n        this.setState({ baseHealth: temp });\r\n      });\r\n    fb.database()\r\n      .ref(\"response/\" + userid + \"/avatarStatus\")\r\n      .once(\"value\", (dataSnapShot) => {\r\n        var temp = dataSnapShot.val();\r\n        baseStatus = temp;\r\n        this.setState({ baseStatus: temp });\r\n      });\r\n    fb.database()\r\n      .ref(\"response/\" + userid + \"/currency\")\r\n      .once(\"value\", (dataSnapShot) => {\r\n        var temp = dataSnapShot.val();\r\n        baseCurrency = temp;\r\n        this.setState({ baseCurr: temp });\r\n      });\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.timerID1 = setInterval(() => this.readData(), 1000);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    clearInterval(this.timerID1);\r\n  }\r\n\r\n  handleCurrency = () => {\r\n    return <Text style={{ fontSize: 25, color: \"white\" }}>{baseCurrency}</Text>;\r\n  };\r\n\r\n  render() {\r\n    readData();\r\n    return (\r\n      <View style={{ flex: 1 }}>\r\n        <ImageBackground\r\n          source={require(\"../assets/BackgroundOrange.png\")}\r\n          style={styles.backgroundImage}\r\n        >\r\n          <StatusBar backgroundColor=\"white\" barStyle=\"light-content\" />\r\n          <View style={styles.header}>\r\n            {/*  PAGE TITLE  */}\r\n            <FontAwesome\r\n              style={{ marginLeft: 15 }}\r\n              name=\"home\"\r\n              size={25}\r\n              color=\"white\"\r\n            />\r\n            <MaterialIcons\r\n              style={{ marginLeft: 25 }}\r\n              name=\"settings\"\r\n              size={25}\r\n              color=\"white\"\r\n            />\r\n            <Text\r\n              style={{\r\n                marginLeft: 24,\r\n                alignItems: \"center\",\r\n                fontSize: 27,\r\n                textAlign: \"center\",\r\n                color: \"white\",\r\n                borderColor: \"#FF9933\",\r\n                borderRadius: 1,\r\n              }}\r\n            >\r\n              {\" \"}\r\n              Nutritional Tips{\" \"}\r\n            </Text>\r\n            <MaterialIcons\r\n              style={{ marginLeft: 30 }}\r\n              name=\"attach-money\"\r\n              size={30}\r\n              color=\"white\"\r\n            />\r\n            <this.handleCurrency />\r\n          </View>\r\n          <AppIndex />\r\n        </ImageBackground>\r\n      </View>\r\n    );\r\n  }\r\n}\r\n\r\n{\r\n  /*  STYLESHEET  */\r\n}\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: \"#5F7EB2\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n\r\n  textContainer: {\r\n    padding: 10,\r\n    marginTop: 3,\r\n    backgroundColor: \"#d9f9b1\",\r\n    alignItems: \"center\",\r\n  },\r\n\r\n  backgroundImage: {\r\n    flex: 1,\r\n    resizeMode: \"cover\",\r\n    justifyContent: \"center\",\r\n  },\r\n\r\n  text: {\r\n    color: \"#4f603c\",\r\n    fontSize: 20,\r\n  },\r\n\r\n  taskCard: {\r\n    flex: 5,\r\n    backgroundColor: \"#FFE5CC\",\r\n    borderColor: \"black\",\r\n    borderWidth: 1,\r\n    margin: 10,\r\n    justifyContent: \"center\",\r\n  },\r\n\r\n  taskDiv: {\r\n    flex: 1,\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-between\",\r\n  },\r\n\r\n  taskTitle: {\r\n    fontSize: 20,\r\n  },\r\n\r\n  rewardPoint: {\r\n    fontSize: 20,\r\n    color: \"darkblue\",\r\n  },\r\n\r\n  taskbody: {\r\n    flex: 1,\r\n    fontSize: 14,\r\n  },\r\n\r\n  taskDone: {\r\n    borderColor: \"#737373\",\r\n    backgroundColor: \"darkgrey\",\r\n  },\r\n\r\n  header: {\r\n    flexDirection: \"row\",\r\n  },\r\n\r\n  tabs: {\r\n    flex: 1,\r\n    backgroundColor: \"#D3E3F6\",\r\n    alignItems: \"flex-start\",\r\n    justifyContent: \"flex-start\",\r\n    textAlign: \"left\",\r\n  },\r\n});\r\n\r\n// const childRemovedListener = readRef.on(\"child_removed\", (snapshot) => {\r\n//   // Set Your Functioanlity Whatever you want.\r\n//   alert(\"Child Removed\");\r\n// });\r\n\r\n// const childChangedListener = readRef.on(\"child_changed\", (snapshot) => {\r\n//   // Set Your Functioanlity Whatever you want.\r\n//   alert(\"Child Updated/Changed\");\r\n// });\r\n// readRef.off(\"child_removed\", childRemovedListener);\r\n// readRef.off(\"child_changed\", childChangedListener);\r\n\r\n//         {/*  TABS  */}\r\n//         <View className=\"NutritionPage\">\r\n//           <Tabs\r\n//             tabsProps={{\r\n//               style: {\r\n//                 textAlign: \"left\",\r\n//               },\r\n//             }}\r\n//             activeTab={{\r\n//               id: \"tab1\",\r\n//             }}\r\n//           >\r\n//             <View style={styles.tabs}>\r\n//               <Tabs.Tab id=\"tab1\" title=\"Unread\">\r\n//                 <View>\r\n//                   <DataTable>\r\n//                     <DataTable.Header>\r\n//                       <DataTable.Title>[Tip Name]</DataTable.Title>\r\n//                       <DataTable.Title numeric>\r\n//                         Type : [Tip Type]\r\n//                       </DataTable.Title>\r\n//                       <DataTable.Title numeric>\r\n//                         Reward :{\" \"}\r\n//                         <MaterialCommunityIcons\r\n//                           name=\"circle-expand\"\r\n//                           size={10}\r\n//                           color=\"black\"\r\n//                         />\r\n//                         5\r\n//                       </DataTable.Title>\r\n//                     </DataTable.Header>\r\n\r\n//                     <DataTable.Row>\r\n//                       <Text>\r\n//                         [ Task Desceiption : hubvcouehbv hwivoiebuvberu\r\n//                         oibrberoivb reboi1rbiv1bre oboiogiv1uerbgo vi1\r\n//                         rogiv1broigub 1oribgo1i rbgoivu1bro ]\r\n//                       </Text>\r\n//                     </DataTable.Row>\r\n\r\n//                     <DataTable.Header>\r\n//                       <DataTable.Title>[Tip Name]</DataTable.Title>\r\n//                       <DataTable.Title numeric>\r\n//                         Type : [Tip Type]\r\n//                       </DataTable.Title>\r\n//                       <DataTable.Title numeric>\r\n//                         Reward :{\" \"}\r\n//                         <MaterialCommunityIcons\r\n//                           name=\"circle-expand\"\r\n//                           size={10}\r\n//                           color=\"black\"\r\n//                         />\r\n//                         6\r\n//                       </DataTable.Title>\r\n//                     </DataTable.Header>\r\n\r\n//                     <DataTable.Row>\r\n//                       <Text>\r\n//                         [ Task Desceiption : hubvcouehbv hwivoiebuvberu oiboivb\r\n//                         reboi1rbiv1bre ov1rbogigo v1rgboirbgovi1 rogiv1broigub\r\n//                         1oribgo1i rbgoivu1br ]\r\n//                       </Text>\r\n//                     </DataTable.Row>\r\n\r\n//                     <DataTable.Header>\r\n//                       <DataTable.Title>[Tip Name]</DataTable.Title>\r\n//                       <DataTable.Title numeric>\r\n//                         Type : [Tip Type]\r\n//                       </DataTable.Title>\r\n//                       <DataTable.Title numeric>\r\n//                         Reward :{\" \"}\r\n//                         <MaterialCommunityIcons\r\n//                           name=\"circle-expand\"\r\n//                           size={10}\r\n//                           color=\"black\"\r\n//                         />\r\n//                         6\r\n//                       </DataTable.Title>\r\n//                     </DataTable.Header>\r\n\r\n//                     <DataTable.Row>\r\n//                       <Text>\r\n//                         [ Task Desceiption : hubvcouehbv hwivoiebuvberu oiboivb\r\n//                         reboi1rbiv1bre ov1rbogigo v1rgboirbgovi1 rogiv1broigub\r\n//                         1oribgo1i rbgoivu1br ]\r\n//                       </Text>\r\n//                     </DataTable.Row>\r\n//                   </DataTable>\r\n//                 </View>\r\n//               </Tabs.Tab>\r\n\r\n//               <View></View>\r\n//               <Tabs.Tab style={{ color: \"#FFFFFF\" }} id=\"tab2\" title=\"Read\">\r\n//                 <View>\r\n//                   <DataTable>\r\n//                     <DataTable.Header>\r\n//                       <DataTable.Title>[Tip Name]</DataTable.Title>\r\n//                       <DataTable.Title numeric>\r\n//                         Type : [Tip Type]\r\n//                       </DataTable.Title>\r\n//                       <DataTable.Title numeric>\r\n//                         Reward :{\" \"}\r\n//                         <MaterialCommunityIcons\r\n//                           name=\"circle-expand\"\r\n//                           size={10}\r\n//                           color=\"black\"\r\n//                         />\r\n//                         7\r\n//                       </DataTable.Title>\r\n//                     </DataTable.Header>\r\n\r\n//                     <DataTable.Row>\r\n//                       <Text>\r\n//                         Task Desceiption : hduhv hbrovh hbrofu yuy uyuy\r\n//                         idwefcvwdch bwihbwb wiufebf whebf eoiwbc\r\n//                       </Text>\r\n//                     </DataTable.Row>\r\n\r\n//                     <DataTable.Header>\r\n//                       <DataTable.Title>[Tip Name]</DataTable.Title>\r\n//                       <DataTable.Title numeric>\r\n//                         Type : [Tip Type]\r\n//                       </DataTable.Title>\r\n//                       <DataTable.Title numeric>\r\n//                         Reward :{\" \"}\r\n//                         <MaterialCommunityIcons\r\n//                           name=\"circle-expand\"\r\n//                           size={10}\r\n//                           color=\"black\"\r\n//                         />\r\n//                         8\r\n//                       </DataTable.Title>\r\n//                     </DataTable.Header>\r\n\r\n//                     <DataTable.Row>\r\n//                       <Text>\r\n//                         Task Desceiption : hduhv hbrovh hbrofu yuy uyuy\r\n//                         idwefcvwdch bwihbwb wiufebf whebf eoiwbc\r\n//                       </Text>\r\n//                     </DataTable.Row>\r\n\r\n//                     <DataTable.Header>\r\n//                       <DataTable.Title>[Tip Name]</DataTable.Title>\r\n//                       <DataTable.Title numeric>\r\n//                         Type : [Tip Type]\r\n//                       </DataTable.Title>\r\n//                       <DataTable.Title style={{ fontWeight: \"bold\" }} numeric>\r\n//                         Reward :{\" \"}\r\n//                         <MaterialCommunityIcons\r\n//                           name=\"circle-expand\"\r\n//                           size={10}\r\n//                           color=\"black\"\r\n//                         />\r\n//                         20\r\n//                       </DataTable.Title>\r\n//                     </DataTable.Header>\r\n\r\n//                     <DataTable.Row>\r\n//                       <Text>\r\n//                         Task Desceiption : hduhv hbrovh hbrofu yuy uyuy\r\n//                         idwefcvwdch bwihbwb wiufebf whebf eoiwbc\r\n//                       </Text>\r\n//                     </DataTable.Row>\r\n//                   </DataTable>\r\n//                 </View>\r\n//               </Tabs.Tab>\r\n//             </View>\r\n//           </Tabs>\r\n//         </View>\r\n//       </View>\r\n"]},"metadata":{},"sourceType":"module"}