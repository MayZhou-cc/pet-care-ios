{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\s4397674\\\\Documents\\\\PP\\\\test\\\\App.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from \"react\";\nimport { AppLoading, Asset, Font } from \"expo\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { createStackNavigator } from \"@react-navigation/stack\";\nimport { HomeScreen, QuestScreen, NutritionalScreen } from \"./components/ScreenComponents\";\nimport ApiKeys from \"./src/firebase/APIKeys\";\nimport * as firebase from \"firebase\";\nvar Stack = createStackNavigator();\n\nvar App = function (_React$Component) {\n  _inherits(App, _React$Component);\n\n  var _super = _createSuper(App);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _super.call(this, props);\n\n    _this.onAuthStateChanged = function (user) {\n      _this.setState({\n        isAuthenticationReady: true\n      });\n\n      _this.setState({\n        isAuthenticated: !!user\n      });\n    };\n\n    _this.state = {\n      isLoadingComplete: false,\n      isAuthenticationReady: false,\n      isAuthenticated: false\n    };\n\n    if (!firebase.apps.length) {\n      firebase.initializeApp(ApiKeys.FirebaseConfig);\n    }\n\n    firebase.auth().onAuthStateChanged(_this.onAuthStateChanged);\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      if ((!this.state.isLoadingComplete || !this.state.isAuthenticationReady) && !this.props.skipLoadingScreen) {\n        console.log(\"if statement\");\n        return React.createElement(AppLoading, {\n          startAsync: this._loadResourcesAsync,\n          onError: this._handleLoadingError,\n          onFinish: this._handleFinishLoading,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 9\n          }\n        });\n      } else {\n        console.log(\"else world!!\");\n        return React.createElement(View, {\n          style: styles.container,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 9\n          }\n        }, React.createElement(Text, {\n          style: {\n            paddingTop: 20\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 11\n          }\n        }, \"Hello There!\"), Platform.OS === \"ios\" && React.createElement(StatusBar, {\n          barStyle: \"default\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 37\n          }\n        }), Platform.OS === \"android\" && React.createElement(View, {\n          style: styles.statusBarUnderlay,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 13\n          }\n        }), this.state.isAuthenticated ? React.createElement(MainTabNavigator, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 13\n          }\n        }) : React.createElement(RootNavigation, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 13\n          }\n        }));\n      }\n    }\n  }]);\n\n  return App;\n}(React.Component);\n\nexport { App as default };","map":{"version":3,"sources":["C:/Users/s4397674/Documents/PP/test/App.js"],"names":["React","AppLoading","Asset","Font","NavigationContainer","createStackNavigator","HomeScreen","QuestScreen","NutritionalScreen","ApiKeys","firebase","Stack","App","props","onAuthStateChanged","user","setState","isAuthenticationReady","isAuthenticated","state","isLoadingComplete","apps","length","initializeApp","FirebaseConfig","auth","skipLoadingScreen","console","log","_loadResourcesAsync","_handleLoadingError","_handleFinishLoading","styles","container","paddingTop","Platform","OS","statusBarUnderlay","Component"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,EAAqBC,KAArB,EAA4BC,IAA5B,QAAwC,MAAxC;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SAASC,oBAAT,QAAqC,yBAArC;AACA,SACEC,UADF,EAEEC,WAFF,EAGEC,iBAHF;AAMA,OAAOC,OAAP;AACA,OAAO,KAAKC,QAAZ,MAA0B,UAA1B;AAEA,IAAMC,KAAK,GAAGN,oBAAoB,EAAlC;;IAIqBO,G;;;;;AACnB,eAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,8BAAMA,KAAN;;AADiB,UAmBnBC,kBAnBmB,GAmBE,UAACC,IAAD,EAAU;AAC7B,YAAKC,QAAL,CAAc;AAAEC,QAAAA,qBAAqB,EAAE;AAAzB,OAAd;;AACA,YAAKD,QAAL,CAAc;AAAEE,QAAAA,eAAe,EAAE,CAAC,CAACH;AAArB,OAAd;AACD,KAtBkB;;AAEjB,UAAKI,KAAL,GAAa;AACXC,MAAAA,iBAAiB,EAAE,KADR;AAEXH,MAAAA,qBAAqB,EAAE,KAFZ;AAGXC,MAAAA,eAAe,EAAE;AAHN,KAAb;;AAMA,QAAI,CAACR,QAAQ,CAACW,IAAT,CAAcC,MAAnB,EAA2B;AACzBZ,MAAAA,QAAQ,CAACa,aAAT,CAAuBd,OAAO,CAACe,cAA/B;AAMD;;AACDd,IAAAA,QAAQ,CAACe,IAAT,GAAgBX,kBAAhB,CAAmC,MAAKA,kBAAxC;AAhBiB;AAiBlB;;;;6BAOQ;AACP,UACE,CAAC,CAAC,KAAKK,KAAL,CAAWC,iBAAZ,IAAiC,CAAC,KAAKD,KAAL,CAAWF,qBAA9C,KACA,CAAC,KAAKJ,KAAL,CAAWa,iBAFd,EAGE;AACAC,QAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AACA,eACE,oBAAC,UAAD;AACE,UAAA,UAAU,EAAE,KAAKC,mBADnB;AAEE,UAAA,OAAO,EAAE,KAAKC,mBAFhB;AAGE,UAAA,QAAQ,EAAE,KAAKC,oBAHjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAOD,OAZD,MAYO;AACLJ,QAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AACA,eAEE,oBAAC,IAAD;AAAM,UAAA,KAAK,EAAEI,MAAM,CAACC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,oBAAC,IAAD;AAAM,UAAA,KAAK,EAAE;AAAEC,YAAAA,UAAU,EAAE;AAAd,WAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADF,EAEGC,QAAQ,CAACC,EAAT,KAAgB,KAAhB,IAAyB,oBAAC,SAAD;AAAW,UAAA,QAAQ,EAAC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAF5B,EAGGD,QAAQ,CAACC,EAAT,KAAgB,SAAhB,IACC,oBAAC,IAAD;AAAM,UAAA,KAAK,EAAEJ,MAAM,CAACK,iBAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAJJ,EAMG,KAAKlB,KAAL,CAAWD,eAAX,GACC,oBAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADD,GAGC,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UATJ,CAFF;AA0BD;AACF;;;;EAnE8BlB,KAAK,CAACsC,S;;SAAlB1B,G","sourcesContent":["import React from \"react\";\r\nimport { AppLoading, Asset, Font } from \"expo\";\r\nimport { NavigationContainer } from \"@react-navigation/native\";\r\nimport { createStackNavigator } from \"@react-navigation/stack\";\r\nimport {\r\n  HomeScreen,\r\n  QuestScreen,\r\n  NutritionalScreen,\r\n} from \"./components/ScreenComponents\";\r\n\r\nimport ApiKeys from \"./src/firebase/APIKeys\";\r\nimport * as firebase from \"firebase\";\r\n\r\nconst Stack = createStackNavigator();\r\n// const firebase = require(\"firebase/app\");\r\n// require(\"firebase/analytics\");\r\n\r\nexport default class App extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isLoadingComplete: false,\r\n      isAuthenticationReady: false,\r\n      isAuthenticated: false,\r\n    };\r\n\r\n    if (!firebase.apps.length) {\r\n      firebase.initializeApp(ApiKeys.FirebaseConfig);\r\n      // firebase.analytics.isSupported().then((isSupported) => {\r\n      //   if (isSupported) {\r\n      //     analytics = firebase.analytics();\r\n      //   }\r\n      // });\r\n    }\r\n    firebase.auth().onAuthStateChanged(this.onAuthStateChanged);\r\n  }\r\n\r\n  onAuthStateChanged = (user) => {\r\n    this.setState({ isAuthenticationReady: true });\r\n    this.setState({ isAuthenticated: !!user });\r\n  };\r\n\r\n  render() {\r\n    if (\r\n      (!this.state.isLoadingComplete || !this.state.isAuthenticationReady) &&\r\n      !this.props.skipLoadingScreen\r\n    ) {\r\n      console.log(\"if statement\");\r\n      return (\r\n        <AppLoading\r\n          startAsync={this._loadResourcesAsync}\r\n          onError={this._handleLoadingError}\r\n          onFinish={this._handleFinishLoading}\r\n        />\r\n      );\r\n    } else {\r\n      console.log(\"else world!!\");\r\n      return (\r\n        // <View><Text>Hello There!</Text></View>\r\n        <View style={styles.container}>\r\n          <Text style={{ paddingTop: 20 }}>Hello There!</Text>\r\n          {Platform.OS === \"ios\" && <StatusBar barStyle=\"default\" />}\r\n          {Platform.OS === \"android\" && (\r\n            <View style={styles.statusBarUnderlay} />\r\n          )}\r\n          {this.state.isAuthenticated ? (\r\n            <MainTabNavigator />\r\n          ) : (\r\n            <RootNavigation />\r\n          )}\r\n        </View>\r\n      );\r\n      // <NavigationContainer>\r\n      //   <Stack.Navigator>\r\n      //     <Stack.Screen\r\n      //       name=\"Home\"\r\n      //       component={HomeScreen}\r\n      //       options={{ title: \"Supersizers\" }}\r\n      //     />\r\n      //     <Stack.Screen name=\"Quest\" component={QuestScreen} />\r\n      //     <Stack.Screen name=\"Nutritional\" component={NutritionalScreen} />\r\n      //   </Stack.Navigator>\r\n      // </NavigationContainer>;\r\n    }\r\n  }\r\n}\r\n// export default App;\r\n"]},"metadata":{},"sourceType":"module"}