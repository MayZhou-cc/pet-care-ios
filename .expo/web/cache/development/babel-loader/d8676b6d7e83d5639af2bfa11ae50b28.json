{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\s4397674\\\\Documents\\\\PP\\\\test\\\\App.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from \"react\";\nimport { AppLoading, Asset, Font } from \"expo\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { createStackNavigator } from \"@react-navigation/stack\";\nimport { HomeScreen, QuestScreen, NutritionalScreen } from \"./components/ScreenComponents\";\nimport ApiKeys from \"./src/firebase/ApiKeys\";\nimport * as firebase from \"firebase/\";\nvar Stack = createStackNavigator();\n\nvar App = function (_React$Component) {\n  _inherits(App, _React$Component);\n\n  var _super = _createSuper(App);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      isLoadingComplete: false\n    };\n\n    if (!firebase.apps.length) {\n      firebase.initializeApp(ApiKeys.FirebaseConfig);\n      firebase.analytics();\n    }\n\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      if (!this.state.isLoadingComplete && !this.props.skipLoadingScreen) {\n        return React.createElement(AppLoading, {\n          startAsync: this._loadResourcesAsync,\n          onError: this._handleLoadingError,\n          onFinish: this._handleFinishLoading,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 9\n          }\n        });\n      } else {\n        React.createElement(NavigationContainer, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 7\n          }\n        }, React.createElement(Stack.Navigator, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 9\n          }\n        }, React.createElement(Stack.Screen, {\n          name: \"Home\",\n          component: HomeScreen,\n          options: {\n            title: \"Supersizers\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 11\n          }\n        }), React.createElement(Stack.Screen, {\n          name: \"Quest\",\n          component: QuestScreen,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 11\n          }\n        }), React.createElement(Stack.Screen, {\n          name: \"Nutritional\",\n          component: NutritionalScreen,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 11\n          }\n        })));\n      }\n    }\n  }]);\n\n  return App;\n}(React.Component);\n\nexport { App as default };","map":{"version":3,"sources":["C:/Users/s4397674/Documents/PP/test/App.js"],"names":["React","AppLoading","Asset","Font","NavigationContainer","createStackNavigator","HomeScreen","QuestScreen","NutritionalScreen","ApiKeys","firebase","Stack","App","props","state","isLoadingComplete","apps","length","initializeApp","FirebaseConfig","analytics","skipLoadingScreen","_loadResourcesAsync","_handleLoadingError","_handleFinishLoading","title","Component"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,EAAqBC,KAArB,EAA4BC,IAA5B,QAAwC,MAAxC;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SAASC,oBAAT,QAAqC,yBAArC;AACA,SACEC,UADF,EAEEC,WAFF,EAGEC,iBAHF;AAMA,OAAOC,OAAP;AACA,OAAO,KAAKC,QAAZ,MAA0B,WAA1B;AAEA,IAAMC,KAAK,GAAGN,oBAAoB,EAAlC;;IAEqBO,G;;;;;AACnB,eAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,8BAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACXC,MAAAA,iBAAiB,EAAE;AADR,KAAb;;AAIA,QAAI,CAACL,QAAQ,CAACM,IAAT,CAAcC,MAAnB,EAA2B;AACzBP,MAAAA,QAAQ,CAACQ,aAAT,CAAuBT,OAAO,CAACU,cAA/B;AACAT,MAAAA,QAAQ,CAACU,SAAT;AACD;;AATgB;AAUlB;;;;6BAEQ;AACP,UAAI,CAAC,KAAKN,KAAL,CAAWC,iBAAZ,IAAiC,CAAC,KAAKF,KAAL,CAAWQ,iBAAjD,EAAoE;AAClE,eACE,oBAAC,UAAD;AACE,UAAA,UAAU,EAAE,KAAKC,mBADnB;AAEE,UAAA,OAAO,EAAE,KAAKC,mBAFhB;AAGE,UAAA,QAAQ,EAAE,KAAKC,oBAHjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAOD,OARD,MAQO;AACL,4BAAC,mBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,oBAAC,KAAD,CAAO,SAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,oBAAC,KAAD,CAAO,MAAP;AACE,UAAA,IAAI,EAAC,MADP;AAEE,UAAA,SAAS,EAAElB,UAFb;AAGE,UAAA,OAAO,EAAE;AAAEmB,YAAAA,KAAK,EAAE;AAAT,WAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,EAME,oBAAC,KAAD,CAAO,MAAP;AAAc,UAAA,IAAI,EAAC,OAAnB;AAA2B,UAAA,SAAS,EAAElB,WAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UANF,EAOE,oBAAC,KAAD,CAAO,MAAP;AAAc,UAAA,IAAI,EAAC,aAAnB;AAAiC,UAAA,SAAS,EAAEC,iBAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAPF,CADF;AAWD;AACF;;;;EAnC8BR,KAAK,CAAC0B,S;;SAAlBd,G","sourcesContent":["import React from \"react\";\r\nimport { AppLoading, Asset, Font } from \"expo\";\r\nimport { NavigationContainer } from \"@react-navigation/native\";\r\nimport { createStackNavigator } from \"@react-navigation/stack\";\r\nimport {\r\n  HomeScreen,\r\n  QuestScreen,\r\n  NutritionalScreen,\r\n} from \"./components/ScreenComponents\";\r\n\r\nimport ApiKeys from \"./src/firebase/ApiKeys\";\r\nimport * as firebase from \"firebase/\";\r\n\r\nconst Stack = createStackNavigator();\r\n\r\nexport default class App extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isLoadingComplete: false,\r\n    };\r\n\r\n    if (!firebase.apps.length) {\r\n      firebase.initializeApp(ApiKeys.FirebaseConfig);\r\n      firebase.analytics();\r\n    }\r\n  }\r\n\r\n  render() {\r\n    if (!this.state.isLoadingComplete && !this.props.skipLoadingScreen) {\r\n      return (\r\n        <AppLoading\r\n          startAsync={this._loadResourcesAsync}\r\n          onError={this._handleLoadingError}\r\n          onFinish={this._handleFinishLoading}\r\n        />\r\n      );\r\n    } else {\r\n      <NavigationContainer>\r\n        <Stack.Navigator>\r\n          <Stack.Screen\r\n            name=\"Home\"\r\n            component={HomeScreen}\r\n            options={{ title: \"Supersizers\" }}\r\n          />\r\n          <Stack.Screen name=\"Quest\" component={QuestScreen} />\r\n          <Stack.Screen name=\"Nutritional\" component={NutritionalScreen} />\r\n        </Stack.Navigator>\r\n      </NavigationContainer>;\r\n    }\r\n  }\r\n}\r\n// export default App;\r\n"]},"metadata":{},"sourceType":"module"}