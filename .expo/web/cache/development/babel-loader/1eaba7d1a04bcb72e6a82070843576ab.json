{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\s4397674\\\\Documents\\\\PP\\\\test\\\\components\\\\auth\\\\ForgotPasswordScreen.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport { NavigationActions } from \"react-navigation\";\nimport * as firebase from \"firebase\";\n\nvar ForgotPasswordScreen = function (_Component) {\n  _inherits(ForgotPasswordScreen, _Component);\n\n  var _super = _createSuper(ForgotPasswordScreen);\n\n  function ForgotPasswordScreen(props) {\n    var _this;\n\n    _classCallCheck(this, ForgotPasswordScreen);\n\n    _this = _super.call(this, props);\n\n    _this.onResetPasswordPress = function () {\n      firebase.auth().sendPasswordResetEmail(_this.state.email).then(function () {\n        Alert.alert(\"Password reset email has been sent.\");\n      }, function (error) {\n        Alert.alert(error.message);\n      });\n    };\n\n    _this.onBackToLoginPress = function () {\n      _this.props.navigation.navigate(\"Login\");\n    };\n\n    _this.state = {\n      email: \"\"\n    };\n    return _this;\n  }\n\n  _createClass(ForgotPasswordScreen, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(View, {\n        style: styles.container,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 7\n        }\n      }, React.createElement(ImageBackground, {\n        source: require(\"../../assets/BackgroundOrange.png\"),\n        style: styles.backgroundImage,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 9\n        }\n      }, React.createElement(Text, {\n        style: styles.HeadingText,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }\n      }, \"Forgot Password\"), React.createElement(TextInput, {\n        style: styles.inputStyle,\n        value: this.state.email,\n        onChangeText: function onChangeText(text) {\n          _this2.setState({\n            email: text\n          });\n        },\n        placeholder: \"Email\",\n        keyboardType: \"email-address\",\n        autoCapitalize: \"none\",\n        autoCorrect: false,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }\n      }), React.createElement(View, {\n        style: {\n          paddingTop: 10\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }\n      }), React.createElement(View, {\n        style: styles.SignInButtons,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }\n      }, React.createElement(Button, {\n        style: styles.loginText,\n        title: \"Reset Password\",\n        onPress: this.onResetPasswordPress,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 13\n        }\n      }), React.createElement(Button, {\n        style: styles.loginText,\n        title: \"Back to Login...\",\n        onPress: this.onBackToLoginPress,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }\n      }))));\n    }\n  }]);\n\n  return ForgotPasswordScreen;\n}(Component);\n\nexport { ForgotPasswordScreen as default };\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n    backgroundColor: \"#fff\"\n  },\n  inputStyle: {\n    width: \"65%\",\n    marginBottom: 10,\n    paddingBottom: 15,\n    alignSelf: \"center\",\n    borderColor: \"#FFFFFF\",\n    borderBottomWidth: 1,\n    borderRadius: 5,\n    fontSize: 18,\n    textAlign: \"center\"\n  },\n  loginText: {\n    color: \"#990000\",\n    marginTop: 20,\n    textAlign: \"center\",\n    flexDirection: \"column\",\n    backgroundColor: \"#FFE5CC\",\n    borderRadius: 5,\n    marginLeft: 15,\n    marginBottom: 10,\n    marginTop: 5,\n    width: 150,\n    height: 30,\n    flexDirection: \"column\"\n  },\n  preloader: {\n    left: 0,\n    right: 0,\n    top: 0,\n    bottom: 0,\n    position: \"absolute\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    backgroundColor: \"#fff\"\n  },\n  backgroundImage: {\n    flex: 1,\n    resizeMode: \"cover\",\n    justifyContent: \"center\"\n  },\n  HeadingText: {\n    fontSize: 30,\n    fontWeight: \"500\",\n    color: \"#990000\",\n    textAlign: \"center\",\n    marginBottom: 40\n  },\n  customBtnText: {\n    fontSize: 20,\n    fontWeight: \"400\",\n    color: \"#990000\",\n    textAlign: \"center\"\n  },\n  customBtnBG: {\n    backgroundColor: \"#FFE5CC\",\n    borderRadius: 5,\n    marginLeft: 5,\n    marginBottom: 5,\n    marginTop: 5,\n    width: 100,\n    height: 40,\n    flexDirection: \"column\"\n  },\n  SignInButtons: {\n    margin: 20,\n    alignItems: \"center\",\n    alignContent: \"center\"\n  }\n});","map":{"version":3,"sources":["C:/Users/s4397674/Documents/PP/test/components/auth/ForgotPasswordScreen.js"],"names":["React","Component","NavigationActions","firebase","ForgotPasswordScreen","props","onResetPasswordPress","auth","sendPasswordResetEmail","state","email","then","Alert","alert","error","message","onBackToLoginPress","navigation","navigate","styles","container","require","backgroundImage","HeadingText","inputStyle","text","setState","paddingTop","SignInButtons","loginText","StyleSheet","create","flex","display","flexDirection","justifyContent","backgroundColor","width","marginBottom","paddingBottom","alignSelf","borderColor","borderBottomWidth","borderRadius","fontSize","textAlign","color","marginTop","marginLeft","height","preloader","left","right","top","bottom","position","alignItems","resizeMode","fontWeight","customBtnText","customBtnBG","margin","alignContent"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport {\r\n  StyleSheet,\r\n  View,\r\n  Text,\r\n  TextInput,\r\n  Button,\r\n  Alert,\r\n  ImageBackground,\r\n} from \"react-native\";\r\nimport { NavigationActions } from \"react-navigation\";\r\nimport * as firebase from \"firebase\";\r\n\r\nexport default class ForgotPasswordScreen extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      email: \"\",\r\n    };\r\n  }\r\n  onResetPasswordPress = () => {\r\n    firebase\r\n      .auth()\r\n      .sendPasswordResetEmail(this.state.email)\r\n      .then(\r\n        () => {\r\n          Alert.alert(\"Password reset email has been sent.\");\r\n        },\r\n        (error) => {\r\n          Alert.alert(error.message);\r\n        }\r\n      );\r\n  };\r\n\r\n  onBackToLoginPress = () => {\r\n    this.props.navigation.navigate(\"Login\");\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <View style={styles.container}>\r\n        <ImageBackground\r\n          source={require(\"../../assets/BackgroundOrange.png\")}\r\n          style={styles.backgroundImage}\r\n        >\r\n          <Text style={styles.HeadingText}>Forgot Password</Text>\r\n\r\n          <TextInput\r\n            style={styles.inputStyle}\r\n            value={this.state.email}\r\n            onChangeText={(text) => {\r\n              this.setState({ email: text });\r\n            }}\r\n            placeholder=\"Email\"\r\n            keyboardType=\"email-address\"\r\n            autoCapitalize=\"none\"\r\n            autoCorrect={false}\r\n          />\r\n          <View style={{ paddingTop: 10 }} />\r\n\r\n          <View style={styles.SignInButtons}>\r\n            <Button\r\n              style={styles.loginText}\r\n              title=\"Reset Password\"\r\n              onPress={this.onResetPasswordPress}\r\n            />\r\n            <Button\r\n              style={styles.loginText}\r\n              title=\"Back to Login...\"\r\n              onPress={this.onBackToLoginPress}\r\n            />\r\n          </View>\r\n        </ImageBackground>\r\n      </View>\r\n    );\r\n  }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    justifyContent: \"center\",\r\n    backgroundColor: \"#fff\",\r\n  },\r\n  inputStyle: {\r\n    width: \"65%\",\r\n    marginBottom: 10,\r\n    paddingBottom: 15,\r\n    alignSelf: \"center\",\r\n    borderColor: \"#FFFFFF\",\r\n    borderBottomWidth: 1,\r\n    borderRadius: 5,\r\n    fontSize: 18,\r\n    textAlign: \"center\",\r\n  },\r\n  loginText: {\r\n    color: \"#990000\",\r\n    marginTop: 20,\r\n    textAlign: \"center\",\r\n    flexDirection: \"column\",\r\n    backgroundColor: \"#FFE5CC\",\r\n    borderRadius: 5,\r\n    marginLeft: 15,\r\n    marginBottom: 10,\r\n    marginTop: 5,\r\n    width: 150,\r\n    height: 30,\r\n    flexDirection: \"column\",\r\n  },\r\n  preloader: {\r\n    left: 0,\r\n    right: 0,\r\n    top: 0,\r\n    bottom: 0,\r\n    position: \"absolute\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    backgroundColor: \"#fff\",\r\n  },\r\n  backgroundImage: {\r\n    flex: 1,\r\n    resizeMode: \"cover\",\r\n    justifyContent: \"center\",\r\n  },\r\n  HeadingText: {\r\n    fontSize: 30,\r\n    fontWeight: \"500\",\r\n    color: \"#990000\",\r\n    textAlign: \"center\",\r\n    marginBottom: 40,\r\n  },\r\n  customBtnText: {\r\n    fontSize: 20,\r\n    fontWeight: \"400\",\r\n    color: \"#990000\",\r\n    textAlign: \"center\",\r\n  },\r\n  customBtnBG: {\r\n    backgroundColor: \"#FFE5CC\",\r\n    borderRadius: 5,\r\n    marginLeft: 5,\r\n    marginBottom: 5,\r\n    marginTop: 5,\r\n    width: 100,\r\n    height: 40,\r\n    flexDirection: \"column\",\r\n  },\r\n  SignInButtons: {\r\n    margin: 20,\r\n    alignItems: \"center\",\r\n    alignContent: \"center\",\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}