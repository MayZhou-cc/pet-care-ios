{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\s4397674\\\\Documents\\\\PP\\\\test\\\\components\\\\SettingScreen.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\n\nvar SettingScreen = function (_Component) {\n  _inherits(SettingScreen, _Component);\n\n  var _super = _createSuper(SettingScreen);\n\n  function SettingScreen() {\n    var _this;\n\n    _classCallCheck(this, SettingScreen);\n\n    _this = _super.call(this);\n\n    _this.backgroundColorOnPress = function () {\n      _this.setState({\n        backgroundColor: Math.floor(Math.random() * 10) + 1\n      });\n    };\n\n    _this.suppressNotificationOnPress = function () {\n      if (_this.state.supperssNotification == \"OFF\") {\n        _this.setState({\n          supperssNotification: \"ON\"\n        });\n      } else {\n        _this.setState({\n          supperssNotification: \"OFF\"\n        });\n      }\n    };\n\n    _this.state = {\n      backgroundColor: 0,\n      supperssNotification: \"OFF\"\n    };\n    return _this;\n  }\n\n  _createClass(SettingScreen, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(View, {\n        style: {\n          flex: 1\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 7\n        }\n      }, React.createElement(ImageBackground, {\n        source: require(\"../assets/BackgroundOrange.png\"),\n        style: styles.backgroundImage,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 9\n        }\n      }, React.createElement(View, {\n        style: styles.settingItems,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }\n      }, React.createElement(Text, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }\n      }, \"Change Background Color\"), React.createElement(Button, {\n        title: this.state.backgroundColor,\n        onPress: this.backgroundColorOnPress,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 13\n        }\n      })), React.createElement(View, {\n        style: styles.settingItems,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }\n      }, React.createElement(Text, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }\n      }, \"Suppress Notifications\"), React.createElement(Button, {\n        title: this.state.supperssNotification,\n        onPress: this.suppressNotificationOnPress,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }\n      }))));\n    }\n  }]);\n\n  return SettingScreen;\n}(Component);\n\nexport { SettingScreen as default };\nvar styles = StyleSheet.create({\n  backgroundImage: {\n    flex: 1,\n    resizeMode: \"cover\",\n    justifyContent: \"flex-start\"\n  },\n  settingItems: {\n    backgroundColor: \"#ffffff\",\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    margin: 10,\n    borderRadius: 5\n  }\n});","map":{"version":3,"sources":["C:/Users/s4397674/Documents/PP/test/components/SettingScreen.js"],"names":["React","Component","SettingScreen","backgroundColorOnPress","setState","backgroundColor","Math","floor","random","suppressNotificationOnPress","state","supperssNotification","flex","require","styles","backgroundImage","settingItems","StyleSheet","create","resizeMode","justifyContent","flexDirection","alignItems","margin","borderRadius"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;;;;;IASqBC,a;;;;;AACnB,2BAAc;AAAA;;AAAA;;AACZ;;AADY,UAQdC,sBARc,GAQW,YAAM;AAC7B,YAAKC,QAAL,CAAc;AACZC,QAAAA,eAAe,EAAEC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,EAA3B,IAAiC;AADtC,OAAd;AAGD,KAZa;;AAAA,UAcdC,2BAdc,GAcgB,YAAM;AAClC,UAAI,MAAKC,KAAL,CAAWC,oBAAX,IAAmC,KAAvC,EAA8C;AAC5C,cAAKP,QAAL,CAAc;AACZO,UAAAA,oBAAoB,EAAE;AADV,SAAd;AAGD,OAJD,MAIO;AACL,cAAKP,QAAL,CAAc;AACZO,UAAAA,oBAAoB,EAAE;AADV,SAAd;AAGD;AACF,KAxBa;;AAEZ,UAAKD,KAAL,GAAa;AACXL,MAAAA,eAAe,EAAE,CADN;AAEXM,MAAAA,oBAAoB,EAAE;AAFX,KAAb;AAFY;AAMb;;;;6BAoBQ;AACP,aACE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAAEC,UAAAA,IAAI,EAAE;AAAR,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,eAAD;AACA,QAAA,MAAM,EAAEC,OAAO,kCADf;AAEA,QAAA,KAAK,EAAEC,MAAM,CAACC,eAFd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAIE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAED,MAAM,CAACE,YAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCADF,EAEE,oBAAC,MAAD;AACE,QAAA,KAAK,EAAE,KAAKN,KAAL,CAAWL,eADpB;AAEE,QAAA,OAAO,EAAE,KAAKF,sBAFhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,CAJF,EAWE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEW,MAAM,CAACE,YAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCADF,EAEE,oBAAC,MAAD;AACE,QAAA,KAAK,EAAE,KAAKN,KAAL,CAAWC,oBADpB;AAEE,QAAA,OAAO,EAAE,KAAKF,2BAFhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,CAXF,CADF,CADF;AAuBD;;;;EAnDwCR,S;;SAAtBC,a;AAsDrB,IAAMY,MAAM,GAAGG,UAAU,CAACC,MAAX,CAAkB;AAC7BH,EAAAA,eAAe,EAAE;AACfH,IAAAA,IAAI,EAAE,CADS;AAEfO,IAAAA,UAAU,EAAE,OAFG;AAGfC,IAAAA,cAAc,EAAE;AAHD,GADY;AAO7BJ,EAAAA,YAAY,EAAE;AACZX,IAAAA,eAAe,EAAE,SADL;AAEZgB,IAAAA,aAAa,EAAE,KAFH;AAGZD,IAAAA,cAAc,EAAE,eAHJ;AAIZE,IAAAA,UAAU,EAAE,QAJA;AAKZC,IAAAA,MAAM,EAAE,EALI;AAMZC,IAAAA,YAAY,EAAE;AANF;AAPe,CAAlB,CAAf","sourcesContent":["import React, { Component } from \"react\";\r\nimport {\r\n  StyleSheet,\r\n  ImageBackground,\r\n  Text,\r\n  View,\r\n  Button,\r\n} from \"react-native\";\r\n\r\nexport default class SettingScreen extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      backgroundColor: 0,\r\n      supperssNotification: \"OFF\",\r\n    }\r\n  }\r\n\r\n  backgroundColorOnPress = () => {\r\n    this.setState({\r\n      backgroundColor: Math.floor(Math.random() * 10) + 1\r\n    })\r\n  }\r\n\r\n  suppressNotificationOnPress = () => {\r\n    if (this.state.supperssNotification == \"OFF\") {\r\n      this.setState({\r\n        supperssNotification: \"ON\"\r\n      })\r\n    } else {\r\n      this.setState({\r\n        supperssNotification: \"OFF\"\r\n      })\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return(\r\n      <View style={{ flex: 1 }}>\r\n        <ImageBackground\r\n        source={require(\"../assets/BackgroundOrange.png\")}\r\n        style={styles.backgroundImage}\r\n        >\r\n          <View style={styles.settingItems}>\r\n            <Text>Change Background Color</Text>\r\n            <Button\r\n              title={this.state.backgroundColor}\r\n              onPress={this.backgroundColorOnPress}\r\n            />\r\n          </View>\r\n          <View style={styles.settingItems}>\r\n            <Text>Suppress Notifications</Text>\r\n            <Button\r\n              title={this.state.supperssNotification}\r\n              onPress={this.suppressNotificationOnPress}\r\n            />\r\n          </View>\r\n        </ImageBackground>\r\n      </View>\r\n    );\r\n  }\r\n}\r\n\r\nconst styles = StyleSheet.create({ \r\n    backgroundImage: {\r\n      flex: 1,\r\n      resizeMode: \"cover\",\r\n      justifyContent: \"flex-start\",\r\n    },\r\n\r\n    settingItems: {\r\n      backgroundColor: \"#ffffff\",\r\n      flexDirection: \"row\",\r\n      justifyContent: \"space-between\",\r\n      alignItems: \"center\",\r\n      margin: 10,\r\n      borderRadius: 5,\r\n    },  \r\n  });"]},"metadata":{},"sourceType":"module"}