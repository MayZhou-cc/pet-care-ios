{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\s4397674\\\\Documents\\\\PP\\\\test\\\\components\\\\NutritionalScreen.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\n{}\nimport Icon from \"@expo/vector-icons/Ionicons\";\nimport React, { Component } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport { createAppContainer } from \"react-navigation\";\nimport { createMaterialTopTabNavigator } from \"react-navigation-tabs\";\nimport { FontAwesome, MaterialCommunityIcons } from \"@expo/vector-icons\";\nimport tipData from \"../assets/data/tip.json\";\nimport CardView from \"react-native-cardview\";\nimport { Card, CardTitle, CardContent, CardAction, CardButton, CardImage } from \"react-native-cards\";\nimport { Item } from \"react-native-paper/lib/typescript/src/components/List/List\";\n\nfunction ReadTab() {\n  return React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 5\n    }\n  }, tipData[\"Nutritional Tips\"].map(function (item, index) {\n    if (item.hasRead) {\n      console.log(item.description);\n      React.createElement(Card, {\n        style: styles.taskCard,\n        cornerRadius: 5,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }\n      }, React.createElement(CardTitle, {\n        title: Item.title,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 13\n        }\n      }));\n      React.createElement(TouchableOpacity, {\n        key: item.id,\n        style: styles.textContainer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }\n      }, React.createElement(Text, {\n        style: styles.text,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 13\n        }\n      }, \"Title: \", item.title));\n    }\n  }));\n}\n\nReadTab.navigationOptions = {\n  tabBarIcon: function tabBarIcon(_ref) {\n    var tintColor = _ref.tintColor,\n        focused = _ref.focused;\n    return React.createElement(Icon, {\n      name: focused ? \"ios-mail-open\" : \"md-mail-open\",\n      color: tintColor,\n      size: 25,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 5\n      }\n    });\n  }\n};\n\nfunction UnreadTab() {\n  return React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 5\n    }\n  }, tipData[\"Nutritional Tips\"].map(function (item, index) {\n    React.createElement(TouchableOpacity, {\n      key: item.id,\n      style: styles.textContainer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }\n    }, React.createElement(Text, {\n      style: styles.text,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 11\n      }\n    }, \"Title: \", item.title, \", Type: \", item.type, \", Description:\", item.description, \", Reward: \", item.reward));\n  }));\n}\n\nUnreadTab.navigationOptions = {\n  tabBarIcon: function tabBarIcon(_ref2) {\n    var tintColor = _ref2.tintColor,\n        focused = _ref2.focused;\n    return React.createElement(Icon, {\n      name: focused ? \"ios-mail-unread\" : \"md-mail-unread\",\n      color: tintColor,\n      size: 25,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 5\n      }\n    });\n  }\n};\nvar TabNavigator = createMaterialTopTabNavigator({\n  Read: ReadTab,\n  Unread: UnreadTab\n}, {\n  tabBarOptions: {\n    activeTintColor: \"white\",\n    showIcon: true,\n    showLabel: false,\n    style: {\n      backgroundColor: \"#5F7EB2\"\n    }\n  }\n});\nvar AppIndex = createAppContainer(TabNavigator);\n\nvar NutritionalScreen = function (_Component) {\n  _inherits(NutritionalScreen, _Component);\n\n  var _super = _createSuper(NutritionalScreen);\n\n  function NutritionalScreen(props) {\n    var _this;\n\n    _classCallCheck(this, NutritionalScreen);\n\n    _this = _super.call(this, props);\n    _this.state = {};\n    return _this;\n  }\n\n  _createClass(NutritionalScreen, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(View, {\n        style: {\n          flex: 1,\n          backgroundColor: \"#5F7EB2\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 7\n        }\n      }, React.createElement(StatusBar, {\n        backgroundColor: \"white\",\n        barStyle: \"light-content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 9\n        }\n      }), React.createElement(View, {\n        style: styles.header,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 9\n        }\n      }, React.createElement(FontAwesome, {\n        style: {\n          marginLeft: 15\n        },\n        name: \"home\",\n        size: 30,\n        color: \"white\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 11\n        }\n      }), React.createElement(FontAwesome, {\n        style: {\n          marginLeft: 25\n        },\n        name: \"question-circle\",\n        size: 30,\n        color: \"white\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 11\n        }\n      }), React.createElement(Text, {\n        style: {\n          marginLeft: 20,\n          textDecorationLine: \"underline\",\n          fontSize: 25,\n          textAlign: \"center\",\n          color: \"white\",\n          fontWeight: \"bold\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 11\n        }\n      }, \" \", \"Nutritional Tips\", \" \"), React.createElement(MaterialCommunityIcons, {\n        style: {\n          marginLeft: 30\n        },\n        name: \"circle-expand\",\n        size: 30,\n        color: \"white\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 11\n        }\n      }), React.createElement(Text, {\n        style: {\n          fontSize: 25,\n          color: \"white\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 11\n        }\n      }, \"102\")), React.createElement(AppIndex, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 9\n        }\n      }));\n    }\n  }]);\n\n  return NutritionalScreen;\n}(Component);\n\nexport { NutritionalScreen as default };\n{}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#5F7EB2\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  taskCard: {\n    flex: 5,\n    backgroundColor: \"#fff\",\n    borderColor: \"black\",\n    borderWidth: 1,\n    margin: 10,\n    justifyContent: \"center\"\n  },\n  taskDiv: {\n    flex: 1,\n    left: 10,\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    alignItems: \"flex-start\"\n  },\n  taskTitle: {\n    fontSize: 20\n  },\n  rewardPoint: {\n    fontSize: 20,\n    color: \"darkblue\"\n  },\n  taskbody: {\n    flex: 1,\n    fontSize: 14\n  },\n  header: {\n    flexDirection: \"row\"\n  },\n  tabs: {\n    flex: 1,\n    backgroundColor: \"#D3E3F6\",\n    alignItems: \"flex-start\",\n    justifyContent: \"flex-start\",\n    textAlign: \"left\"\n  }\n});","map":{"version":3,"sources":["C:/Users/s4397674/Documents/PP/test/components/NutritionalScreen.js"],"names":["Icon","React","Component","createAppContainer","createMaterialTopTabNavigator","FontAwesome","MaterialCommunityIcons","tipData","CardView","Card","CardTitle","CardContent","CardAction","CardButton","CardImage","Item","ReadTab","map","item","index","hasRead","console","log","description","styles","taskCard","title","id","textContainer","text","navigationOptions","tabBarIcon","tintColor","focused","UnreadTab","type","reward","TabNavigator","Read","Unread","tabBarOptions","activeTintColor","showIcon","showLabel","style","backgroundColor","AppIndex","NutritionalScreen","props","state","flex","header","marginLeft","textDecorationLine","fontSize","textAlign","color","fontWeight","StyleSheet","create","container","alignItems","justifyContent","borderColor","borderWidth","margin","taskDiv","left","flexDirection","taskTitle","rewardPoint","taskbody","tabs"],"mappings":"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","sourcesContent":["//NutritionScreen.js\r\n\r\n{\r\n  /* \r\ndependencies installed: 1. npm install @feuer/react-tabs\r\n                        2. npm install react-native-paper\r\n*/\r\n}\r\nimport Icon from \"react-native-vector-icons/Ionicons\";\r\nimport React, { Component } from \"react\";\r\nimport {\r\n  StyleSheet,\r\n  Text,\r\n  View,\r\n  StatusBar,\r\n  TouchableOpacity,\r\n  Button,\r\n} from \"react-native\";\r\nimport { createAppContainer } from \"react-navigation\";\r\nimport { createMaterialTopTabNavigator } from \"react-navigation-tabs\";\r\nimport { FontAwesome, MaterialCommunityIcons } from \"@expo/vector-icons\";\r\nimport tipData from \"../assets/data/tip.json\";\r\nimport CardView from \"react-native-cardview\";\r\nimport {\r\n  Card,\r\n  CardTitle,\r\n  CardContent,\r\n  CardAction,\r\n  CardButton,\r\n  CardImage,\r\n} from \"react-native-cards\";\r\nimport { Item } from \"react-native-paper/lib/typescript/src/components/List/List\";\r\n\r\n// export default NutritionalScreen(\r\n//   {\r\n//     Home: { screen: HomeScreen },\r\n//     Quest: { screen: QuestScreen },\r\n//     NutritionalTips: { screen: NutritionalScreen },\r\n//   },\r\n//   {\r\n//     navigationOptions: ({ navigation }) => ({\r\n//       tabBarIcon: ({ focused }) => {\r\n//         const { routeName } = navigation.state;\r\n//         let iconName;\r\n//         switch (routeName) {\r\n//           case \"Home\":\r\n//             iconName =\r\n//               Platform.OS === \"ios\"\r\n//                 ? `ios-information-circle${focused ? \"\" : \"-outline\"}`\r\n//                 : \"md-information-circle\";\r\n//             break;\r\n//         }\r\n//         return (\r\n//           <Ionicons\r\n//             name={iconName}\r\n//             size={28}\r\n//             style={{ marginBottom: -3 }}\r\n//             color={focused ? Design.tabIconSelected : Design.tabIconDefault}\r\n//           />\r\n//         );\r\n//       },\r\n//     }),\r\n//     tabBarComponent: TabBarBottom,\r\n//     tabBarPosition: \"bottom\",\r\n//     animationEnabled: false,\r\n//     swipeEnabled: false,\r\n//   }\r\n// );\r\nfunction ReadTab() {\r\n  return (\r\n    <View>\r\n      {tipData[\"Nutritional Tips\"].map((item, index) => {\r\n        if (item.hasRead) {\r\n          console.log(item.description);\r\n\r\n          <Card style={styles.taskCard} cornerRadius={5}>\r\n            <CardTitle title={Item.title} />\r\n\r\n            {/* <View style={styles.taskDiv}>\r\n              <Text style={styles.taskTitle}>aaaa</Text>\r\n              <Text style={styles.taskTitle}>{item.title}</Text>\r\n              <Text style={styles.rewardPoint}>{item.reward}</Text>\r\n            </View>\r\n            <Text style={styles.taskbody}>{item.description}</Text> */}\r\n          </Card>;\r\n\r\n          <TouchableOpacity key={item.id} style={styles.textContainer}>\r\n            <Text style={styles.text}>Title: {item.title}</Text>\r\n          </TouchableOpacity>;\r\n        }\r\n      })}\r\n    </View>\r\n  );\r\n}\r\nReadTab.navigationOptions = {\r\n  tabBarIcon: ({ tintColor, focused }) => (\r\n    <Icon\r\n      name={focused ? \"ios-mail-open\" : \"md-mail-open\"}\r\n      color={tintColor}\r\n      size={25}\r\n    />\r\n  ),\r\n};\r\n\r\nfunction UnreadTab() {\r\n  return (\r\n    <View>\r\n      {tipData[\"Nutritional Tips\"].map((item, index) => {\r\n        // if (!item.hasRead) {\r\n        <TouchableOpacity key={item.id} style={styles.textContainer}>\r\n          <Text style={styles.text}>\r\n            Title: {item.title}, Type: {item.type}, Description:\r\n            {item.description}, Reward: {item.reward}\r\n          </Text>\r\n        </TouchableOpacity>;\r\n        // }\r\n      })}\r\n    </View>\r\n  );\r\n}\r\nUnreadTab.navigationOptions = {\r\n  tabBarIcon: ({ tintColor, focused }) => (\r\n    <Icon\r\n      name={focused ? \"ios-mail-unread\" : \"md-mail-unread\"}\r\n      color={tintColor}\r\n      size={25}\r\n    />\r\n  ),\r\n};\r\n\r\nconst TabNavigator = createMaterialTopTabNavigator(\r\n  {\r\n    Read: ReadTab,\r\n    Unread: UnreadTab,\r\n  },\r\n  {\r\n    tabBarOptions: {\r\n      activeTintColor: \"white\",\r\n      showIcon: true,\r\n      showLabel: false,\r\n      style: {\r\n        backgroundColor: \"#5F7EB2\",\r\n      },\r\n    },\r\n  }\r\n);\r\nconst AppIndex = createAppContainer(TabNavigator);\r\n\r\nexport default class NutritionalScreen extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n  render() {\r\n    return (\r\n      // <View style={styles.container}>\r\n      //   {/*  ICONS  */}\r\n      //   <View style={{ flexDirection: \"row\" }}>\r\n      //     <FontAwesome\r\n      //       style={{ marginLeft: 15 }}\r\n      //       name=\"home\"\r\n      //       size={30}\r\n      //       color=\"white\"\r\n      //     />\r\n      //     <FontAwesome\r\n      //       style={{ marginLeft: 20 }}\r\n      //       name=\"question-circle\"\r\n      //       size={30}\r\n      //       color=\"white\"\r\n      //     />\r\n      //     <MaterialCommunityIcons\r\n      //       style={{ marginLeft: 470, paddingRight: 10 }}\r\n      //       name=\"circle-expand\"\r\n      //       size={30}\r\n      //       color=\"white\"\r\n      //     />\r\n      //     <Text style={{ fontSize: 25 }}>102</Text>\r\n      //   </View>\r\n      <View style={{ flex: 1, backgroundColor: \"#5F7EB2\" }}>\r\n        <StatusBar backgroundColor=\"white\" barStyle=\"light-content\" />\r\n        <View style={styles.header}>\r\n          {/*  PAGE TITLE  */}\r\n          <FontAwesome\r\n            style={{ marginLeft: 15 }}\r\n            name=\"home\"\r\n            size={30}\r\n            color=\"white\"\r\n          />\r\n          <FontAwesome\r\n            style={{ marginLeft: 25 }}\r\n            name=\"question-circle\"\r\n            size={30}\r\n            color=\"white\"\r\n          />\r\n          <Text\r\n            style={{\r\n              marginLeft: 20,\r\n              textDecorationLine: \"underline\",\r\n              fontSize: 25,\r\n              textAlign: \"center\",\r\n              color: \"white\",\r\n              fontWeight: \"bold\",\r\n            }}\r\n          >\r\n            {\" \"}\r\n            Nutritional Tips{\" \"}\r\n          </Text>\r\n          <MaterialCommunityIcons\r\n            style={{ marginLeft: 30 }}\r\n            name=\"circle-expand\"\r\n            size={30}\r\n            color=\"white\"\r\n          />\r\n          <Text style={{ fontSize: 25, color: \"white\" }}>102</Text>\r\n        </View>\r\n        <AppIndex />\r\n      </View>\r\n\r\n      //         {/*  TABS  */}\r\n      //         <View className=\"NutritionPage\">\r\n      //           <Tabs\r\n      //             tabsProps={{\r\n      //               style: {\r\n      //                 textAlign: \"left\",\r\n      //               },\r\n      //             }}\r\n      //             activeTab={{\r\n      //               id: \"tab1\",\r\n      //             }}\r\n      //           >\r\n      //             <View style={styles.tabs}>\r\n      //               <Tabs.Tab id=\"tab1\" title=\"Unread\">\r\n      //                 <View>\r\n      //                   <DataTable>\r\n      //                     <DataTable.Header>\r\n      //                       <DataTable.Title>[Tip Name]</DataTable.Title>\r\n      //                       <DataTable.Title numeric>\r\n      //                         Type : [Tip Type]\r\n      //                       </DataTable.Title>\r\n      //                       <DataTable.Title numeric>\r\n      //                         Reward :{\" \"}\r\n      //                         <MaterialCommunityIcons\r\n      //                           name=\"circle-expand\"\r\n      //                           size={10}\r\n      //                           color=\"black\"\r\n      //                         />\r\n      //                         5\r\n      //                       </DataTable.Title>\r\n      //                     </DataTable.Header>\r\n\r\n      //                     <DataTable.Row>\r\n      //                       <Text>\r\n      //                         [ Task Desceiption : hubvcouehbv hwivoiebuvberu\r\n      //                         oibrberoivb reboi1rbiv1bre oboiogiv1uerbgo vi1\r\n      //                         rogiv1broigub 1oribgo1i rbgoivu1bro ]\r\n      //                       </Text>\r\n      //                     </DataTable.Row>\r\n\r\n      //                     <DataTable.Header>\r\n      //                       <DataTable.Title>[Tip Name]</DataTable.Title>\r\n      //                       <DataTable.Title numeric>\r\n      //                         Type : [Tip Type]\r\n      //                       </DataTable.Title>\r\n      //                       <DataTable.Title numeric>\r\n      //                         Reward :{\" \"}\r\n      //                         <MaterialCommunityIcons\r\n      //                           name=\"circle-expand\"\r\n      //                           size={10}\r\n      //                           color=\"black\"\r\n      //                         />\r\n      //                         6\r\n      //                       </DataTable.Title>\r\n      //                     </DataTable.Header>\r\n\r\n      //                     <DataTable.Row>\r\n      //                       <Text>\r\n      //                         [ Task Desceiption : hubvcouehbv hwivoiebuvberu oiboivb\r\n      //                         reboi1rbiv1bre ov1rbogigo v1rgboirbgovi1 rogiv1broigub\r\n      //                         1oribgo1i rbgoivu1br ]\r\n      //                       </Text>\r\n      //                     </DataTable.Row>\r\n\r\n      //                     <DataTable.Header>\r\n      //                       <DataTable.Title>[Tip Name]</DataTable.Title>\r\n      //                       <DataTable.Title numeric>\r\n      //                         Type : [Tip Type]\r\n      //                       </DataTable.Title>\r\n      //                       <DataTable.Title numeric>\r\n      //                         Reward :{\" \"}\r\n      //                         <MaterialCommunityIcons\r\n      //                           name=\"circle-expand\"\r\n      //                           size={10}\r\n      //                           color=\"black\"\r\n      //                         />\r\n      //                         6\r\n      //                       </DataTable.Title>\r\n      //                     </DataTable.Header>\r\n\r\n      //                     <DataTable.Row>\r\n      //                       <Text>\r\n      //                         [ Task Desceiption : hubvcouehbv hwivoiebuvberu oiboivb\r\n      //                         reboi1rbiv1bre ov1rbogigo v1rgboirbgovi1 rogiv1broigub\r\n      //                         1oribgo1i rbgoivu1br ]\r\n      //                       </Text>\r\n      //                     </DataTable.Row>\r\n      //                   </DataTable>\r\n      //                 </View>\r\n      //               </Tabs.Tab>\r\n\r\n      //               <View></View>\r\n      //               <Tabs.Tab style={{ color: \"#FFFFFF\" }} id=\"tab2\" title=\"Read\">\r\n      //                 <View>\r\n      //                   <DataTable>\r\n      //                     <DataTable.Header>\r\n      //                       <DataTable.Title>[Tip Name]</DataTable.Title>\r\n      //                       <DataTable.Title numeric>\r\n      //                         Type : [Tip Type]\r\n      //                       </DataTable.Title>\r\n      //                       <DataTable.Title numeric>\r\n      //                         Reward :{\" \"}\r\n      //                         <MaterialCommunityIcons\r\n      //                           name=\"circle-expand\"\r\n      //                           size={10}\r\n      //                           color=\"black\"\r\n      //                         />\r\n      //                         7\r\n      //                       </DataTable.Title>\r\n      //                     </DataTable.Header>\r\n\r\n      //                     <DataTable.Row>\r\n      //                       <Text>\r\n      //                         Task Desceiption : hduhv hbrovh hbrofu yuy uyuy\r\n      //                         idwefcvwdch bwihbwb wiufebf whebf eoiwbc\r\n      //                       </Text>\r\n      //                     </DataTable.Row>\r\n\r\n      //                     <DataTable.Header>\r\n      //                       <DataTable.Title>[Tip Name]</DataTable.Title>\r\n      //                       <DataTable.Title numeric>\r\n      //                         Type : [Tip Type]\r\n      //                       </DataTable.Title>\r\n      //                       <DataTable.Title numeric>\r\n      //                         Reward :{\" \"}\r\n      //                         <MaterialCommunityIcons\r\n      //                           name=\"circle-expand\"\r\n      //                           size={10}\r\n      //                           color=\"black\"\r\n      //                         />\r\n      //                         8\r\n      //                       </DataTable.Title>\r\n      //                     </DataTable.Header>\r\n\r\n      //                     <DataTable.Row>\r\n      //                       <Text>\r\n      //                         Task Desceiption : hduhv hbrovh hbrofu yuy uyuy\r\n      //                         idwefcvwdch bwihbwb wiufebf whebf eoiwbc\r\n      //                       </Text>\r\n      //                     </DataTable.Row>\r\n\r\n      //                     <DataTable.Header>\r\n      //                       <DataTable.Title>[Tip Name]</DataTable.Title>\r\n      //                       <DataTable.Title numeric>\r\n      //                         Type : [Tip Type]\r\n      //                       </DataTable.Title>\r\n      //                       <DataTable.Title style={{ fontWeight: \"bold\" }} numeric>\r\n      //                         Reward :{\" \"}\r\n      //                         <MaterialCommunityIcons\r\n      //                           name=\"circle-expand\"\r\n      //                           size={10}\r\n      //                           color=\"black\"\r\n      //                         />\r\n      //                         20\r\n      //                       </DataTable.Title>\r\n      //                     </DataTable.Header>\r\n\r\n      //                     <DataTable.Row>\r\n      //                       <Text>\r\n      //                         Task Desceiption : hduhv hbrovh hbrofu yuy uyuy\r\n      //                         idwefcvwdch bwihbwb wiufebf whebf eoiwbc\r\n      //                       </Text>\r\n      //                     </DataTable.Row>\r\n      //                   </DataTable>\r\n      //                 </View>\r\n      //               </Tabs.Tab>\r\n      //             </View>\r\n      //           </Tabs>\r\n      //         </View>\r\n      //       </View>\r\n    );\r\n  }\r\n}\r\n\r\n{\r\n  /*  STYLESHEET  */\r\n}\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: \"#5F7EB2\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n  taskCard: {\r\n    flex: 5,\r\n    backgroundColor: \"#fff\",\r\n    borderColor: \"black\",\r\n    borderWidth: 1,\r\n    margin: 10,\r\n    justifyContent: \"center\",\r\n  },\r\n  taskDiv: {\r\n    flex: 1,\r\n    left: 10,\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-between\",\r\n    alignItems: \"flex-start\",\r\n  },\r\n  taskTitle: {\r\n    fontSize: 20,\r\n  },\r\n  rewardPoint: {\r\n    fontSize: 20,\r\n    color: \"darkblue\",\r\n  },\r\n  taskbody: {\r\n    flex: 1,\r\n    fontSize: 14,\r\n  },\r\n  header: {\r\n    flexDirection: \"row\",\r\n  },\r\n  tabs: {\r\n    flex: 1,\r\n    backgroundColor: \"#D3E3F6\",\r\n    alignItems: \"flex-start\",\r\n    justifyContent: \"flex-start\",\r\n    textAlign: \"left\",\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}