{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\s4397674\\\\Documents\\\\PP\\\\test\\\\components\\\\auth\\\\SignUpScreen.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport * as firebase from \"firebase\";\n\nfunction readUserTemplate(uid) {\n  firebase.database().ref(\"response/1/\").once(\"value\", function (dataSnapShot) {\n    var key = dataSnapShot.val();\n    createNewUser(uid, key);\n  });\n}\n\nfunction createNewUser(index, content) {\n  return new Promise(function (resolve, reject) {\n    var key;\n\n    if (index != null) {\n      key = index;\n    } else {\n      key = firebase.database().ref().push().key;\n    }\n\n    var dataToSave = content;\n    firebase.database().ref(\"/response/\" + key).update(dataToSave).then(function (snapshot) {\n      resolve(snapshot);\n    }).catch(function (err) {\n      reject(err);\n    });\n  });\n}\n\nvar SignUpScreen = function (_Component) {\n  _inherits(SignUpScreen, _Component);\n\n  var _super = _createSuper(SignUpScreen);\n\n  function SignUpScreen(props) {\n    var _this;\n\n    _classCallCheck(this, SignUpScreen);\n\n    _this = _super.call(this, props);\n\n    _this.onSignupPress = function () {\n      if (_this.state.password !== _this.state.passwordConfirm) {\n        Alert.alert(\"Passwords do not match\");\n        return;\n      }\n\n      firebase.auth().createUserWithEmailAndPassword(_this.state.email, _this.state.password).then(function () {\n        readUserTemplate(firebase.auth().getUid());\n      }, function (error) {\n        Alert.alert(error.message);\n      });\n    };\n\n    _this.onBackToLoginPress = function () {\n      _this.props.navigation.navigate(\"Login\");\n    };\n\n    _this.state = {\n      email: \"\",\n      password: \"\",\n      passwordConfirm: \"\"\n    };\n    return _this;\n  }\n\n  _createClass(SignUpScreen, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(View, {\n        style: styles.container,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 7\n        }\n      }, React.createElement(ImageBackground, {\n        source: require(\"../../assets/BackgroundOrange.png\"),\n        style: styles.backgroundImage,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 9\n        }\n      }, React.createElement(Text, {\n        style: styles.HeadingText,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }\n      }, \"Sign Up\"), React.createElement(TextInput, {\n        title: \"Signup\",\n        style: styles.inputStyle,\n        value: this.state.email,\n        onChangeText: function onChangeText(text) {\n          _this2.setState({\n            email: text\n          });\n        },\n        placeholder: \"Email\",\n        keyboardType: \"email-address\",\n        autoCapitalize: \"none\",\n        autoCorrect: false,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 11\n        }\n      }), React.createElement(View, {\n        style: {\n          paddingTop: 10\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 11\n        }\n      }), React.createElement(TextInput, {\n        style: styles.inputStyle,\n        value: this.state.password,\n        onChangeText: function onChangeText(text) {\n          _this2.setState({\n            password: text\n          });\n        },\n        placeholder: \"Password\",\n        secureTextEntry: true,\n        autoCapitalize: \"none\",\n        autoCorrect: false,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 11\n        }\n      }), React.createElement(View, {\n        style: {\n          paddingTop: 10\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 11\n        }\n      }), React.createElement(TextInput, {\n        style: styles.inputStyle,\n        value: this.state.passwordConfirm,\n        onChangeText: function onChangeText(text) {\n          _this2.setState({\n            passwordConfirm: text\n          });\n        },\n        placeholder: \"Password (confirm)\",\n        secureTextEntry: true,\n        autoCapitalize: \"none\",\n        autoCorrect: false,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 11\n        }\n      }), React.createElement(TouchableOpacity, {\n        style: styles.loginText,\n        onPress: this.onSignupPress,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 11\n        }\n      }, React.createElement(Text, {\n        style: styles.customBtnText,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 13\n        }\n      }, \"Sign Up\")), React.createElement(TouchableOpacity, {\n        style: styles.loginText,\n        onPress: this.onBackToLoginPress,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 11\n        }\n      }, React.createElement(Text, {\n        style: styles.customBtnText,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 13\n        }\n      }, \"Back to Login\"))));\n    }\n  }]);\n\n  return SignUpScreen;\n}(Component);\n\nexport { SignUpScreen as default };\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    display: \"flex\",\n    flexDirection: \"column\",\n    resizeMode: \"cover\",\n    justifyContent: \"center\"\n  },\n  HeadingText: {\n    fontSize: 30,\n    fontWeight: \"500\",\n    color: \"#990000\",\n    textAlign: \"center\",\n    marginBottom: 40\n  },\n  backgroundImage: {\n    flex: 1,\n    resizeMode: \"cover\",\n    justifyContent: \"center\"\n  },\n  customBtnText: {\n    fontSize: 20,\n    fontWeight: \"400\",\n    color: \"#990000\",\n    textAlign: \"center\"\n  },\n  loginText: {\n    color: \"#990000\",\n    marginTop: 30,\n    textAlign: \"center\",\n    flexDirection: \"column\",\n    backgroundColor: \"#FFE5CC\",\n    borderRadius: 5,\n    marginLeft: 15,\n    marginBottom: 10,\n    marginTop: 5,\n    width: 150,\n    height: 30,\n    flexDirection: \"column\",\n    alignSelf: \"center\"\n  },\n  inputStyle: {\n    width: \"65%\",\n    marginBottom: 10,\n    paddingBottom: 15,\n    alignSelf: \"center\",\n    borderColor: \"#FFFFFF\",\n    borderBottomWidth: 1,\n    borderRadius: 5,\n    fontSize: 18,\n    textAlign: \"center\",\n    marginBottom: 20\n  }\n});","map":{"version":3,"sources":["C:/Users/s4397674/Documents/PP/test/components/auth/SignUpScreen.js"],"names":["React","Component","firebase","readUserTemplate","uid","database","ref","once","dataSnapShot","key","val","createNewUser","index","content","Promise","resolve","reject","push","dataToSave","update","then","snapshot","catch","err","SignUpScreen","props","onSignupPress","state","password","passwordConfirm","Alert","alert","auth","createUserWithEmailAndPassword","email","getUid","error","message","onBackToLoginPress","navigation","navigate","styles","container","require","backgroundImage","HeadingText","inputStyle","text","setState","paddingTop","loginText","customBtnText","StyleSheet","create","flex","display","flexDirection","resizeMode","justifyContent","fontSize","fontWeight","color","textAlign","marginBottom","marginTop","backgroundColor","borderRadius","marginLeft","width","height","alignSelf","paddingBottom","borderColor","borderBottomWidth"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;;;;;;;AAWA,OAAO,KAAKC,QAAZ,MAA0B,UAA1B;;AAEA,SAASC,gBAAT,CAA0BC,GAA1B,EAA+B;AAC7BF,EAAAA,QAAQ,CACLG,QADH,GAEGC,GAFH,CAEO,aAFP,EAGGC,IAHH,CAGQ,OAHR,EAGiB,UAACC,YAAD,EAAkB;AAC/B,QAAIC,GAAG,GAAGD,YAAY,CAACE,GAAb,EAAV;AACAC,IAAAA,aAAa,CAACP,GAAD,EAAMK,GAAN,CAAb;AACD,GANH;AAOD;;AAGD,SAASE,aAAT,CAAuBC,KAAvB,EAA8BC,OAA9B,EAAuC;AACrC,SAAO,IAAIC,OAAJ,CAAY,UAAUC,OAAV,EAAmBC,MAAnB,EAA2B;AAC5C,QAAIP,GAAJ;;AACA,QAAIG,KAAK,IAAI,IAAb,EAAmB;AACjBH,MAAAA,GAAG,GAAGG,KAAN;AACD,KAFD,MAEO;AACLH,MAAAA,GAAG,GAAGP,QAAQ,CAACG,QAAT,GAAoBC,GAApB,GAA0BW,IAA1B,GAAiCR,GAAvC;AACD;;AACD,QAAIS,UAAU,GAAGL,OAAjB;AAEAX,IAAAA,QAAQ,CACLG,QADH,GAEGC,GAFH,CAEO,eAAeG,GAFtB,EAGGU,MAHH,CAGUD,UAHV,EAIGE,IAJH,CAIQ,UAACC,QAAD,EAAc;AAClBN,MAAAA,OAAO,CAACM,QAAD,CAAP;AACD,KANH,EAOGC,KAPH,CAOS,UAACC,GAAD,EAAS;AACdP,MAAAA,MAAM,CAACO,GAAD,CAAN;AACD,KATH;AAUD,GAnBM,CAAP;AAoBD;;IAEoBC,Y;;;;;AACnB,wBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,8BAAMA,KAAN;;AADiB,UAUnBC,aAVmB,GAUH,YAAM;AACpB,UAAI,MAAKC,KAAL,CAAWC,QAAX,KAAwB,MAAKD,KAAL,CAAWE,eAAvC,EAAwD;AACtDC,QAAAA,KAAK,CAACC,KAAN,CAAY,wBAAZ;AACA;AACD;;AAED7B,MAAAA,QAAQ,CACL8B,IADH,GAEGC,8BAFH,CAEkC,MAAKN,KAAL,CAAWO,KAF7C,EAEoD,MAAKP,KAAL,CAAWC,QAF/D,EAGGR,IAHH,CAII,YAAM;AACJjB,QAAAA,gBAAgB,CAACD,QAAQ,CAAC8B,IAAT,GAAgBG,MAAhB,EAAD,CAAhB;AACD,OANL,EAOI,UAACC,KAAD,EAAW;AACTN,QAAAA,KAAK,CAACC,KAAN,CAAYK,KAAK,CAACC,OAAlB;AACD,OATL;AAWD,KA3BkB;;AAAA,UA2DnBC,kBA3DmB,GA2DE,YAAM;AACzB,YAAKb,KAAL,CAAWc,UAAX,CAAsBC,QAAtB,CAA+B,OAA/B;AACD,KA7DkB;;AAEjB,UAAKb,KAAL,GAAa;AACXO,MAAAA,KAAK,EAAE,EADI;AAEXN,MAAAA,QAAQ,EAAE,EAFC;AAGXC,MAAAA,eAAe,EAAE;AAHN,KAAb;AAFiB;AAQlB;;;;6BAuDQ;AAAA;;AACP,aACE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEY,MAAM,CAACC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,eAAD;AACE,QAAA,MAAM,EAAEC,OAAO,qCADjB;AAEE,QAAA,KAAK,EAAEF,MAAM,CAACG,eAFhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAIE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEH,MAAM,CAACI,WAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAJF,EAKE,oBAAC,SAAD;AACE,QAAA,KAAK,EAAC,QADR;AAEE,QAAA,KAAK,EAAEJ,MAAM,CAACK,UAFhB;AASE,QAAA,KAAK,EAAE,KAAKnB,KAAL,CAAWO,KATpB;AAUE,QAAA,YAAY,EAAE,sBAACa,IAAD,EAAU;AACtB,UAAA,MAAI,CAACC,QAAL,CAAc;AAAEd,YAAAA,KAAK,EAAEa;AAAT,WAAd;AACD,SAZH;AAaE,QAAA,WAAW,EAAC,OAbd;AAcE,QAAA,YAAY,EAAC,eAdf;AAeE,QAAA,cAAc,EAAC,MAfjB;AAgBE,QAAA,WAAW,EAAE,KAhBf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QALF,EAwBE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAAEE,UAAAA,UAAU,EAAE;AAAd,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAxBF,EA0BE,oBAAC,SAAD;AACE,QAAA,KAAK,EAAER,MAAM,CAACK,UADhB;AAQE,QAAA,KAAK,EAAE,KAAKnB,KAAL,CAAWC,QARpB;AASE,QAAA,YAAY,EAAE,sBAACmB,IAAD,EAAU;AACtB,UAAA,MAAI,CAACC,QAAL,CAAc;AAAEpB,YAAAA,QAAQ,EAAEmB;AAAZ,WAAd;AACD,SAXH;AAYE,QAAA,WAAW,EAAC,UAZd;AAaE,QAAA,eAAe,EAAE,IAbnB;AAcE,QAAA,cAAc,EAAC,MAdjB;AAeE,QAAA,WAAW,EAAE,KAff;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QA1BF,EA4CE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAAEE,UAAAA,UAAU,EAAE;AAAd,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QA5CF,EA8CE,oBAAC,SAAD;AACE,QAAA,KAAK,EAAER,MAAM,CAACK,UADhB;AAQE,QAAA,KAAK,EAAE,KAAKnB,KAAL,CAAWE,eARpB;AASE,QAAA,YAAY,EAAE,sBAACkB,IAAD,EAAU;AACtB,UAAA,MAAI,CAACC,QAAL,CAAc;AAAEnB,YAAAA,eAAe,EAAEkB;AAAnB,WAAd;AACD,SAXH;AAYE,QAAA,WAAW,EAAC,oBAZd;AAaE,QAAA,eAAe,EAAE,IAbnB;AAcE,QAAA,cAAc,EAAC,MAdjB;AAeE,QAAA,WAAW,EAAE,KAff;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QA9CF,EAgEE,oBAAC,gBAAD;AACE,QAAA,KAAK,EAAEN,MAAM,CAACS,SADhB;AAEE,QAAA,OAAO,EAAE,KAAKxB,aAFhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAIE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEe,MAAM,CAACU,aAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAJF,CAhEF,EAuEE,oBAAC,gBAAD;AACE,QAAA,KAAK,EAAEV,MAAM,CAACS,SADhB;AAEE,QAAA,OAAO,EAAE,KAAKZ,kBAFhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAIE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEG,MAAM,CAACU,aAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAJF,CAvEF,CADF,CADF;AAoFD;;;;EArJuClD,S;;SAArBuB,Y;AAwJrB,IAAMiB,MAAM,GAAGW,UAAU,CAACC,MAAX,CAAkB;AAC/BX,EAAAA,SAAS,EAAE;AACTY,IAAAA,IAAI,EAAE,CADG;AAETC,IAAAA,OAAO,EAAE,MAFA;AAGTC,IAAAA,aAAa,EAAE,QAHN;AAITC,IAAAA,UAAU,EAAE,OAJH;AAKTC,IAAAA,cAAc,EAAE;AALP,GADoB;AAQ/Bb,EAAAA,WAAW,EAAE;AACXc,IAAAA,QAAQ,EAAE,EADC;AAEXC,IAAAA,UAAU,EAAE,KAFD;AAGXC,IAAAA,KAAK,EAAE,SAHI;AAIXC,IAAAA,SAAS,EAAE,QAJA;AAKXC,IAAAA,YAAY,EAAE;AALH,GARkB;AAe/BnB,EAAAA,eAAe,EAAE;AACfU,IAAAA,IAAI,EAAE,CADS;AAEfG,IAAAA,UAAU,EAAE,OAFG;AAGfC,IAAAA,cAAc,EAAE;AAHD,GAfc;AAoB/BP,EAAAA,aAAa,EAAE;AACbQ,IAAAA,QAAQ,EAAE,EADG;AAEbC,IAAAA,UAAU,EAAE,KAFC;AAGbC,IAAAA,KAAK,EAAE,SAHM;AAIbC,IAAAA,SAAS,EAAE;AAJE,GApBgB;AA0B/BZ,EAAAA,SAAS,EAAE;AACTW,IAAAA,KAAK,EAAE,SADE;AAETG,IAAAA,SAAS,EAAE,EAFF;AAGTF,IAAAA,SAAS,EAAE,QAHF;AAITN,IAAAA,aAAa,EAAE,QAJN;AAKTS,IAAAA,eAAe,EAAE,SALR;AAMTC,IAAAA,YAAY,EAAE,CANL;AAOTC,IAAAA,UAAU,EAAE,EAPH;AAQTJ,IAAAA,YAAY,EAAE,EARL;AASTC,IAAAA,SAAS,EAAE,CATF;AAUTI,IAAAA,KAAK,EAAE,GAVE;AAWTC,IAAAA,MAAM,EAAE,EAXC;AAYTb,IAAAA,aAAa,EAAE,QAZN;AAaTc,IAAAA,SAAS,EAAE;AAbF,GA1BoB;AAyC/BxB,EAAAA,UAAU,EAAE;AACVsB,IAAAA,KAAK,EAAE,KADG;AAEVL,IAAAA,YAAY,EAAE,EAFJ;AAGVQ,IAAAA,aAAa,EAAE,EAHL;AAIVD,IAAAA,SAAS,EAAE,QAJD;AAKVE,IAAAA,WAAW,EAAE,SALH;AAMVC,IAAAA,iBAAiB,EAAE,CANT;AAOVP,IAAAA,YAAY,EAAE,CAPJ;AAQVP,IAAAA,QAAQ,EAAE,EARA;AASVG,IAAAA,SAAS,EAAE,QATD;AAUVC,IAAAA,YAAY,EAAE;AAVJ;AAzCmB,CAAlB,CAAf","sourcesContent":["import React, { Component } from \"react\";\r\nimport {\r\n  StyleSheet,\r\n  View,\r\n  Text,\r\n  TextInput,\r\n  Button,\r\n  Alert,\r\n  ImageBackground,\r\n  TouchableOpacity,\r\n} from \"react-native\";\r\nimport * as firebase from \"firebase\";\r\n\r\nfunction readUserTemplate(uid) {\r\n  firebase\r\n    .database()\r\n    .ref(\"response/1/\")\r\n    .once(\"value\", (dataSnapShot) => {\r\n      var key = dataSnapShot.val();\r\n      createNewUser(uid, key);\r\n    });\r\n}\r\n\r\n// Create a new response user data storing from the existing template\r\nfunction createNewUser(index, content) {\r\n  return new Promise(function (resolve, reject) {\r\n    let key;\r\n    if (index != null) {\r\n      key = index;\r\n    } else {\r\n      key = firebase.database().ref().push().key;\r\n    }\r\n    let dataToSave = content;\r\n    // console.log(dataToSave);\r\n    firebase\r\n      .database()\r\n      .ref(\"/response/\" + key)\r\n      .update(dataToSave)\r\n      .then((snapshot) => {\r\n        resolve(snapshot);\r\n      })\r\n      .catch((err) => {\r\n        reject(err);\r\n      });\r\n  });\r\n}\r\n\r\nexport default class SignUpScreen extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      email: \"\",\r\n      password: \"\",\r\n      passwordConfirm: \"\",\r\n    };\r\n    // readUserTemplate = readUserTemplate.bind(this);\r\n  }\r\n\r\n  onSignupPress = () => {\r\n    if (this.state.password !== this.state.passwordConfirm) {\r\n      Alert.alert(\"Passwords do not match\");\r\n      return;\r\n    }\r\n\r\n    firebase\r\n      .auth()\r\n      .createUserWithEmailAndPassword(this.state.email, this.state.password)\r\n      .then(\r\n        () => {\r\n          readUserTemplate(firebase.auth().getUid());\r\n        },\r\n        (error) => {\r\n          Alert.alert(error.message);\r\n        }\r\n      );\r\n  };\r\n\r\n  // Update tip after the tip has been read\r\n  // createNewUser = (index, id, name, tip, type, reward, complete) => {\r\n  //   return new Promise(function (resolve, reject) {\r\n  //     let key;\r\n  //     if (id != null) {\r\n  //       key = id;\r\n  //     } else {\r\n  //       key = fb.database().ref().push().key;\r\n  //     }\r\n  //     let dataToSave = {\r\n  //       tipID: key,\r\n  //       tipName: name,\r\n  //       complete: complete,\r\n  //       tipReward: reward,\r\n  //       tip: tip,\r\n  //       tipType: type,\r\n  //     };\r\n  //     console.log(dataToSave);\r\n  //     fb.database()\r\n  //       .ref(\"/response/nutritionalTips/\" + index)\r\n  //       .update(dataToSave)\r\n  //       .then((snapshot) => {\r\n  //         resolve(snapshot);\r\n  //       })\r\n  //       .catch((err) => {\r\n  //         reject(err);\r\n  //       });\r\n  //   });\r\n  // };\r\n\r\n  onBackToLoginPress = () => {\r\n    this.props.navigation.navigate(\"Login\");\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <View style={styles.container}>\r\n        <ImageBackground\r\n          source={require(\"../../assets/BackgroundOrange.png\")}\r\n          style={styles.backgroundImage}\r\n        >\r\n          <Text style={styles.HeadingText}>Sign Up</Text>\r\n          <TextInput\r\n            title=\"Signup\"\r\n            style={styles.inputStyle}\r\n            // style={{\r\n            //   width: 200,\r\n            //   height: 40,\r\n            //   borderWidth: 1,\r\n            //   alignSelf: \"center\",\r\n            // }}\r\n            value={this.state.email}\r\n            onChangeText={(text) => {\r\n              this.setState({ email: text });\r\n            }}\r\n            placeholder=\"Email\"\r\n            keyboardType=\"email-address\"\r\n            autoCapitalize=\"none\"\r\n            autoCorrect={false}\r\n          />\r\n\r\n          <View style={{ paddingTop: 10 }} />\r\n\r\n          <TextInput\r\n            style={styles.inputStyle}\r\n            // style={{\r\n            //   width: 200,\r\n            //   height: 40,\r\n            //   borderWidth: 1,\r\n            //   alignSelf: \"center\",\r\n            // }}\r\n            value={this.state.password}\r\n            onChangeText={(text) => {\r\n              this.setState({ password: text });\r\n            }}\r\n            placeholder=\"Password\"\r\n            secureTextEntry={true}\r\n            autoCapitalize=\"none\"\r\n            autoCorrect={false}\r\n          />\r\n\r\n          <View style={{ paddingTop: 10 }} />\r\n\r\n          <TextInput\r\n            style={styles.inputStyle}\r\n            // style={{\r\n            //   width: 200,\r\n            //   height: 40,\r\n            //   borderWidth: 1,\r\n            //   alignSelf: \"center\",\r\n            // }}\r\n            value={this.state.passwordConfirm}\r\n            onChangeText={(text) => {\r\n              this.setState({ passwordConfirm: text });\r\n            }}\r\n            placeholder=\"Password (confirm)\"\r\n            secureTextEntry={true}\r\n            autoCapitalize=\"none\"\r\n            autoCorrect={false}\r\n          />\r\n\r\n          <TouchableOpacity\r\n            style={styles.loginText}\r\n            onPress={this.onSignupPress}\r\n          >\r\n            <Text style={styles.customBtnText}>Sign Up</Text>\r\n          </TouchableOpacity>\r\n\r\n          <TouchableOpacity\r\n            style={styles.loginText}\r\n            onPress={this.onBackToLoginPress}\r\n          >\r\n            <Text style={styles.customBtnText}>Back to Login</Text>\r\n          </TouchableOpacity>\r\n\r\n          {/* <Button title=\"Back to Login\" onPress={this.onBackToLoginPress} /> */}\r\n        </ImageBackground>\r\n      </View>\r\n    );\r\n  }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    resizeMode: \"cover\",\r\n    justifyContent: \"center\",\r\n  },\r\n  HeadingText: {\r\n    fontSize: 30,\r\n    fontWeight: \"500\",\r\n    color: \"#990000\",\r\n    textAlign: \"center\",\r\n    marginBottom: 40,\r\n  },\r\n  backgroundImage: {\r\n    flex: 1,\r\n    resizeMode: \"cover\",\r\n    justifyContent: \"center\",\r\n  },\r\n  customBtnText: {\r\n    fontSize: 20,\r\n    fontWeight: \"400\",\r\n    color: \"#990000\",\r\n    textAlign: \"center\",\r\n  },\r\n  loginText: {\r\n    color: \"#990000\",\r\n    marginTop: 30,\r\n    textAlign: \"center\",\r\n    flexDirection: \"column\",\r\n    backgroundColor: \"#FFE5CC\",\r\n    borderRadius: 5,\r\n    marginLeft: 15,\r\n    marginBottom: 10,\r\n    marginTop: 5,\r\n    width: 150,\r\n    height: 30,\r\n    flexDirection: \"column\",\r\n    alignSelf: \"center\",\r\n  },\r\n  inputStyle: {\r\n    width: \"65%\",\r\n    marginBottom: 10,\r\n    paddingBottom: 15,\r\n    alignSelf: \"center\",\r\n    borderColor: \"#FFFFFF\",\r\n    borderBottomWidth: 1,\r\n    borderRadius: 5,\r\n    fontSize: 18,\r\n    textAlign: \"center\",\r\n    marginBottom: 20,\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}