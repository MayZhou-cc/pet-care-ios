{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\s4397674\\\\Documents\\\\PP\\\\test\\\\components\\\\NutritionalScreen.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\n{}\nimport Icon from \"@expo/vector-icons/Ionicons\";\nimport React, { Component } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { createAppContainer } from \"react-navigation\";\nimport { createMaterialTopTabNavigator } from \"react-navigation-tabs\";\nimport { FontAwesome, MaterialCommunityIcons } from \"@expo/vector-icons\";\nimport tipData from \"../assets/data/tip.json\";\n\nfunction ReadTab() {\n  console.log(\"read tab\");\n  return React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 5\n    }\n  }, tipData[\"Nutritional Tips\"].map(function (item, index) {\n    React.createElement(TouchableOpacity, {\n      style: styles.buttonContainer,\n      onPress: console.log(\"hello world\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }\n    }, React.createElement(Text, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }\n    }, \"Log Out\"));\n  }));\n}\n\nReadTab.navigationOptions = {\n  tabBarIcon: function tabBarIcon(_ref) {\n    var tintColor = _ref.tintColor,\n        focused = _ref.focused;\n    return React.createElement(Icon, {\n      name: focused ? \"ios-mail-open\" : \"md-mail-open\",\n      color: tintColor,\n      size: 25,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 5\n      }\n    });\n  }\n};\n\nfunction UnreadTab() {\n  console.log(\"unread tab!\");\n  return React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 5\n    }\n  }, tipData[\"Nutritional Tips\"].map(function (item, index) {\n    console.log(item.title);\n    React.createElement(TouchableOpacity, {\n      key: item.id,\n      style: styles.textContainer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }\n    }, React.createElement(Text, {\n      style: styles.text,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 11\n      }\n    }, \"Title: \", item.title, \", Type: \", item.type, \", Description:\", item.description, \", Reward: \", item.reward));\n  }));\n}\n\nUnreadTab.navigationOptions = {\n  tabBarIcon: function tabBarIcon(_ref2) {\n    var tintColor = _ref2.tintColor,\n        focused = _ref2.focused;\n    return React.createElement(Icon, {\n      name: focused ? \"ios-mail-unread\" : \"md-mail-unread\",\n      color: tintColor,\n      size: 25,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 5\n      }\n    });\n  }\n};\nvar TabNavigator = createMaterialTopTabNavigator({\n  Read: ReadTab,\n  Unread: UnreadTab\n}, {\n  tabBarOptions: {\n    activeTintColor: \"white\",\n    showIcon: true,\n    showLabel: false,\n    style: {\n      backgroundColor: \"#5F7EB2\"\n    }\n  }\n});\nvar AppIndex = createAppContainer(TabNavigator);\n\nvar NutritionalScreen = function (_Component) {\n  _inherits(NutritionalScreen, _Component);\n\n  var _super = _createSuper(NutritionalScreen);\n\n  function NutritionalScreen(props) {\n    var _this;\n\n    _classCallCheck(this, NutritionalScreen);\n\n    _this = _super.call(this, props);\n    _this.state = {};\n    return _this;\n  }\n\n  _createClass(NutritionalScreen, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(View, {\n        style: {\n          flex: 1,\n          backgroundColor: \"#5F7EB2\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 7\n        }\n      }, React.createElement(StatusBar, {\n        backgroundColor: \"white\",\n        barStyle: \"light-content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 9\n        }\n      }), React.createElement(View, {\n        style: styles.header,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 9\n        }\n      }, React.createElement(FontAwesome, {\n        style: {\n          marginLeft: 15\n        },\n        name: \"home\",\n        size: 30,\n        color: \"white\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 11\n        }\n      }), React.createElement(FontAwesome, {\n        style: {\n          marginLeft: 25\n        },\n        name: \"question-circle\",\n        size: 30,\n        color: \"white\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 11\n        }\n      }), React.createElement(Text, {\n        style: {\n          marginLeft: 20,\n          textDecorationLine: \"underline\",\n          fontSize: 25,\n          textAlign: \"center\",\n          color: \"white\",\n          fontWeight: \"bold\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 11\n        }\n      }, \" \", \"Nutritional Tips\", \" \"), React.createElement(MaterialCommunityIcons, {\n        style: {\n          marginLeft: 30\n        },\n        name: \"circle-expand\",\n        size: 30,\n        color: \"white\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 11\n        }\n      }), React.createElement(Text, {\n        style: {\n          fontSize: 25,\n          color: \"white\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 11\n        }\n      }, \"102\")), React.createElement(AppIndex, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 9\n        }\n      }));\n    }\n  }]);\n\n  return NutritionalScreen;\n}(Component);\n\nexport { NutritionalScreen as default };\n{}\nvar styles = StyleSheet.create({\n  buttonContainer: {\n    backgroundColor: \"green\",\n    color: \"white\",\n    padding: 10,\n    borderRadius: 8,\n    width: 300,\n    height: 50,\n    textAlign: \"center\",\n    padding: 10,\n    alignSelf: \"center\",\n    marginTop: 50\n  },\n  container: {\n    flex: 1,\n    backgroundColor: \"#5F7EB2\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  textContainer: {\n    padding: 10,\n    marginTop: 3,\n    backgroundColor: \"#d9f9b1\",\n    alignItems: \"center\"\n  },\n  text: {\n    color: \"#4f603c\"\n  },\n  header: {\n    flexDirection: \"row\"\n  },\n  tabs: {\n    flex: 1,\n    backgroundColor: \"#D3E3F6\",\n    alignItems: \"flex-start\",\n    justifyContent: \"flex-start\",\n    textAlign: \"left\"\n  }\n});","map":{"version":3,"sources":["C:/Users/s4397674/Documents/PP/test/components/NutritionalScreen.js"],"names":["Icon","React","Component","createAppContainer","createMaterialTopTabNavigator","FontAwesome","MaterialCommunityIcons","tipData","ReadTab","console","log","map","item","index","styles","buttonContainer","navigationOptions","tabBarIcon","tintColor","focused","UnreadTab","title","id","textContainer","text","type","description","reward","TabNavigator","Read","Unread","tabBarOptions","activeTintColor","showIcon","showLabel","style","backgroundColor","AppIndex","NutritionalScreen","props","state","flex","header","marginLeft","textDecorationLine","fontSize","textAlign","color","fontWeight","StyleSheet","create","padding","borderRadius","width","height","alignSelf","marginTop","container","alignItems","justifyContent","flexDirection","tabs"],"mappings":";;;;;;;;;;;AAEA,CAKC;AACD,OAAOA,IAAP;AACA,OAAOC,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;;;;AAQA,SAASC,kBAAT,QAAmC,kBAAnC;AACA,SAASC,6BAAT,QAA8C,uBAA9C;AACA,SAASC,WAAT,EAAsBC,sBAAtB,QAAoD,oBAApD;AACA,OAAOC,OAAP;;AAqCA,SAASC,OAAT,GAAmB;AACjBC,EAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ;AACA,SACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGH,OAAO,CAAC,kBAAD,CAAP,CAA4BI,GAA5B,CAAgC,UAACC,IAAD,EAAOC,KAAP,EAAiB;AAKhD,wBAAC,gBAAD;AACE,MAAA,KAAK,EAAEC,MAAM,CAACC,eADhB;AAEE,MAAA,OAAO,EAAEN,OAAO,CAACC,GAAR,CAAY,aAAZ,CAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAIE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAJF;AAOD,GAZA,CADH,CADF;AAiBD;;AACDF,OAAO,CAACQ,iBAAR,GAA4B;AAC1BC,EAAAA,UAAU,EAAE;AAAA,QAAGC,SAAH,QAAGA,SAAH;AAAA,QAAcC,OAAd,QAAcA,OAAd;AAAA,WACV,oBAAC,IAAD;AACE,MAAA,IAAI,EAAEA,OAAO,GAAG,eAAH,GAAqB,cADpC;AAEE,MAAA,KAAK,EAAED,SAFT;AAGE,MAAA,IAAI,EAAE,EAHR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADU;AAAA;AADc,CAA5B;;AAUA,SAASE,SAAT,GAAqB;AACnBX,EAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ;AACA,SACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGH,OAAO,CAAC,kBAAD,CAAP,CAA4BI,GAA5B,CAAgC,UAACC,IAAD,EAAOC,KAAP,EAAiB;AAChDJ,IAAAA,OAAO,CAACC,GAAR,CAAYE,IAAI,CAACS,KAAjB;AAEA,wBAAC,gBAAD;AAAkB,MAAA,GAAG,EAAET,IAAI,CAACU,EAA5B;AAAgC,MAAA,KAAK,EAAER,MAAM,CAACS,aAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAET,MAAM,CAACU,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACUZ,IAAI,CAACS,KADf,cAC8BT,IAAI,CAACa,IADnC,oBAEGb,IAAI,CAACc,WAFR,gBAE+Bd,IAAI,CAACe,MAFpC,CADF;AAOD,GAVA,CADH,CADF;AAeD;;AACDP,SAAS,CAACJ,iBAAV,GAA8B;AAC5BC,EAAAA,UAAU,EAAE;AAAA,QAAGC,SAAH,SAAGA,SAAH;AAAA,QAAcC,OAAd,SAAcA,OAAd;AAAA,WACV,oBAAC,IAAD;AACE,MAAA,IAAI,EAAEA,OAAO,GAAG,iBAAH,GAAuB,gBADtC;AAEE,MAAA,KAAK,EAAED,SAFT;AAGE,MAAA,IAAI,EAAE,EAHR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADU;AAAA;AADgB,CAA9B;AAUA,IAAMU,YAAY,GAAGxB,6BAA6B,CAChD;AACEyB,EAAAA,IAAI,EAAErB,OADR;AAEEsB,EAAAA,MAAM,EAAEV;AAFV,CADgD,EAKhD;AACEW,EAAAA,aAAa,EAAE;AACbC,IAAAA,eAAe,EAAE,OADJ;AAEbC,IAAAA,QAAQ,EAAE,IAFG;AAGbC,IAAAA,SAAS,EAAE,KAHE;AAIbC,IAAAA,KAAK,EAAE;AACLC,MAAAA,eAAe,EAAE;AADZ;AAJM;AADjB,CALgD,CAAlD;AAgBA,IAAMC,QAAQ,GAAGlC,kBAAkB,CAACyB,YAAD,CAAnC;;IAEqBU,iB;;;;;AACnB,6BAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,8BAAMA,KAAN;AACA,UAAKC,KAAL,GAAa,EAAb;AAFiB;AAGlB;;;;6BACQ;AACP,aAwBE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAAEC,UAAAA,IAAI,EAAE,CAAR;AAAWL,UAAAA,eAAe,EAAE;AAA5B,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,SAAD;AAAW,QAAA,eAAe,EAAC,OAA3B;AAAmC,QAAA,QAAQ,EAAC,eAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAEE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEtB,MAAM,CAAC4B,MAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEE,oBAAC,WAAD;AACE,QAAA,KAAK,EAAE;AAAEC,UAAAA,UAAU,EAAE;AAAd,SADT;AAEE,QAAA,IAAI,EAAC,MAFP;AAGE,QAAA,IAAI,EAAE,EAHR;AAIE,QAAA,KAAK,EAAC,OAJR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,EAQE,oBAAC,WAAD;AACE,QAAA,KAAK,EAAE;AAAEA,UAAAA,UAAU,EAAE;AAAd,SADT;AAEE,QAAA,IAAI,EAAC,iBAFP;AAGE,QAAA,IAAI,EAAE,EAHR;AAIE,QAAA,KAAK,EAAC,OAJR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QARF,EAcE,oBAAC,IAAD;AACE,QAAA,KAAK,EAAE;AACLA,UAAAA,UAAU,EAAE,EADP;AAELC,UAAAA,kBAAkB,EAAE,WAFf;AAGLC,UAAAA,QAAQ,EAAE,EAHL;AAILC,UAAAA,SAAS,EAAE,QAJN;AAKLC,UAAAA,KAAK,EAAE,OALF;AAMLC,UAAAA,UAAU,EAAE;AANP,SADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAUG,GAVH,sBAWmB,GAXnB,CAdF,EA2BE,oBAAC,sBAAD;AACE,QAAA,KAAK,EAAE;AAAEL,UAAAA,UAAU,EAAE;AAAd,SADT;AAEE,QAAA,IAAI,EAAC,eAFP;AAGE,QAAA,IAAI,EAAE,EAHR;AAIE,QAAA,KAAK,EAAC,OAJR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QA3BF,EAiCE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAAEE,UAAAA,QAAQ,EAAE,EAAZ;AAAgBE,UAAAA,KAAK,EAAE;AAAvB,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAjCF,CAFF,EAqCE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QArCF,CAxBF;AA2OD;;;;EAjP4C7C,S;;SAA1BoC,iB;AAoPrB,CAEC;AACD,IAAMxB,MAAM,GAAGmC,UAAU,CAACC,MAAX,CAAkB;AAC/BnC,EAAAA,eAAe,EAAE;AACfqB,IAAAA,eAAe,EAAE,OADF;AAEfW,IAAAA,KAAK,EAAE,OAFQ;AAGfI,IAAAA,OAAO,EAAE,EAHM;AAIfC,IAAAA,YAAY,EAAE,CAJC;AAKfC,IAAAA,KAAK,EAAE,GALQ;AAMfC,IAAAA,MAAM,EAAE,EANO;AAOfR,IAAAA,SAAS,EAAE,QAPI;AAQfK,IAAAA,OAAO,EAAE,EARM;AASfI,IAAAA,SAAS,EAAE,QATI;AAUfC,IAAAA,SAAS,EAAE;AAVI,GADc;AAa/BC,EAAAA,SAAS,EAAE;AACThB,IAAAA,IAAI,EAAE,CADG;AAETL,IAAAA,eAAe,EAAE,SAFR;AAGTsB,IAAAA,UAAU,EAAE,QAHH;AAITC,IAAAA,cAAc,EAAE;AAJP,GAboB;AAmB/BpC,EAAAA,aAAa,EAAE;AACb4B,IAAAA,OAAO,EAAE,EADI;AAEbK,IAAAA,SAAS,EAAE,CAFE;AAGbpB,IAAAA,eAAe,EAAE,SAHJ;AAIbsB,IAAAA,UAAU,EAAE;AAJC,GAnBgB;AAyB/BlC,EAAAA,IAAI,EAAE;AACJuB,IAAAA,KAAK,EAAE;AADH,GAzByB;AA4B/BL,EAAAA,MAAM,EAAE;AACNkB,IAAAA,aAAa,EAAE;AADT,GA5BuB;AA+B/BC,EAAAA,IAAI,EAAE;AACJpB,IAAAA,IAAI,EAAE,CADF;AAEJL,IAAAA,eAAe,EAAE,SAFb;AAGJsB,IAAAA,UAAU,EAAE,YAHR;AAIJC,IAAAA,cAAc,EAAE,YAJZ;AAKJb,IAAAA,SAAS,EAAE;AALP;AA/ByB,CAAlB,CAAf","sourcesContent":["//NutritionScreen.js\r\n\r\n{\r\n  /* \r\ndependencies installed: 1. npm install @feuer/react-tabs\r\n                        2. npm install react-native-paper\r\n*/\r\n}\r\nimport Icon from \"react-native-vector-icons/Ionicons\";\r\nimport React, { Component } from \"react\";\r\nimport {\r\n  StyleSheet,\r\n  Text,\r\n  View,\r\n  StatusBar,\r\n  TouchableOpacity,\r\n} from \"react-native\";\r\nimport { createAppContainer } from \"react-navigation\";\r\nimport { createMaterialTopTabNavigator } from \"react-navigation-tabs\";\r\nimport { FontAwesome, MaterialCommunityIcons } from \"@expo/vector-icons\";\r\nimport tipData from \"../assets/data/tip.json\";\r\n\r\n// export default NutritionalScreen(\r\n//   {\r\n//     Home: { screen: HomeScreen },\r\n//     Quest: { screen: QuestScreen },\r\n//     NutritionalTips: { screen: NutritionalScreen },\r\n//   },\r\n//   {\r\n//     navigationOptions: ({ navigation }) => ({\r\n//       tabBarIcon: ({ focused }) => {\r\n//         const { routeName } = navigation.state;\r\n//         let iconName;\r\n//         switch (routeName) {\r\n//           case \"Home\":\r\n//             iconName =\r\n//               Platform.OS === \"ios\"\r\n//                 ? `ios-information-circle${focused ? \"\" : \"-outline\"}`\r\n//                 : \"md-information-circle\";\r\n//             break;\r\n//         }\r\n//         return (\r\n//           <Ionicons\r\n//             name={iconName}\r\n//             size={28}\r\n//             style={{ marginBottom: -3 }}\r\n//             color={focused ? Design.tabIconSelected : Design.tabIconDefault}\r\n//           />\r\n//         );\r\n//       },\r\n//     }),\r\n//     tabBarComponent: TabBarBottom,\r\n//     tabBarPosition: \"bottom\",\r\n//     animationEnabled: false,\r\n//     swipeEnabled: false,\r\n//   }\r\n// );\r\nfunction ReadTab() {\r\n  console.log(\"read tab\");\r\n  return (\r\n    <View>\r\n      {tipData[\"Nutritional Tips\"].map((item, index) => {\r\n        // if (item.hasRead) {\r\n        // <TouchableOpacity key={item.id} style={styles.textContainer}>\r\n        //   <Text style={styles.text}>Title: {item.title}</Text>\r\n        // </TouchableOpacity>;\r\n        <TouchableOpacity\r\n          style={styles.buttonContainer}\r\n          onPress={console.log(\"hello world\")}\r\n        >\r\n          <Text>Log Out</Text>\r\n        </TouchableOpacity>;\r\n        // }\r\n      })}\r\n    </View>\r\n  );\r\n}\r\nReadTab.navigationOptions = {\r\n  tabBarIcon: ({ tintColor, focused }) => (\r\n    <Icon\r\n      name={focused ? \"ios-mail-open\" : \"md-mail-open\"}\r\n      color={tintColor}\r\n      size={25}\r\n    />\r\n  ),\r\n};\r\n\r\nfunction UnreadTab() {\r\n  console.log(\"unread tab!\");\r\n  return (\r\n    <View>\r\n      {tipData[\"Nutritional Tips\"].map((item, index) => {\r\n        console.log(item.title);\r\n        // if (!item.hasRead) {\r\n        <TouchableOpacity key={item.id} style={styles.textContainer}>\r\n          <Text style={styles.text}>\r\n            Title: {item.title}, Type: {item.type}, Description:\r\n            {item.description}, Reward: {item.reward}\r\n          </Text>\r\n        </TouchableOpacity>;\r\n        // }\r\n      })}\r\n    </View>\r\n  );\r\n}\r\nUnreadTab.navigationOptions = {\r\n  tabBarIcon: ({ tintColor, focused }) => (\r\n    <Icon\r\n      name={focused ? \"ios-mail-unread\" : \"md-mail-unread\"}\r\n      color={tintColor}\r\n      size={25}\r\n    />\r\n  ),\r\n};\r\n\r\nconst TabNavigator = createMaterialTopTabNavigator(\r\n  {\r\n    Read: ReadTab,\r\n    Unread: UnreadTab,\r\n  },\r\n  {\r\n    tabBarOptions: {\r\n      activeTintColor: \"white\",\r\n      showIcon: true,\r\n      showLabel: false,\r\n      style: {\r\n        backgroundColor: \"#5F7EB2\",\r\n      },\r\n    },\r\n  }\r\n);\r\nconst AppIndex = createAppContainer(TabNavigator);\r\n\r\nexport default class NutritionalScreen extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n  render() {\r\n    return (\r\n      // <View style={styles.container}>\r\n      //   {/*  ICONS  */}\r\n      //   <View style={{ flexDirection: \"row\" }}>\r\n      //     <FontAwesome\r\n      //       style={{ marginLeft: 15 }}\r\n      //       name=\"home\"\r\n      //       size={30}\r\n      //       color=\"white\"\r\n      //     />\r\n      //     <FontAwesome\r\n      //       style={{ marginLeft: 20 }}\r\n      //       name=\"question-circle\"\r\n      //       size={30}\r\n      //       color=\"white\"\r\n      //     />\r\n      //     <MaterialCommunityIcons\r\n      //       style={{ marginLeft: 470, paddingRight: 10 }}\r\n      //       name=\"circle-expand\"\r\n      //       size={30}\r\n      //       color=\"white\"\r\n      //     />\r\n      //     <Text style={{ fontSize: 25 }}>102</Text>\r\n      //   </View>\r\n      <View style={{ flex: 1, backgroundColor: \"#5F7EB2\" }}>\r\n        <StatusBar backgroundColor=\"white\" barStyle=\"light-content\" />\r\n        <View style={styles.header}>\r\n          {/*  PAGE TITLE  */}\r\n          <FontAwesome\r\n            style={{ marginLeft: 15 }}\r\n            name=\"home\"\r\n            size={30}\r\n            color=\"white\"\r\n          />\r\n          <FontAwesome\r\n            style={{ marginLeft: 25 }}\r\n            name=\"question-circle\"\r\n            size={30}\r\n            color=\"white\"\r\n          />\r\n          <Text\r\n            style={{\r\n              marginLeft: 20,\r\n              textDecorationLine: \"underline\",\r\n              fontSize: 25,\r\n              textAlign: \"center\",\r\n              color: \"white\",\r\n              fontWeight: \"bold\",\r\n            }}\r\n          >\r\n            {\" \"}\r\n            Nutritional Tips{\" \"}\r\n          </Text>\r\n          <MaterialCommunityIcons\r\n            style={{ marginLeft: 30 }}\r\n            name=\"circle-expand\"\r\n            size={30}\r\n            color=\"white\"\r\n          />\r\n          <Text style={{ fontSize: 25, color: \"white\" }}>102</Text>\r\n        </View>\r\n        <AppIndex />\r\n      </View>\r\n\r\n      //         {/*  TABS  */}\r\n      //         <View className=\"NutritionPage\">\r\n      //           <Tabs\r\n      //             tabsProps={{\r\n      //               style: {\r\n      //                 textAlign: \"left\",\r\n      //               },\r\n      //             }}\r\n      //             activeTab={{\r\n      //               id: \"tab1\",\r\n      //             }}\r\n      //           >\r\n      //             <View style={styles.tabs}>\r\n      //               <Tabs.Tab id=\"tab1\" title=\"Unread\">\r\n      //                 <View>\r\n      //                   <DataTable>\r\n      //                     <DataTable.Header>\r\n      //                       <DataTable.Title>[Tip Name]</DataTable.Title>\r\n      //                       <DataTable.Title numeric>\r\n      //                         Type : [Tip Type]\r\n      //                       </DataTable.Title>\r\n      //                       <DataTable.Title numeric>\r\n      //                         Reward :{\" \"}\r\n      //                         <MaterialCommunityIcons\r\n      //                           name=\"circle-expand\"\r\n      //                           size={10}\r\n      //                           color=\"black\"\r\n      //                         />\r\n      //                         5\r\n      //                       </DataTable.Title>\r\n      //                     </DataTable.Header>\r\n\r\n      //                     <DataTable.Row>\r\n      //                       <Text>\r\n      //                         [ Task Desceiption : hubvcouehbv hwivoiebuvberu\r\n      //                         oibrberoivb reboi1rbiv1bre oboiogiv1uerbgo vi1\r\n      //                         rogiv1broigub 1oribgo1i rbgoivu1bro ]\r\n      //                       </Text>\r\n      //                     </DataTable.Row>\r\n\r\n      //                     <DataTable.Header>\r\n      //                       <DataTable.Title>[Tip Name]</DataTable.Title>\r\n      //                       <DataTable.Title numeric>\r\n      //                         Type : [Tip Type]\r\n      //                       </DataTable.Title>\r\n      //                       <DataTable.Title numeric>\r\n      //                         Reward :{\" \"}\r\n      //                         <MaterialCommunityIcons\r\n      //                           name=\"circle-expand\"\r\n      //                           size={10}\r\n      //                           color=\"black\"\r\n      //                         />\r\n      //                         6\r\n      //                       </DataTable.Title>\r\n      //                     </DataTable.Header>\r\n\r\n      //                     <DataTable.Row>\r\n      //                       <Text>\r\n      //                         [ Task Desceiption : hubvcouehbv hwivoiebuvberu oiboivb\r\n      //                         reboi1rbiv1bre ov1rbogigo v1rgboirbgovi1 rogiv1broigub\r\n      //                         1oribgo1i rbgoivu1br ]\r\n      //                       </Text>\r\n      //                     </DataTable.Row>\r\n\r\n      //                     <DataTable.Header>\r\n      //                       <DataTable.Title>[Tip Name]</DataTable.Title>\r\n      //                       <DataTable.Title numeric>\r\n      //                         Type : [Tip Type]\r\n      //                       </DataTable.Title>\r\n      //                       <DataTable.Title numeric>\r\n      //                         Reward :{\" \"}\r\n      //                         <MaterialCommunityIcons\r\n      //                           name=\"circle-expand\"\r\n      //                           size={10}\r\n      //                           color=\"black\"\r\n      //                         />\r\n      //                         6\r\n      //                       </DataTable.Title>\r\n      //                     </DataTable.Header>\r\n\r\n      //                     <DataTable.Row>\r\n      //                       <Text>\r\n      //                         [ Task Desceiption : hubvcouehbv hwivoiebuvberu oiboivb\r\n      //                         reboi1rbiv1bre ov1rbogigo v1rgboirbgovi1 rogiv1broigub\r\n      //                         1oribgo1i rbgoivu1br ]\r\n      //                       </Text>\r\n      //                     </DataTable.Row>\r\n      //                   </DataTable>\r\n      //                 </View>\r\n      //               </Tabs.Tab>\r\n\r\n      //               <View></View>\r\n      //               <Tabs.Tab style={{ color: \"#FFFFFF\" }} id=\"tab2\" title=\"Read\">\r\n      //                 <View>\r\n      //                   <DataTable>\r\n      //                     <DataTable.Header>\r\n      //                       <DataTable.Title>[Tip Name]</DataTable.Title>\r\n      //                       <DataTable.Title numeric>\r\n      //                         Type : [Tip Type]\r\n      //                       </DataTable.Title>\r\n      //                       <DataTable.Title numeric>\r\n      //                         Reward :{\" \"}\r\n      //                         <MaterialCommunityIcons\r\n      //                           name=\"circle-expand\"\r\n      //                           size={10}\r\n      //                           color=\"black\"\r\n      //                         />\r\n      //                         7\r\n      //                       </DataTable.Title>\r\n      //                     </DataTable.Header>\r\n\r\n      //                     <DataTable.Row>\r\n      //                       <Text>\r\n      //                         Task Desceiption : hduhv hbrovh hbrofu yuy uyuy\r\n      //                         idwefcvwdch bwihbwb wiufebf whebf eoiwbc\r\n      //                       </Text>\r\n      //                     </DataTable.Row>\r\n\r\n      //                     <DataTable.Header>\r\n      //                       <DataTable.Title>[Tip Name]</DataTable.Title>\r\n      //                       <DataTable.Title numeric>\r\n      //                         Type : [Tip Type]\r\n      //                       </DataTable.Title>\r\n      //                       <DataTable.Title numeric>\r\n      //                         Reward :{\" \"}\r\n      //                         <MaterialCommunityIcons\r\n      //                           name=\"circle-expand\"\r\n      //                           size={10}\r\n      //                           color=\"black\"\r\n      //                         />\r\n      //                         8\r\n      //                       </DataTable.Title>\r\n      //                     </DataTable.Header>\r\n\r\n      //                     <DataTable.Row>\r\n      //                       <Text>\r\n      //                         Task Desceiption : hduhv hbrovh hbrofu yuy uyuy\r\n      //                         idwefcvwdch bwihbwb wiufebf whebf eoiwbc\r\n      //                       </Text>\r\n      //                     </DataTable.Row>\r\n\r\n      //                     <DataTable.Header>\r\n      //                       <DataTable.Title>[Tip Name]</DataTable.Title>\r\n      //                       <DataTable.Title numeric>\r\n      //                         Type : [Tip Type]\r\n      //                       </DataTable.Title>\r\n      //                       <DataTable.Title style={{ fontWeight: \"bold\" }} numeric>\r\n      //                         Reward :{\" \"}\r\n      //                         <MaterialCommunityIcons\r\n      //                           name=\"circle-expand\"\r\n      //                           size={10}\r\n      //                           color=\"black\"\r\n      //                         />\r\n      //                         20\r\n      //                       </DataTable.Title>\r\n      //                     </DataTable.Header>\r\n\r\n      //                     <DataTable.Row>\r\n      //                       <Text>\r\n      //                         Task Desceiption : hduhv hbrovh hbrofu yuy uyuy\r\n      //                         idwefcvwdch bwihbwb wiufebf whebf eoiwbc\r\n      //                       </Text>\r\n      //                     </DataTable.Row>\r\n      //                   </DataTable>\r\n      //                 </View>\r\n      //               </Tabs.Tab>\r\n      //             </View>\r\n      //           </Tabs>\r\n      //         </View>\r\n      //       </View>\r\n    );\r\n  }\r\n}\r\n\r\n{\r\n  /*  STYLESHEET  */\r\n}\r\nconst styles = StyleSheet.create({\r\n  buttonContainer: {\r\n    backgroundColor: \"green\",\r\n    color: \"white\",\r\n    padding: 10,\r\n    borderRadius: 8,\r\n    width: 300,\r\n    height: 50,\r\n    textAlign: \"center\",\r\n    padding: 10,\r\n    alignSelf: \"center\",\r\n    marginTop: 50,\r\n  },\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: \"#5F7EB2\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n  textContainer: {\r\n    padding: 10,\r\n    marginTop: 3,\r\n    backgroundColor: \"#d9f9b1\",\r\n    alignItems: \"center\",\r\n  },\r\n  text: {\r\n    color: \"#4f603c\",\r\n  },\r\n  header: {\r\n    flexDirection: \"row\",\r\n  },\r\n  tabs: {\r\n    flex: 1,\r\n    backgroundColor: \"#D3E3F6\",\r\n    alignItems: \"flex-start\",\r\n    justifyContent: \"flex-start\",\r\n    textAlign: \"left\",\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}