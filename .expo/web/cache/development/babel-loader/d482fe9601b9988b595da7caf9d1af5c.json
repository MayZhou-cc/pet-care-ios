{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\s4397674\\\\Documents\\\\PP\\\\test\\\\components\\\\auth\\\\LogInScreen.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport { NavigationActions, StackActions } from \"react-navigation\";\n\nvar LogInScreen = function (_Component) {\n  _inherits(LogInScreen, _Component);\n\n  var _super = _createSuper(LogInScreen);\n\n  function LogInScreen(props) {\n    var _this;\n\n    _classCallCheck(this, LogInScreen);\n\n    _this = _super.call(this, props);\n\n    _this.onLoginPress = function () {\n      firebase.auth().signInWithEmailAndPassword(_this.state.email, _this.state.password).then(function () {}, function (error) {\n        Alert.alert(error.message);\n      });\n    };\n\n    _this.onCreateAccountPress = function () {\n      var navActions = StackActions.reset({\n        index: 0,\n        actions: [NavigationActions.navigate({\n          routeName: \"Signup\"\n        })]\n      });\n\n      _this.props.navigation.dispatch(navActions);\n    };\n\n    _this.onForgotPasswordPress = function () {\n      var navActions = NavigationActions.reset({\n        index: 0,\n        actions: [NavigationActions.navigate({\n          routeName: \"ForgotPassword\"\n        })]\n      });\n\n      _this.props.navigation.dispatch(navActions);\n    };\n\n    _this.state = {\n      email: \"\",\n      password: \"\"\n    };\n    return _this;\n  }\n\n  _createClass(LogInScreen, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(View, {\n        style: {\n          paddingTop: 50,\n          alignItems: \"center\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 7\n        }\n      }, React.createElement(Text, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 9\n        }\n      }, \"Login\"), React.createElement(TextInput, {\n        style: {\n          width: 200,\n          height: 40,\n          borderWidth: 1\n        },\n        value: this.state.email,\n        onChangeText: function onChangeText(text) {\n          _this2.setState({\n            email: text\n          });\n        },\n        placeholder: \"Email\",\n        keyboardType: \"email-address\",\n        autoCapitalize: \"none\",\n        autoCorrect: false,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 9\n        }\n      }), React.createElement(View, {\n        style: {\n          paddingTop: 10\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 9\n        }\n      }), React.createElement(TextInput, {\n        style: {\n          width: 200,\n          height: 40,\n          borderWidth: 1\n        },\n        value: this.state.password,\n        onChangeText: function onChangeText(text) {\n          _this2.setState({\n            password: text\n          });\n        },\n        placeholder: \"Password\",\n        secureTextEntry: true,\n        autoCapitalize: \"none\",\n        autoCorrect: false,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 9\n        }\n      }), React.createElement(Button, {\n        title: \"Login\",\n        onPress: this.onLoginPress,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 9\n        }\n      }), React.createElement(Button, {\n        title: \"Create account...\",\n        onPress: this.onCreateAccountPress,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 9\n        }\n      }), React.createElement(Button, {\n        title: \"Forgot Password...\",\n        onPress: this.onForgotPasswordPress,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 9\n        }\n      }));\n    }\n  }]);\n\n  return LogInScreen;\n}(Component);\n\nexport { LogInScreen as default };","map":{"version":3,"sources":["C:/Users/s4397674/Documents/PP/test/components/auth/LogInScreen.js"],"names":["React","Component","NavigationActions","StackActions","LogInScreen","props","onLoginPress","firebase","auth","signInWithEmailAndPassword","state","email","password","then","error","Alert","alert","message","onCreateAccountPress","navActions","reset","index","actions","navigate","routeName","navigation","dispatch","onForgotPasswordPress","paddingTop","alignItems","width","height","borderWidth","text","setState"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { View, Text, TextInput, Button } from \"react-native\";\r\nimport { NavigationActions, StackActions } from \"react-navigation\";\r\n\r\nexport default class LogInScreen extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      email: \"\",\r\n      password: \"\",\r\n    };\r\n  }\r\n  onLoginPress = () => {\r\n    firebase\r\n      .auth()\r\n      .signInWithEmailAndPassword(this.state.email, this.state.password)\r\n      .then(\r\n        () => {},\r\n        (error) => {\r\n          Alert.alert(error.message);\r\n        }\r\n      );\r\n  };\r\n\r\n  onCreateAccountPress = () => {\r\n    var navActions = StackActions.reset({\r\n      index: 0,\r\n      actions: [NavigationActions.navigate({ routeName: \"Signup\" })],\r\n    });\r\n    this.props.navigation.dispatch(navActions);\r\n  };\r\n\r\n  onForgotPasswordPress = () => {\r\n    var navActions = NavigationActions.reset({\r\n      index: 0,\r\n      actions: [NavigationActions.navigate({ routeName: \"ForgotPassword\" })],\r\n    });\r\n    this.props.navigation.dispatch(navActions);\r\n  };\r\n  render() {\r\n    return (\r\n      <View style={{ paddingTop: 50, alignItems: \"center\" }}>\r\n        <Text>Login</Text>\r\n\r\n        <TextInput\r\n          style={{ width: 200, height: 40, borderWidth: 1 }}\r\n          value={this.state.email}\r\n          onChangeText={(text) => {\r\n            this.setState({ email: text });\r\n          }}\r\n          placeholder=\"Email\"\r\n          keyboardType=\"email-address\"\r\n          autoCapitalize=\"none\"\r\n          autoCorrect={false}\r\n        />\r\n\r\n        <View style={{ paddingTop: 10 }} />\r\n\r\n        <TextInput\r\n          style={{ width: 200, height: 40, borderWidth: 1 }}\r\n          value={this.state.password}\r\n          onChangeText={(text) => {\r\n            this.setState({ password: text });\r\n          }}\r\n          placeholder=\"Password\"\r\n          secureTextEntry={true}\r\n          autoCapitalize=\"none\"\r\n          autoCorrect={false}\r\n        />\r\n\r\n        <Button title=\"Login\" onPress={this.onLoginPress} />\r\n        <Button title=\"Create account...\" onPress={this.onCreateAccountPress} />\r\n        <Button\r\n          title=\"Forgot Password...\"\r\n          onPress={this.onForgotPasswordPress}\r\n        />\r\n      </View>\r\n    );\r\n  }\r\n}\r\n\r\n// const style = StyleSheet.create({});\r\n"]},"metadata":{},"sourceType":"module"}