{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\s4397674\\\\Documents\\\\PP\\\\test\\\\components\\\\auth\\\\LogInScreen.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { NavigationActions, StackActions } from \"react-navigation\";\nimport * as firebase from \"firebase\";\n\nvar LogInScreen = function (_Component) {\n  _inherits(LogInScreen, _Component);\n\n  var _super = _createSuper(LogInScreen);\n\n  function LogInScreen(props) {\n    var _this;\n\n    _classCallCheck(this, LogInScreen);\n\n    _this = _super.call(this, props);\n\n    _this.onLoginPress = function () {\n      if (_this.state.email.length === \"\" && _this.state.password.length === \"\") {\n        Alert.alert(\"Enter details to signin!\");\n        return;\n      } else {\n        _this.setState({\n          isLoading: true\n        });\n\n        firebase.auth().signInWithEmailAndPassword(_this.state.email, _this.state.password).then(function () {\n          _this.setState({\n            isLoading: false,\n            email: \"\",\n            password: \"\"\n          });\n        }, function (error) {\n          Alert.alert(error.message);\n          return;\n        });\n      }\n    };\n\n    _this.onCreateAccountPress = function () {\n      var navActions = StackActions.reset({\n        index: 0,\n        actions: [NavigationActions.navigate({\n          routeName: \"SignUp\"\n        })]\n      });\n\n      _this.props.navigation.dispatch(navActions);\n    };\n\n    _this.onForgotPasswordPress = function () {\n      var navActions = StackActions.reset({\n        index: 0,\n        actions: [NavigationActions.navigate({\n          routeName: \"ForgotPassword\"\n        })]\n      });\n\n      _this.props.navigation.dispatch(navActions);\n    };\n\n    _this.state = {\n      email: \"\",\n      password: \"\",\n      isLoading: false\n    };\n    return _this;\n  }\n\n  _createClass(LogInScreen, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      if (this.state.isLoading) {\n        return React.createElement(View, {\n          style: styles.preloader,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 9\n          }\n        }, React.createElement(ActivityIndicator, {\n          size: \"large\",\n          color: \"#9E9E9E\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 11\n          }\n        }));\n      } else {\n        return React.createElement(View, {\n          style: styles.container,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 9\n          }\n        }, React.createElement(ImageBackground, {\n          source: require(\"../../assets/BackgroundOrange.png\"),\n          style: styles.backgroundImage,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 11\n          }\n        }, React.createElement(Text, {\n          style: styles.HeadingText,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 13\n          }\n        }, \"Login\"), React.createElement(TextInput, {\n          style: styles.inputStyle,\n          value: this.state.email,\n          onChangeText: function onChangeText(text) {\n            _this2.setState({\n              email: text\n            });\n          },\n          placeholder: \"Email\",\n          keyboardType: \"email-address\",\n          autoCapitalize: \"none\",\n          autoCorrect: false,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 13\n          }\n        }), React.createElement(View, {\n          style: {\n            paddingTop: 10\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 13\n          }\n        }), React.createElement(TextInput, {\n          style: styles.inputStyle,\n          value: this.state.password,\n          onChangeText: function onChangeText(text) {\n            _this2.setState({\n              password: text\n            });\n          },\n          placeholder: \"Password\",\n          secureTextEntry: true,\n          autoCapitalize: \"none\",\n          autoCorrect: false,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 13\n          }\n        }), React.createElement(View, {\n          style: styles.SignInButtons,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 13\n          }\n        }, React.createElement(TouchableOpacity, {\n          style: styles.loginText,\n          onPress: function onPress() {\n            return _this2.onLoginPress();\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 15\n          }\n        }, React.createElement(Text, {\n          style: styles.customBtnText,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 17\n          }\n        }, \"Login\")), React.createElement(TouchableOpacity, {\n          style: styles.loginText,\n          onPress: function onPress() {\n            return _this2.props.navigation.navigate(\"Signup\");\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 15\n          }\n        }, React.createElement(Text, {\n          style: styles.customBtnText,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 17\n          }\n        }, \"Create Account\")), React.createElement(TouchableOpacity, {\n          style: styles.loginText,\n          onPress: function onPress() {\n            return _this2.props.navigation.navigate(\"ForgotPassword\");\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 15\n          }\n        }, React.createElement(Text, {\n          style: styles.customBtnText,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 17\n          }\n        }, \"Forgot Password\")))));\n      }\n    }\n  }]);\n\n  return LogInScreen;\n}(Component);\n\nexport { LogInScreen as default };\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n    backgroundColor: \"#fff\"\n  },\n  inputStyle: {\n    width: \"65%\",\n    marginBottom: 10,\n    paddingBottom: 15,\n    alignSelf: \"center\",\n    borderColor: \"#FFFFFF\",\n    borderBottomWidth: 1,\n    borderRadius: 5,\n    fontSize: 18,\n    textAlign: \"center\"\n  },\n  loginText: {\n    color: \"#990000\",\n    marginTop: 20,\n    textAlign: \"center\",\n    flexDirection: \"column\",\n    backgroundColor: \"#FFE5CC\",\n    borderRadius: 5,\n    marginLeft: 15,\n    marginBottom: 10,\n    marginTop: 5,\n    width: 150,\n    height: 30,\n    flexDirection: \"column\"\n  },\n  preloader: {\n    left: 0,\n    right: 0,\n    top: 0,\n    bottom: 0,\n    position: \"absolute\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    backgroundColor: \"#fff\"\n  },\n  backgroundImage: {\n    flex: 1,\n    resizeMode: \"cover\",\n    justifyContent: \"center\"\n  },\n  HeadingText: {\n    fontSize: 30,\n    fontWeight: \"500\",\n    color: \"#990000\",\n    textAlign: \"center\",\n    marginBottom: 40\n  },\n  customBtnText: {\n    fontSize: 20,\n    fontWeight: \"400\",\n    color: \"#990000\",\n    textAlign: \"center\"\n  },\n  customBtnBG: {\n    backgroundColor: \"#FFE5CC\",\n    borderRadius: 5,\n    marginLeft: 5,\n    marginBottom: 5,\n    marginTop: 5,\n    width: 100,\n    height: 40,\n    flexDirection: \"column\"\n  },\n  SignInButtons: {\n    margin: 20,\n    alignItems: \"center\",\n    alignContent: \"center\"\n  }\n});","map":{"version":3,"sources":["C:/Users/s4397674/Documents/PP/test/components/auth/LogInScreen.js"],"names":["React","Component","NavigationActions","StackActions","firebase","LogInScreen","props","onLoginPress","state","email","length","password","Alert","alert","setState","isLoading","auth","signInWithEmailAndPassword","then","error","message","onCreateAccountPress","navActions","reset","index","actions","navigate","routeName","navigation","dispatch","onForgotPasswordPress","styles","preloader","container","require","backgroundImage","HeadingText","inputStyle","text","paddingTop","SignInButtons","loginText","customBtnText","StyleSheet","create","flex","display","flexDirection","justifyContent","backgroundColor","width","marginBottom","paddingBottom","alignSelf","borderColor","borderBottomWidth","borderRadius","fontSize","textAlign","color","marginTop","marginLeft","height","left","right","top","bottom","position","alignItems","resizeMode","fontWeight","customBtnBG","margin","alignContent"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport {\r\n  View,\r\n  Text,\r\n  TextInput,\r\n  Alert,\r\n  ActivityIndicator,\r\n  StyleSheet,\r\n  ImageBackground,\r\n  TouchableOpacity,\r\n} from \"react-native\";\r\nimport { NavigationActions, StackActions } from \"react-navigation\";\r\nimport * as firebase from \"firebase\";\r\n\r\nexport default class LogInScreen extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      email: \"\",\r\n      password: \"\",\r\n      isLoading: false,\r\n    };\r\n  }\r\n  onLoginPress = () => {\r\n    if (this.state.email.length === \"\" && this.state.password.length === \"\") {\r\n      Alert.alert(\"Enter details to signin!\");\r\n      return;\r\n    } else {\r\n      this.setState({\r\n        isLoading: true,\r\n      });\r\n      firebase\r\n        .auth()\r\n        .signInWithEmailAndPassword(this.state.email, this.state.password)\r\n        .then(\r\n          () => {\r\n            this.setState({\r\n              isLoading: false,\r\n              email: \"\",\r\n              password: \"\",\r\n            });\r\n          },\r\n          (error) => {\r\n            Alert.alert(error.message);\r\n            return;\r\n          }\r\n        );\r\n    }\r\n  };\r\n\r\n  onCreateAccountPress = () => {\r\n    // NavigationActions.navigate(\"SignUp\");\r\n    var navActions = StackActions.reset({\r\n      index: 0,\r\n      actions: [NavigationActions.navigate({ routeName: \"SignUp\" })],\r\n    });\r\n    this.props.navigation.dispatch(navActions);\r\n  };\r\n\r\n  onForgotPasswordPress = () => {\r\n    var navActions = StackActions.reset({\r\n      index: 0,\r\n      actions: [NavigationActions.navigate({ routeName: \"ForgotPassword\" })],\r\n    });\r\n    this.props.navigation.dispatch(navActions);\r\n  };\r\n  render() {\r\n    if (this.state.isLoading) {\r\n      return (\r\n        <View style={styles.preloader}>\r\n          <ActivityIndicator size=\"large\" color=\"#9E9E9E\" />\r\n        </View>\r\n      );\r\n    } else {\r\n      return (\r\n        <View style={styles.container}>\r\n          <ImageBackground\r\n            source={require(\"../../assets/BackgroundOrange.png\")}\r\n            style={styles.backgroundImage}\r\n          >\r\n            <Text style={styles.HeadingText}>Login</Text>\r\n\r\n            <TextInput\r\n              style={styles.inputStyle}\r\n              value={this.state.email}\r\n              onChangeText={(text) => {\r\n                this.setState({ email: text });\r\n              }}\r\n              placeholder=\"Email\"\r\n              keyboardType=\"email-address\"\r\n              autoCapitalize=\"none\"\r\n              autoCorrect={false}\r\n            />\r\n\r\n            <View style={{ paddingTop: 10 }} />\r\n\r\n            <TextInput\r\n              style={styles.inputStyle}\r\n              value={this.state.password}\r\n              onChangeText={(text) => {\r\n                this.setState({ password: text });\r\n              }}\r\n              placeholder=\"Password\"\r\n              secureTextEntry={true}\r\n              autoCapitalize=\"none\"\r\n              autoCorrect={false}\r\n            />\r\n            <View style={styles.SignInButtons}>\r\n              <TouchableOpacity\r\n                style={styles.loginText}\r\n                onPress={() => this.onLoginPress()}\r\n                // containerStyle={{ paddingTop: 10 }}\r\n              >\r\n                <Text style={styles.customBtnText}>Login</Text>\r\n              </TouchableOpacity>\r\n\r\n              <TouchableOpacity\r\n                style={styles.loginText}\r\n                onPress={() => this.props.navigation.navigate(\"Signup\")}\r\n              >\r\n                <Text style={styles.customBtnText}>Create Account</Text>\r\n              </TouchableOpacity>\r\n\r\n              <TouchableOpacity\r\n                style={styles.loginText}\r\n                onPress={() => this.props.navigation.navigate(\"ForgotPassword\")}\r\n              >\r\n                <Text style={styles.customBtnText}>Forgot Password</Text>\r\n              </TouchableOpacity>\r\n            </View>\r\n          </ImageBackground>\r\n        </View>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    justifyContent: \"center\",\r\n    backgroundColor: \"#fff\",\r\n  },\r\n  inputStyle: {\r\n    width: \"65%\",\r\n    marginBottom: 10,\r\n    paddingBottom: 15,\r\n    alignSelf: \"center\",\r\n    borderColor: \"#FFFFFF\",\r\n    borderBottomWidth: 1,\r\n    borderRadius: 5,\r\n    fontSize: 18,\r\n    textAlign: \"center\",\r\n  },\r\n  loginText: {\r\n    color: \"#990000\",\r\n    marginTop: 20,\r\n    textAlign: \"center\",\r\n    flexDirection: \"column\",\r\n    backgroundColor: \"#FFE5CC\",\r\n    borderRadius: 5,\r\n    marginLeft: 15,\r\n    marginBottom: 10,\r\n    marginTop: 5,\r\n    width: 150,\r\n    height: 30,\r\n    flexDirection: \"column\",\r\n  },\r\n  preloader: {\r\n    left: 0,\r\n    right: 0,\r\n    top: 0,\r\n    bottom: 0,\r\n    position: \"absolute\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    backgroundColor: \"#fff\",\r\n  },\r\n  backgroundImage: {\r\n    flex: 1,\r\n    resizeMode: \"cover\",\r\n    justifyContent: \"center\",\r\n  },\r\n  HeadingText: {\r\n    fontSize: 30,\r\n    fontWeight: \"500\",\r\n    color: \"#990000\",\r\n    textAlign: \"center\",\r\n    marginBottom: 40,\r\n  },\r\n  customBtnText: {\r\n    fontSize: 20,\r\n    fontWeight: \"400\",\r\n    color: \"#990000\",\r\n    textAlign: \"center\",\r\n  },\r\n  customBtnBG: {\r\n    backgroundColor: \"#FFE5CC\",\r\n    borderRadius: 5,\r\n    marginLeft: 5,\r\n    marginBottom: 5,\r\n    marginTop: 5,\r\n    width: 100,\r\n    height: 40,\r\n    flexDirection: \"column\",\r\n  },\r\n  SignInButtons: {\r\n    margin: 20,\r\n    alignItems: \"center\",\r\n    alignContent: \"center\",\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}