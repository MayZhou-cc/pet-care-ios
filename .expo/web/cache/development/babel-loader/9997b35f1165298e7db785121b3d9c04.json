{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\s4397674\\\\Documents\\\\PP\\\\test\\\\navigation\\\\MainTabNavigation.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport { Ionicons } from \"@expo/vector-icons\";\nimport { TabNavigator, TabBarBottom, createTabNavigator } from \"react-navigation\";\nimport Design from \"../src/firebase/Design\";\nimport HomeScreen from \"../components/HomeScreen\";\n\nvar MainTabNavigator = function (_Component) {\n  _inherits(MainTabNavigator, _Component);\n\n  var _super = _createSuper(MainTabNavigator);\n\n  function MainTabNavigator(props) {\n    _classCallCheck(this, MainTabNavigator);\n\n    return _super.call(this, props);\n  }\n\n  _createClass(MainTabNavigator, [{\n    key: \"render\",\n    value: function render() {\n      var tabs = TabNavigator({\n        Home: {\n          screen: HomeScreen\n        }\n      }, {\n        navigationOptions: function navigationOptions(_ref) {\n          var navigation = _ref.navigation;\n          return {\n            tabBarIcon: function tabBarIcon(_ref2) {\n              var focused = _ref2.focused;\n              var routeName = navigation.state.routeName;\n              var iconName;\n\n              switch (routeName) {\n                case \"Home\":\n                  iconName = Platform.OS === \"ios\" ? \"ios-information-circle\" + (focused ? \"\" : \"-outline\") : \"md-information-circle\";\n                  break;\n              }\n\n              return React.createElement(Ionicons, {\n                name: iconName,\n                size: 28,\n                style: {\n                  marginBottom: -3\n                },\n                color: focused ? Design.tabIconSelected : Design.tabIconDefault,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 37,\n                  columnNumber: 15\n                }\n              });\n            }\n          };\n        },\n        tabBarComponent: TabBarBottom,\n        tabBarPosition: \"bottom\",\n        animationEnabled: false,\n        swipeEnabled: false\n      });\n      return React.createElement(Tabs, {\n        navigation: this.props.navigation,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 12\n        }\n      });\n    }\n  }]);\n\n  return MainTabNavigator;\n}(Component);\n\nexport { MainTabNavigator as default };","map":{"version":3,"sources":["C:/Users/s4397674/Documents/PP/test/navigation/MainTabNavigation.js"],"names":["React","Component","Ionicons","TabNavigator","TabBarBottom","createTabNavigator","Design","HomeScreen","MainTabNavigator","props","tabs","Home","screen","navigationOptions","navigation","tabBarIcon","focused","routeName","state","iconName","Platform","OS","marginBottom","tabIconSelected","tabIconDefault","tabBarComponent","tabBarPosition","animationEnabled","swipeEnabled"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AAEA,SAASC,QAAT,QAAyB,oBAAzB;AACA,SACEC,YADF,EAEEC,YAFF,EAGEC,kBAHF,QAIO,kBAJP;AAKA,OAAOC,MAAP;AACA,OAAOC,UAAP;;IAIqBC,gB;;;;;AACnB,4BAAYC,KAAZ,EAAmB;AAAA;;AAAA,6BACXA,KADW;AAElB;;;;6BACQ;AACP,UAAMC,IAAI,GAAGP,YAAY,CACvB;AACEQ,QAAAA,IAAI,EAAE;AAAEC,UAAAA,MAAM,EAAEL;AAAV;AADR,OADuB,EAIvB;AACEM,QAAAA,iBAAiB,EAAE;AAAA,cAAGC,UAAH,QAAGA,UAAH;AAAA,iBAAqB;AACtCC,YAAAA,UAAU,EAAE,2BAAiB;AAAA,kBAAdC,OAAc,SAAdA,OAAc;AAAA,kBACnBC,SADmB,GACLH,UAAU,CAACI,KADN,CACnBD,SADmB;AAE3B,kBAAIE,QAAJ;;AACA,sBAAQF,SAAR;AACE,qBAAK,MAAL;AACEE,kBAAAA,QAAQ,GACNC,QAAQ,CAACC,EAAT,KAAgB,KAAhB,+BAC6BL,OAAO,GAAG,EAAH,GAAQ,UAD5C,IAEI,uBAHN;AAIA;AANJ;;AAQA,qBACE,oBAAC,QAAD;AACE,gBAAA,IAAI,EAAEG,QADR;AAEE,gBAAA,IAAI,EAAE,EAFR;AAGE,gBAAA,KAAK,EAAE;AAAEG,kBAAAA,YAAY,EAAE,CAAC;AAAjB,iBAHT;AAIE,gBAAA,KAAK,EAAEN,OAAO,GAAGV,MAAM,CAACiB,eAAV,GAA4BjB,MAAM,CAACkB,cAJnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF;AAQD;AApBqC,WAArB;AAAA,SADrB;AAuBEC,QAAAA,eAAe,EAAErB,YAvBnB;AAwBEsB,QAAAA,cAAc,EAAE,QAxBlB;AAyBEC,QAAAA,gBAAgB,EAAE,KAzBpB;AA0BEC,QAAAA,YAAY,EAAE;AA1BhB,OAJuB,CAAzB;AAiCA,aAAO,oBAAC,IAAD;AAAM,QAAA,UAAU,EAAE,KAAKnB,KAAL,CAAWK,UAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACD;;;;EAvC2Cb,S;;SAAzBO,gB","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Platform } from \"react-native\";\r\nimport { Ionicons } from \"@expo/vector-icons\";\r\nimport {\r\n  TabNavigator,\r\n  TabBarBottom,\r\n  createTabNavigator,\r\n} from \"react-navigation\";\r\nimport Design from \"../src/firebase/Design\";\r\nimport HomeScreen from \"../components/HomeScreen\";\r\n\r\n// const TabNavigation = createTabNavigator();\r\n\r\nexport default class MainTabNavigator extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n  render() {\r\n    const tabs = TabNavigator(\r\n      {\r\n        Home: { screen: HomeScreen },\r\n      },\r\n      {\r\n        navigationOptions: ({ navigation }) => ({\r\n          tabBarIcon: ({ focused }) => {\r\n            const { routeName } = navigation.state;\r\n            let iconName;\r\n            switch (routeName) {\r\n              case \"Home\":\r\n                iconName =\r\n                  Platform.OS === \"ios\"\r\n                    ? `ios-information-circle${focused ? \"\" : \"-outline\"}`\r\n                    : \"md-information-circle\";\r\n                break;\r\n            }\r\n            return (\r\n              <Ionicons\r\n                name={iconName}\r\n                size={28}\r\n                style={{ marginBottom: -3 }}\r\n                color={focused ? Design.tabIconSelected : Design.tabIconDefault}\r\n              />\r\n            );\r\n          },\r\n        }),\r\n        tabBarComponent: TabBarBottom,\r\n        tabBarPosition: \"bottom\",\r\n        animationEnabled: false,\r\n        swipeEnabled: false,\r\n      }\r\n    );\r\n    return <Tabs navigation={this.props.navigation} />;\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}